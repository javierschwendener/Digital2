

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 14:17:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.31
    23                           ; Generated 13/10/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCON	set	20
   293  0019                     _TXREG	set	25
   294  001A                     _RCREG	set	26
   295  000C                     _PIR1bits	set	12
   296  0018                     _RCSTA	set	24
   297  000B                     _INTCON	set	11
   298  0009                     _PORTE	set	9
   299  0008                     _PORTD	set	8
   300  0007                     _PORTC	set	7
   301  0006                     _PORTB	set	6
   302  0005                     _PORTA	set	5
   303  00C4                     _CREN	set	196
   304  00C7                     _SPEN	set	199
   305  0094                     _SSPSTAT	set	148
   306  0093                     _SSPADD	set	147
   307  0091                     _SSPCON2	set	145
   308  0098                     _TXSTAbits	set	152
   309  0098                     _TXSTA	set	152
   310  0099                     _SPBRG	set	153
   311  009A                     _SPBRGH	set	154
   312  008C                     _PIE1	set	140
   313  0089                     _TRISE	set	137
   314  0088                     _TRISD	set	136
   315  0087                     _TRISC	set	135
   316  0086                     _TRISB	set	134
   317  0085                     _TRISA	set	133
   318  048C                     _ACKEN	set	1164
   319  048D                     _ACKDT	set	1165
   320  048B                     _RCEN	set	1163
   321  048A                     _PEN	set	1162
   322  0489                     _RSEN	set	1161
   323  0488                     _SEN	set	1160
   324  043C                     _TRISC4	set	1084
   325  043B                     _TRISC3	set	1083
   326  04C1                     _TRMT	set	1217
   327  04C5                     _TXEN	set	1221
   328  043E                     _TRISC6	set	1086
   329  043F                     _TRISC7	set	1087
   330  04C4                     _SYNC	set	1220
   331  04C2                     _BRGH	set	1218
   332  048E                     _ACKSTAT	set	1166
   333  0187                     _BAUDCTL	set	391
   334  0189                     _ANSELH	set	393
   335  0188                     _ANSEL	set	392
   336                           
   337                           	psect	cinit
   338  000F                     start_initialization:	
   339                           ; #config settings
   340                           
   341  000F                     __initialization:
   342                           
   343                           ; Clear objects allocated to COMMON
   344  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   345  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   346  0011                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  0011                     __end_of__initialization:
   350  0011  0183               	clrf	3
   351  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMMON
   354  0079                     __pbssCOMMON:
   355  0079                     _iread:
   356  0079                     	ds	1
   357  007A                     _uread:
   358  007A                     	ds	1
   359                           
   360                           	psect	cstackCOMMON
   361  0070                     __pcstackCOMMON:
   362  0070                     ?_I2C_Master_Start:
   363  0070                     ?_I2C_Master_Wait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_I2C_Master_Stop:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_setup:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_isr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ??_isr:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	3
   384  0073                     ??_I2C_Master_Start:
   385  0073                     ?_I2C_Master_Write:	
   386                           ; 1 bytes @ 0x3
   387                           
   388  0073                     ??_I2C_Master_Wait:	
   389                           ; 1 bytes @ 0x3
   390                           
   391  0073                     ??_I2C_Master_Stop:	
   392                           ; 1 bytes @ 0x3
   393                           
   394  0073                     ??_setup:	
   395                           ; 1 bytes @ 0x3
   396                           
   397  0073                     ??___lldiv:	
   398                           ; 1 bytes @ 0x3
   399                           
   400  0073                     ?_I2C_Master_Read:	
   401                           ; 1 bytes @ 0x3
   402                           
   403  0073                     I2C_Master_Write@d:	
   404                           ; 2 bytes @ 0x3
   405                           
   406  0073                     I2C_Master_Read@a:	
   407                           ; 2 bytes @ 0x3
   408                           
   409                           
   410                           ; 2 bytes @ 0x3
   411  0073                     	ds	1
   412  0074                     ___lldiv@quotient:
   413                           
   414                           ; 4 bytes @ 0x4
   415  0074                     	ds	1
   416  0075                     ??_I2C_Master_Write:
   417  0075                     ??_I2C_Master_Read:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           ; 1 bytes @ 0x5
   422  0075                     	ds	2
   423  0077                     I2C_Master_Read@temp:
   424                           
   425                           ; 2 bytes @ 0x7
   426  0077                     	ds	1
   427  0078                     ___lldiv@counter:
   428                           
   429                           ; 1 bytes @ 0x8
   430  0078                     	ds	1
   431                           
   432                           	psect	cstackBANK0
   433  0020                     __pcstackBANK0:
   434  0020                     ?___lldiv:
   435  0020                     ___lldiv@divisor:	
   436                           ; 4 bytes @ 0x0
   437                           
   438                           
   439                           ; 4 bytes @ 0x0
   440  0020                     	ds	4
   441  0024                     ___lldiv@dividend:
   442                           
   443                           ; 4 bytes @ 0x4
   444  0024                     	ds	4
   445  0028                     ?_I2C_Master_Init:
   446  0028                     I2C_Master_Init@c:	
   447                           ; 1 bytes @ 0x8
   448                           
   449                           
   450                           ; 4 bytes @ 0x8
   451  0028                     	ds	4
   452  002C                     ??_I2C_Master_Init:
   453                           
   454                           ; 1 bytes @ 0xC
   455  002C                     	ds	4
   456  0030                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x10
   459  0030                     	ds	3
   460                           
   461                           	psect	maintext
   462  0015                     __pmaintext:	
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 53 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : B00/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       3       0       0       0
   485 ;;      Totals:         0       3       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels required when called:    3
   488 ;; This function calls:
   489 ;;		_I2C_Master_Init
   490 ;;		_I2C_Master_Read
   491 ;;		_I2C_Master_Start
   492 ;;		_I2C_Master_Stop
   493 ;;		_I2C_Master_Wait
   494 ;;		_I2C_Master_Write
   495 ;;		_setup
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _main
   503  0015                     _main:
   504  0015                     l1030:	
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   507                           
   508                           
   509                           ;main.c: 54:     setup();
   510  0015  120A  118A  2152  120A  118A  	fcall	_setup
   511                           
   512                           ;main.c: 55:     I2C_Master_Init(100000);
   513  001A  3000               	movlw	0
   514  001B  1283               	bcf	3,5	;RP0=0, select bank0
   515  001C  1303               	bcf	3,6	;RP1=0, select bank0
   516  001D  00AB               	movwf	I2C_Master_Init@c+3
   517  001E  3001               	movlw	1
   518  001F  00AA               	movwf	I2C_Master_Init@c+2
   519  0020  3086               	movlw	134
   520  0021  00A9               	movwf	I2C_Master_Init@c+1
   521  0022  30A0               	movlw	160
   522  0023  00A8               	movwf	I2C_Master_Init@c
   523  0024  120A  118A  20EB  120A  118A  	fcall	_I2C_Master_Init
   524  0029                     l80:	
   525                           ;main.c: 56:     while (1) {
   526                           
   527                           
   528                           ;main.c: 57:         I2C_Master_Start();
   529  0029  120A  118A  21AC  120A  118A  	fcall	_I2C_Master_Start
   530                           
   531                           ;main.c: 58:         I2C_Master_Write(0x29);
   532  002E  3029               	movlw	41
   533  002F  00F3               	movwf	I2C_Master_Write@d
   534  0030  3000               	movlw	0
   535  0031  00F4               	movwf	I2C_Master_Write@d+1
   536  0032  120A  118A  2199  120A  118A  	fcall	_I2C_Master_Write
   537                           
   538                           ;main.c: 59:         I2C_Master_Wait();
   539  0037  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   540  003C                     l1032:
   541                           
   542                           ;main.c: 60:         if (ACKSTAT == 0){
   543  003C  1683               	bsf	3,5	;RP0=1, select bank1
   544  003D  1303               	bcf	3,6	;RP1=0, select bank1
   545  003E  1B11               	btfsc	17,6	;volatile
   546  003F  2841               	goto	u461
   547  0040  2842               	goto	u460
   548  0041                     u461:
   549  0041  2856               	goto	l1036
   550  0042                     u460:
   551  0042                     l1034:
   552                           
   553                           ;main.c: 61:             iread = I2C_Master_Read(0);
   554  0042  3000               	movlw	0
   555  0043  00F3               	movwf	I2C_Master_Read@a
   556  0044  00F4               	movwf	I2C_Master_Read@a+1
   557  0045  120A  118A  2125  120A  118A  	fcall	_I2C_Master_Read
   558  004A  0873               	movf	?_I2C_Master_Read,w
   559  004B  1283               	bcf	3,5	;RP0=0, select bank0
   560  004C  1303               	bcf	3,6	;RP1=0, select bank0
   561  004D  00B0               	movwf	??_main
   562  004E  0830               	movf	??_main,w
   563  004F  00F9               	movwf	_iread
   564                           
   565                           ;main.c: 62:             I2C_Master_Stop();
   566  0050  120A  118A  21A3  120A  118A  	fcall	_I2C_Master_Stop
   567                           
   568                           ;main.c: 63:         }
   569  0055  285B               	goto	l1038
   570  0056                     l1036:
   571                           
   572                           ;main.c: 65:             I2C_Master_Stop();
   573  0056  120A  118A  21A3  120A  118A  	fcall	_I2C_Master_Stop
   574  005B                     l1038:
   575                           
   576                           ;main.c: 67:         _delay((unsigned long)((200)*(4000000/4000.0)));
   577  005B  3002               	movlw	2
   578  005C  1283               	bcf	3,5	;RP0=0, select bank0
   579  005D  1303               	bcf	3,6	;RP1=0, select bank0
   580  005E  00B2               	movwf	??_main+2
   581  005F  3004               	movlw	4
   582  0060  00B1               	movwf	??_main+1
   583  0061  30B9               	movlw	185
   584  0062  00B0               	movwf	??_main
   585  0063                     u487:
   586  0063  0BB0               	decfsz	??_main,f
   587  0064  2863               	goto	u487
   588  0065  0BB1               	decfsz	??_main+1,f
   589  0066  2863               	goto	u487
   590  0067  0BB2               	decfsz	??_main+2,f
   591  0068  2863               	goto	u487
   592  0069  286A               	nop2
   593  006A                     l1040:
   594                           
   595                           ;main.c: 71:         if (TXSTAbits.TRMT == 1){
   596  006A  1683               	bsf	3,5	;RP0=1, select bank1
   597  006B  1303               	bcf	3,6	;RP1=0, select bank1
   598  006C  1C98               	btfss	24,1	;volatile
   599  006D  286F               	goto	u471
   600  006E  2870               	goto	u470
   601  006F                     u471:
   602  006F  2829               	goto	l80
   603  0070                     u470:
   604  0070                     l1042:
   605                           
   606                           ;main.c: 72:             TXREG = 43;
   607  0070  302B               	movlw	43
   608  0071  1283               	bcf	3,5	;RP0=0, select bank0
   609  0072  1303               	bcf	3,6	;RP1=0, select bank0
   610  0073  0099               	movwf	25	;volatile
   611                           
   612                           ;main.c: 73:             _delay((unsigned long)((5)*(4000000/4000.0)));
   613  0074  3007               	movlw	7
   614  0075  1283               	bcf	3,5	;RP0=0, select bank0
   615  0076  1303               	bcf	3,6	;RP1=0, select bank0
   616  0077  00B1               	movwf	??_main+1
   617  0078  307C               	movlw	124
   618  0079  00B0               	movwf	??_main
   619  007A                     u497:
   620  007A  0BB0               	decfsz	??_main,f
   621  007B  287A               	goto	u497
   622  007C  0BB1               	decfsz	??_main+1,f
   623  007D  287A               	goto	u497
   624  007E  0000               	nop
   625  007F  2829               	goto	l80
   626  0080  120A  118A  280C   	ljmp	start
   627  0083                     __end_of_main:
   628                           
   629                           	psect	text1
   630  0152                     __ptext1:	
   631 ;; *************** function _setup *****************
   632 ;; Defined at:
   633 ;;		line 20 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _setup
   663  0152                     _setup:
   664  0152                     l796:	
   665                           ;incstack = 0
   666                           ; Regs used in _setup: [wreg+status,2]
   667                           
   668                           
   669                           ;main.c: 21:     PORTA = 0;
   670  0152  1283               	bcf	3,5	;RP0=0, select bank0
   671  0153  1303               	bcf	3,6	;RP1=0, select bank0
   672  0154  0185               	clrf	5	;volatile
   673                           
   674                           ;main.c: 22:     PORTB = 0;
   675  0155  0186               	clrf	6	;volatile
   676                           
   677                           ;main.c: 23:     PORTC = 0;
   678  0156  0187               	clrf	7	;volatile
   679                           
   680                           ;main.c: 24:     PORTD = 0;
   681  0157  0188               	clrf	8	;volatile
   682                           
   683                           ;main.c: 25:     PORTE = 0;
   684  0158  0189               	clrf	9	;volatile
   685                           
   686                           ;main.c: 26:     TRISA = 0;
   687  0159  1683               	bsf	3,5	;RP0=1, select bank1
   688  015A  1303               	bcf	3,6	;RP1=0, select bank1
   689  015B  0185               	clrf	5	;volatile
   690                           
   691                           ;main.c: 27:     TRISB = 0;
   692  015C  0186               	clrf	6	;volatile
   693  015D                     l798:
   694                           
   695                           ;main.c: 28:     TRISC = 0b00011000;
   696  015D  3018               	movlw	24
   697  015E  0087               	movwf	7	;volatile
   698  015F                     l800:
   699                           
   700                           ;main.c: 29:     TRISD = 0;
   701  015F  0188               	clrf	8	;volatile
   702  0160                     l802:
   703                           
   704                           ;main.c: 30:     TRISE = 0;
   705  0160  0189               	clrf	9	;volatile
   706  0161                     l804:
   707                           
   708                           ;main.c: 31:     ANSEL = 0;
   709  0161  1683               	bsf	3,5	;RP0=1, select bank3
   710  0162  1703               	bsf	3,6	;RP1=1, select bank3
   711  0163  0188               	clrf	8	;volatile
   712  0164                     l806:
   713                           
   714                           ;main.c: 32:     ANSELH = 0;
   715  0164  0189               	clrf	9	;volatile
   716  0165                     l808:
   717                           
   718                           ;main.c: 33:     INTCON = 0b11000000;
   719  0165  30C0               	movlw	192
   720  0166  008B               	movwf	11	;volatile
   721  0167                     l810:
   722                           
   723                           ;main.c: 34:     PIE1 = 0b00100000;
   724  0167  3020               	movlw	32
   725  0168  1683               	bsf	3,5	;RP0=1, select bank1
   726  0169  1303               	bcf	3,6	;RP1=0, select bank1
   727  016A  008C               	movwf	12	;volatile
   728  016B                     l812:
   729                           
   730                           ;main.c: 35:     SPBRGH = 0;
   731  016B  019A               	clrf	26	;volatile
   732                           
   733                           ;main.c: 36:     SPBRG = 25;
   734  016C  3019               	movlw	25
   735  016D  0099               	movwf	25	;volatile
   736  016E                     l814:
   737                           
   738                           ;main.c: 37:     BAUDCTL = 0;
   739  016E  1683               	bsf	3,5	;RP0=1, select bank3
   740  016F  1703               	bsf	3,6	;RP1=1, select bank3
   741  0170  0187               	clrf	7	;volatile
   742  0171                     l816:
   743                           
   744                           ;main.c: 38:     TXSTA = 0b00100100;
   745  0171  3024               	movlw	36
   746  0172  1683               	bsf	3,5	;RP0=1, select bank1
   747  0173  1303               	bcf	3,6	;RP1=0, select bank1
   748  0174  0098               	movwf	24	;volatile
   749  0175                     l818:
   750                           
   751                           ;main.c: 39:     RCSTA = 0b10010000;
   752  0175  3090               	movlw	144
   753  0176  1283               	bcf	3,5	;RP0=0, select bank0
   754  0177  1303               	bcf	3,6	;RP1=0, select bank0
   755  0178  0098               	movwf	24	;volatile
   756  0179                     l65:
   757  0179  0008               	return
   758  017A                     __end_of_setup:
   759                           
   760                           	psect	text2
   761  0199                     __ptext2:	
   762 ;; *************** function _I2C_Master_Write *****************
   763 ;; Defined at:
   764 ;;		line 80 in file "i2c.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  d               2    3[COMMON] unsigned int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         2       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         2       0       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    2
   785 ;; This function calls:
   786 ;;		_I2C_Master_Wait
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _I2C_Master_Write
   794  0199                     _I2C_Master_Write:
   795  0199                     l960:	
   796                           ;incstack = 0
   797                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
   798                           
   799                           
   800                           ;i2c.c: 81:     I2C_Master_Wait();
   801  0199  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   802  019E                     l962:
   803                           
   804                           ;i2c.c: 82:     SSPBUF = d;
   805  019E  0873               	movf	I2C_Master_Write@d,w
   806  019F  1283               	bcf	3,5	;RP0=0, select bank0
   807  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   808  01A1  0093               	movwf	19	;volatile
   809  01A2                     l173:
   810  01A2  0008               	return
   811  01A3                     __end_of_I2C_Master_Write:
   812                           
   813                           	psect	text3
   814  01A3                     __ptext3:	
   815 ;; *************** function _I2C_Master_Stop *****************
   816 ;; Defined at:
   817 ;;		line 75 in file "i2c.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    2
   838 ;; This function calls:
   839 ;;		_I2C_Master_Wait
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _I2C_Master_Stop
   847  01A3                     _I2C_Master_Stop:
   848  01A3                     l856:	
   849                           ;incstack = 0
   850                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
   851                           
   852                           
   853                           ;i2c.c: 76:     I2C_Master_Wait();
   854  01A3  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   855  01A8                     l858:
   856                           
   857                           ;i2c.c: 77:     PEN = 1;
   858  01A8  1683               	bsf	3,5	;RP0=1, select bank1
   859  01A9  1303               	bcf	3,6	;RP1=0, select bank1
   860  01AA  1511               	bsf	17,2	;volatile
   861  01AB                     l170:
   862  01AB  0008               	return
   863  01AC                     __end_of_I2C_Master_Stop:
   864                           
   865                           	psect	text4
   866  01AC                     __ptext4:	
   867 ;; *************** function _I2C_Master_Start *****************
   868 ;; Defined at:
   869 ;;		line 65 in file "i2c.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    2
   890 ;; This function calls:
   891 ;;		_I2C_Master_Wait
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _I2C_Master_Start
   899  01AC                     _I2C_Master_Start:
   900  01AC                     l832:	
   901                           ;incstack = 0
   902                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
   903                           
   904                           
   905                           ;i2c.c: 66:     I2C_Master_Wait();
   906  01AC  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   907  01B1                     l834:
   908                           
   909                           ;i2c.c: 67:     SEN = 1;
   910  01B1  1683               	bsf	3,5	;RP0=1, select bank1
   911  01B2  1303               	bcf	3,6	;RP1=0, select bank1
   912  01B3  1411               	bsf	17,0	;volatile
   913  01B4                     l164:
   914  01B4  0008               	return
   915  01B5                     __end_of_I2C_Master_Start:
   916                           
   917                           	psect	text5
   918  0125                     __ptext5:	
   919 ;; *************** function _I2C_Master_Read *****************
   920 ;; Defined at:
   921 ;;		line 85 in file "i2c.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  a               2    3[COMMON] unsigned short 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  temp            2    7[COMMON] unsigned short 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2    3[COMMON] unsigned short 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         2       0       0       0       0
   936 ;;      Locals:         2       0       0       0       0
   937 ;;      Temps:          2       0       0       0       0
   938 ;;      Totals:         6       0       0       0       0
   939 ;;Total ram usage:        6 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    2
   942 ;; This function calls:
   943 ;;		_I2C_Master_Wait
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _I2C_Master_Read
   951  0125                     _I2C_Master_Read:
   952  0125                     l964:	
   953                           ;incstack = 0
   954                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
   955                           
   956                           
   957                           ;i2c.c: 86:     unsigned short temp;;i2c.c: 87:     I2C_Master_Wait();
   958  0125  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   959  012A                     l966:
   960                           
   961                           ;i2c.c: 88:     RCEN = 1;
   962  012A  1683               	bsf	3,5	;RP0=1, select bank1
   963  012B  1303               	bcf	3,6	;RP1=0, select bank1
   964  012C  1591               	bsf	17,3	;volatile
   965                           
   966                           ;i2c.c: 89:     I2C_Master_Wait();
   967  012D  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   968  0132                     l968:
   969                           
   970                           ;i2c.c: 90:     temp = SSPBUF;
   971  0132  1283               	bcf	3,5	;RP0=0, select bank0
   972  0133  1303               	bcf	3,6	;RP1=0, select bank0
   973  0134  0813               	movf	19,w	;volatile
   974  0135  00F5               	movwf	??_I2C_Master_Read
   975  0136  01F6               	clrf	??_I2C_Master_Read+1
   976  0137  0875               	movf	??_I2C_Master_Read,w
   977  0138  00F7               	movwf	I2C_Master_Read@temp
   978  0139  0876               	movf	??_I2C_Master_Read+1,w
   979  013A  00F8               	movwf	I2C_Master_Read@temp+1
   980  013B                     l970:
   981                           
   982                           ;i2c.c: 91:     I2C_Master_Wait();
   983  013B  120A  118A  218C  120A  118A  	fcall	_I2C_Master_Wait
   984  0140                     l972:
   985                           
   986                           ;i2c.c: 92:     ACKDT = (a) ? 1 : 0;
   987  0140  0873               	movf	I2C_Master_Read@a,w
   988  0141  0474               	iorwf	I2C_Master_Read@a+1,w
   989  0142  1D03               	btfss	3,2
   990  0143  2945               	goto	u341
   991  0144  2949               	goto	u340
   992  0145                     u341:
   993  0145  1683               	bsf	3,5	;RP0=1, select bank1
   994  0146  1303               	bcf	3,6	;RP1=0, select bank1
   995  0147  1691               	bsf	17,5	;volatile
   996  0148  294C               	goto	u354
   997  0149                     u340:
   998  0149  1683               	bsf	3,5	;RP0=1, select bank1
   999  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1000  014B  1291               	bcf	17,5	;volatile
  1001  014C                     u354:
  1002  014C                     l974:
  1003                           
  1004                           ;i2c.c: 93:     ACKEN = 1;
  1005  014C  1611               	bsf	17,4	;volatile
  1006  014D                     l976:
  1007                           
  1008                           ;i2c.c: 94:     return temp;
  1009  014D  0878               	movf	I2C_Master_Read@temp+1,w
  1010  014E  00F4               	movwf	?_I2C_Master_Read+1
  1011  014F  0877               	movf	I2C_Master_Read@temp,w
  1012  0150  00F3               	movwf	?_I2C_Master_Read
  1013  0151                     l176:
  1014  0151  0008               	return
  1015  0152                     __end_of_I2C_Master_Read:
  1016                           
  1017                           	psect	text6
  1018  018C                     __ptext6:	
  1019 ;; *************** function _I2C_Master_Wait *****************
  1020 ;; Defined at:
  1021 ;;		line 61 in file "i2c.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;;		_I2C_Master_Start
  1047 ;;		_I2C_Master_Stop
  1048 ;;		_I2C_Master_Write
  1049 ;;		_I2C_Master_Read
  1050 ;;		_I2C_Master_RepeatedStart
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _I2C_Master_Wait
  1056  018C                     _I2C_Master_Wait:
  1057  018C                     l768:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1060                           
  1061  018C                     l158:	
  1062                           ;i2c.c: 62:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1063                           
  1064  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1065  018D  1303               	bcf	3,6	;RP1=0, select bank1
  1066  018E  1914               	btfsc	20,2	;volatile
  1067  018F  2991               	goto	u11
  1068  0190  2992               	goto	u10
  1069  0191                     u11:
  1070  0191  298C               	goto	l158
  1071  0192                     u10:
  1072  0192                     l770:
  1073  0192  0811               	movf	17,w	;volatile
  1074  0193  391F               	andlw	31
  1075  0194  1D03               	btfss	3,2
  1076  0195  2997               	goto	u21
  1077  0196  2998               	goto	u20
  1078  0197                     u21:
  1079  0197  298C               	goto	l158
  1080  0198                     u20:
  1081  0198                     l161:
  1082  0198  0008               	return
  1083  0199                     __end_of_I2C_Master_Wait:
  1084                           
  1085                           	psect	text7
  1086  00EB                     __ptext7:	
  1087 ;; *************** function _I2C_Master_Init *****************
  1088 ;; Defined at:
  1089 ;;		line 52 in file "i2c.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  c               4    8[BANK0 ] const unsigned long 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       4       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       4       0       0       0
  1106 ;;      Totals:         0       8       0       0       0
  1107 ;;Total ram usage:        8 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    2
  1110 ;; This function calls:
  1111 ;;		___lldiv
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _I2C_Master_Init
  1119  00EB                     _I2C_Master_Init:
  1120  00EB                     l1018:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;i2c.c: 53:     SSPCON = 0b00101000;
  1126  00EB  3028               	movlw	40
  1127  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1128  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1129  00EE  0094               	movwf	20	;volatile
  1130  00EF                     l1020:
  1131                           
  1132                           ;i2c.c: 54:     SSPCON2 = 0;
  1133  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1134  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1135  00F1  0191               	clrf	17	;volatile
  1136  00F2                     l1022:
  1137                           
  1138                           ;i2c.c: 55:     SSPADD = (4000000 / (4 * c)) - 1;
  1139  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1140  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1141  00F4  0828               	movf	I2C_Master_Init@c,w
  1142  00F5  00AC               	movwf	??_I2C_Master_Init
  1143  00F6  0829               	movf	I2C_Master_Init@c+1,w
  1144  00F7  00AD               	movwf	??_I2C_Master_Init+1
  1145  00F8  082A               	movf	I2C_Master_Init@c+2,w
  1146  00F9  00AE               	movwf	??_I2C_Master_Init+2
  1147  00FA  082B               	movf	I2C_Master_Init@c+3,w
  1148  00FB  00AF               	movwf	??_I2C_Master_Init+3
  1149  00FC  3002               	movlw	2
  1150  00FD                     u455:
  1151  00FD  1003               	clrc
  1152  00FE  0DAC               	rlf	??_I2C_Master_Init,f
  1153  00FF  0DAD               	rlf	??_I2C_Master_Init+1,f
  1154  0100  0DAE               	rlf	??_I2C_Master_Init+2,f
  1155  0101  0DAF               	rlf	??_I2C_Master_Init+3,f
  1156  0102                     u450:
  1157  0102  3EFF               	addlw	-1
  1158  0103  1D03               	skipz
  1159  0104  28FD               	goto	u455
  1160  0105  082F               	movf	??_I2C_Master_Init+3,w
  1161  0106  00A3               	movwf	___lldiv@divisor+3
  1162  0107  082E               	movf	??_I2C_Master_Init+2,w
  1163  0108  00A2               	movwf	___lldiv@divisor+2
  1164  0109  082D               	movf	??_I2C_Master_Init+1,w
  1165  010A  00A1               	movwf	___lldiv@divisor+1
  1166  010B  082C               	movf	??_I2C_Master_Init,w
  1167  010C  00A0               	movwf	___lldiv@divisor
  1168  010D  3000               	movlw	0
  1169  010E  00A7               	movwf	___lldiv@dividend+3
  1170  010F  303D               	movlw	61
  1171  0110  00A6               	movwf	___lldiv@dividend+2
  1172  0111  3009               	movlw	9
  1173  0112  00A5               	movwf	___lldiv@dividend+1
  1174  0113  3000               	movlw	0
  1175  0114  00A4               	movwf	___lldiv@dividend
  1176  0115  120A  118A  2083  120A  118A  	fcall	___lldiv
  1177  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1178  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1179  011C  0820               	movf	?___lldiv,w
  1180  011D  3EFF               	addlw	255
  1181  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1182  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0120  0093               	movwf	19	;volatile
  1184  0121                     l1024:
  1185                           
  1186                           ;i2c.c: 56:     SSPSTAT = 0;
  1187  0121  0194               	clrf	20	;volatile
  1188  0122                     l1026:
  1189                           
  1190                           ;i2c.c: 57:     TRISC3 = 1;
  1191  0122  1587               	bsf	7,3	;volatile
  1192  0123                     l1028:
  1193                           
  1194                           ;i2c.c: 58:     TRISC4 = 1;
  1195  0123  1607               	bsf	7,4	;volatile
  1196  0124                     l155:
  1197  0124  0008               	return
  1198  0125                     __end_of_I2C_Master_Init:
  1199                           
  1200                           	psect	text8
  1201  0083                     __ptext8:	
  1202 ;; *************** function ___lldiv *****************
  1203 ;; Defined at:
  1204 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  divisor         4    0[BANK0 ] unsigned long 
  1207 ;;  dividend        4    4[BANK0 ] unsigned long 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  quotient        4    4[COMMON] unsigned long 
  1210 ;;  counter         1    8[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  4    0[BANK0 ] unsigned long 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       8       0       0       0
  1221 ;;      Locals:         5       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0
  1223 ;;      Totals:         6       8       0       0       0
  1224 ;;Total ram usage:       14 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_I2C_Master_Init
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function ___lldiv
  1236  0083                     ___lldiv:
  1237  0083                     l994:	
  1238                           ;incstack = 0
  1239                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1240                           
  1241  0083  3000               	movlw	0
  1242  0084  00F7               	movwf	___lldiv@quotient+3
  1243  0085  3000               	movlw	0
  1244  0086  00F6               	movwf	___lldiv@quotient+2
  1245  0087  3000               	movlw	0
  1246  0088  00F5               	movwf	___lldiv@quotient+1
  1247  0089  3000               	movlw	0
  1248  008A  00F4               	movwf	___lldiv@quotient
  1249  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1250  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1251  008D  0823               	movf	___lldiv@divisor+3,w
  1252  008E  0422               	iorwf	___lldiv@divisor+2,w
  1253  008F  0421               	iorwf	___lldiv@divisor+1,w
  1254  0090  0420               	iorwf	___lldiv@divisor,w
  1255  0091  1903               	skipnz
  1256  0092  2894               	goto	u381
  1257  0093  2895               	goto	u380
  1258  0094                     u381:
  1259  0094  28E2               	goto	l1014
  1260  0095                     u380:
  1261  0095                     l996:
  1262  0095  01F8               	clrf	___lldiv@counter
  1263  0096  0AF8               	incf	___lldiv@counter,f
  1264  0097  28A5               	goto	l1000
  1265  0098                     l998:
  1266  0098  3001               	movlw	1
  1267  0099  00F3               	movwf	??___lldiv
  1268  009A                     u395:
  1269  009A  1003               	clrc
  1270  009B  0DA0               	rlf	___lldiv@divisor,f
  1271  009C  0DA1               	rlf	___lldiv@divisor+1,f
  1272  009D  0DA2               	rlf	___lldiv@divisor+2,f
  1273  009E  0DA3               	rlf	___lldiv@divisor+3,f
  1274  009F  0BF3               	decfsz	??___lldiv,f
  1275  00A0  289A               	goto	u395
  1276  00A1  3001               	movlw	1
  1277  00A2  00F3               	movwf	??___lldiv
  1278  00A3  0873               	movf	??___lldiv,w
  1279  00A4  07F8               	addwf	___lldiv@counter,f
  1280  00A5                     l1000:
  1281  00A5  1FA3               	btfss	___lldiv@divisor+3,7
  1282  00A6  28A8               	goto	u401
  1283  00A7  28A9               	goto	u400
  1284  00A8                     u401:
  1285  00A8  2898               	goto	l998
  1286  00A9                     u400:
  1287  00A9                     l1002:
  1288  00A9  3001               	movlw	1
  1289  00AA  00F3               	movwf	??___lldiv
  1290  00AB                     u415:
  1291  00AB  1003               	clrc
  1292  00AC  0DF4               	rlf	___lldiv@quotient,f
  1293  00AD  0DF5               	rlf	___lldiv@quotient+1,f
  1294  00AE  0DF6               	rlf	___lldiv@quotient+2,f
  1295  00AF  0DF7               	rlf	___lldiv@quotient+3,f
  1296  00B0  0BF3               	decfsz	??___lldiv,f
  1297  00B1  28AB               	goto	u415
  1298  00B2                     l1004:
  1299  00B2  0823               	movf	___lldiv@divisor+3,w
  1300  00B3  0227               	subwf	___lldiv@dividend+3,w
  1301  00B4  1D03               	skipz
  1302  00B5  28C0               	goto	u425
  1303  00B6  0822               	movf	___lldiv@divisor+2,w
  1304  00B7  0226               	subwf	___lldiv@dividend+2,w
  1305  00B8  1D03               	skipz
  1306  00B9  28C0               	goto	u425
  1307  00BA  0821               	movf	___lldiv@divisor+1,w
  1308  00BB  0225               	subwf	___lldiv@dividend+1,w
  1309  00BC  1D03               	skipz
  1310  00BD  28C0               	goto	u425
  1311  00BE  0820               	movf	___lldiv@divisor,w
  1312  00BF  0224               	subwf	___lldiv@dividend,w
  1313  00C0                     u425:
  1314  00C0  1C03               	skipc
  1315  00C1  28C3               	goto	u421
  1316  00C2  28C4               	goto	u420
  1317  00C3                     u421:
  1318  00C3  28D3               	goto	l1010
  1319  00C4                     u420:
  1320  00C4                     l1006:
  1321  00C4  0820               	movf	___lldiv@divisor,w
  1322  00C5  02A4               	subwf	___lldiv@dividend,f
  1323  00C6  0821               	movf	___lldiv@divisor+1,w
  1324  00C7  1C03               	skipc
  1325  00C8  0F21               	incfsz	___lldiv@divisor+1,w
  1326  00C9  02A5               	subwf	___lldiv@dividend+1,f
  1327  00CA  0822               	movf	___lldiv@divisor+2,w
  1328  00CB  1C03               	skipc
  1329  00CC  0F22               	incfsz	___lldiv@divisor+2,w
  1330  00CD  02A6               	subwf	___lldiv@dividend+2,f
  1331  00CE  0823               	movf	___lldiv@divisor+3,w
  1332  00CF  1C03               	skipc
  1333  00D0  0F23               	incfsz	___lldiv@divisor+3,w
  1334  00D1  02A7               	subwf	___lldiv@dividend+3,f
  1335  00D2                     l1008:
  1336  00D2  1474               	bsf	___lldiv@quotient,0
  1337  00D3                     l1010:
  1338  00D3  3001               	movlw	1
  1339  00D4                     u435:
  1340  00D4  1003               	clrc
  1341  00D5  0CA3               	rrf	___lldiv@divisor+3,f
  1342  00D6  0CA2               	rrf	___lldiv@divisor+2,f
  1343  00D7  0CA1               	rrf	___lldiv@divisor+1,f
  1344  00D8  0CA0               	rrf	___lldiv@divisor,f
  1345  00D9  3EFF               	addlw	-1
  1346  00DA  1D03               	skipz
  1347  00DB  28D4               	goto	u435
  1348  00DC                     l1012:
  1349  00DC  3001               	movlw	1
  1350  00DD  02F8               	subwf	___lldiv@counter,f
  1351  00DE  1D03               	btfss	3,2
  1352  00DF  28E1               	goto	u441
  1353  00E0  28E2               	goto	u440
  1354  00E1                     u441:
  1355  00E1  28A9               	goto	l1002
  1356  00E2                     u440:
  1357  00E2                     l1014:
  1358  00E2  0877               	movf	___lldiv@quotient+3,w
  1359  00E3  00A3               	movwf	?___lldiv+3
  1360  00E4  0876               	movf	___lldiv@quotient+2,w
  1361  00E5  00A2               	movwf	?___lldiv+2
  1362  00E6  0875               	movf	___lldiv@quotient+1,w
  1363  00E7  00A1               	movwf	?___lldiv+1
  1364  00E8  0874               	movf	___lldiv@quotient,w
  1365  00E9  00A0               	movwf	?___lldiv
  1366  00EA                     l298:
  1367  00EA  0008               	return
  1368  00EB                     __end_of___lldiv:
  1369                           
  1370                           	psect	text9
  1371  017A                     __ptext9:	
  1372 ;; *************** function _isr *****************
  1373 ;; Defined at:
  1374 ;;		line 46 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          3       0       0       0       0
  1391 ;;      Totals:         3       0       0       0       0
  1392 ;;Total ram usage:        3 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		Interrupt level 1
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _isr
  1403  017A                     _isr:
  1404  017A                     i1l864:
  1405                           
  1406                           ;main.c: 47:     if (PIR1bits.RCIF == 1) {
  1407  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1408  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1409  017C  1E8C               	btfss	12,5	;volatile
  1410  017D  297F               	goto	u14_21
  1411  017E  2980               	goto	u14_20
  1412  017F                     u14_21:
  1413  017F  2985               	goto	i1l75
  1414  0180                     u14_20:
  1415  0180                     i1l866:
  1416                           
  1417                           ;main.c: 48:         uread = RCREG;
  1418  0180  081A               	movf	26,w	;volatile
  1419  0181  00F0               	movwf	??_isr
  1420  0182  0870               	movf	??_isr,w
  1421  0183  00FA               	movwf	_uread
  1422  0184                     i1l868:
  1423                           
  1424                           ;main.c: 49:         PIR1bits.RCIF = 0;
  1425  0184  128C               	bcf	12,5	;volatile
  1426  0185                     i1l75:
  1427  0185  0872               	movf	??_isr+2,w
  1428  0186  008A               	movwf	10
  1429  0187  0E71               	swapf	??_isr+1,w
  1430  0188  0083               	movwf	3
  1431  0189  0EFE               	swapf	btemp,f
  1432  018A  0E7E               	swapf	btemp,w
  1433  018B  0009               	retfie
  1434  018C                     __end_of_isr:
  1435  007E                     btemp	set	126	;btemp
  1436  007E                     wtemp0	set	126
  1437                           
  1438                           	psect	intentry
  1439  0004                     __pintentry:	
  1440                           ;incstack = 0
  1441                           ; Regs used in _isr: [wreg]
  1442                           
  1443  0004                     interrupt_function:
  1444  007E                     saved_w	set	btemp
  1445  0004  00FE               	movwf	btemp
  1446  0005  0E03               	swapf	3,w
  1447  0006  00F1               	movwf	??_isr+1
  1448  0007  080A               	movf	10,w
  1449  0008  00F2               	movwf	??_isr+2
  1450  0009  120A  118A  297A   	ljmp	_isr
  1451                           
  1452                           	psect	config
  1453                           
  1454                           ;Config register CONFIG1 @ 0x2007
  1455                           ;	Oscillator Selection bits
  1456                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1457                           ;	Watchdog Timer Enable bit
  1458                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1459                           ;	Power-up Timer Enable bit
  1460                           ;	PWRTE = OFF, PWRT disabled
  1461                           ;	RE3/MCLR pin function select bit
  1462                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1463                           ;	Code Protection bit
  1464                           ;	CP = OFF, Program memory code protection is disabled
  1465                           ;	Data Code Protection bit
  1466                           ;	CPD = OFF, Data memory code protection is disabled
  1467                           ;	Brown Out Reset Selection bits
  1468                           ;	BOREN = OFF, BOR disabled
  1469                           ;	Internal External Switchover bit
  1470                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1471                           ;	Fail-Safe Clock Monitor Enabled bit
  1472                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1473                           ;	Low Voltage Programming Enable bit
  1474                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1475                           ;	In-Circuit Debugger Mode bit
  1476                           ;	DEBUG = 0x1, unprogrammed default
  1477  2007                     	org	8199
  1478  2007  20D4               	dw	8404
  1479                           
  1480                           ;Config register CONFIG2 @ 0x2008
  1481                           ;	Brown-out Reset Selection bit
  1482                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1483                           ;	Flash Program Memory Self Write Enable bits
  1484                           ;	WRT = OFF, Write protection off
  1485  2008                     	org	8200
  1486  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     761
                                             16 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                    _I2C_Master_Wait
                   _I2C_Master_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 14:17:53 2021

                       l80 0029                         l65 0179                         u10 0192  
                       u11 0191                         u20 0198                         u21 0197  
                      l161 0198                        l170 01AB                        l155 0124  
                      l164 01B4                        l173 01A2                        l158 018C  
                      l176 0151                        l800 015F                        l298 00EA  
                      l810 0167                        l802 0160                        l812 016B  
                      l804 0161                        l814 016E                        l806 0164  
                      l832 01AC                        l816 0171                        l808 0165  
                      l770 0192                        l834 01B1                        l818 0175  
                      l768 018C                        l856 01A3                        l960 0199  
                      l970 013B                        l858 01A8                        l962 019E  
                      l972 0140                        l964 0125                        l796 0152  
                      l974 014C                        l966 012A                        l798 015D  
                      l976 014D                        l968 0132                        l994 0083  
                      l996 0095                        l998 0098                        u400 00A9  
                      u401 00A8                        u420 00C4                        u340 0149  
                      u421 00C3                        u341 0145                        u415 00AB  
                      u440 00E2                        _PEN 048A                        u441 00E1  
                      u425 00C0                        u450 0102                        u354 014C  
                      u435 00D4                        u380 0095                        u460 0042  
                      u381 0094                        u461 0041                        u470 0070  
                      u455 00FD                        u471 006F                        u395 009A  
                      _SEN 0488                        u487 0063                        u497 007A  
                      _isr 017A                       l1000 00A5                       l1010 00D3  
                     l1002 00A9                       l1012 00DC                       l1004 00B2  
                     l1020 00EF                       l1006 00C4                       l1014 00E2  
                     l1022 00F2                       l1030 0015                       l1008 00D2  
                     l1024 0121                       l1040 006A                       l1032 003C  
                     l1026 0122                       l1018 00EB                       l1042 0070  
                     l1034 0042                       l1028 0123                       l1036 0056  
                     l1038 005B                       ?_isr 0070                       _BRGH 04C2  
                     _CREN 00C4                       _PIE1 008C                       _RCEN 048B  
                     i1l75 0185                       _SPEN 00C7                       _RSEN 0489  
                     _TRMT 04C1                       _TXEN 04C5                       _SYNC 04C4  
                     _main 0015                       btemp 007E                       start 000C  
                    ??_isr 0070           ?_I2C_Master_Init 0028           ?_I2C_Master_Read 0073  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D                      _ANSEL 0188  
          __end_of___lldiv 00EB                      i1l864 017A                      i1l866 0180  
                    i1l868 0184                      _RCREG 001A                      _RCSTA 0018  
                    u14_20 0180                      u14_21 017F                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _TXSTA 0098  
                    _iread 0079                      _setup 0152                      _uread 007A  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 0083                     ??_main 0030  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073  
       ??_I2C_Master_Write 0075                     ?_setup 0070                     _ANSELH 0189  
                   _INTCON 000B                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC6 043E  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0073                     saved_w 007E    __end_of__initialization 0011  
           __pcstackCOMMON 0070              __end_of_setup 017A                    ??_setup 0073  
               __pmaintext 0015                 __pintentry 0004                    _ACKSTAT 048E  
                  _BAUDCTL 0187                    _SSPCON2 0091                    _SSPSTAT 0094  
                  ___lldiv 0083                    __ptext1 0152                    __ptext2 0199  
                  __ptext3 01A3                    __ptext4 01AC                    __ptext5 0125  
                  __ptext6 018C                    __ptext7 00EB                    __ptext8 0083  
                  __ptext9 017A               __size_of_isr 0012   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 002D   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
     end_of_initialization 0011  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 0078           I2C_Master_Init@c 0028  
         I2C_Master_Read@a 0073                  _TXSTAbits 0098        start_initialization 000F  
              __end_of_isr 018C          ??_I2C_Master_Init 002C          ??_I2C_Master_Read 0075  
        ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020           _I2C_Master_Start 01AC  
         _I2C_Master_Write 0199                   ?___lldiv 0020             __size_of_setup 0028  
        interrupt_function 0004                   _PIR1bits 000C        I2C_Master_Read@temp 0077  
         __size_of___lldiv 0068            _I2C_Master_Init 00EB            _I2C_Master_Read 0125  
          _I2C_Master_Wait 018C            _I2C_Master_Stop 01A3              __size_of_main 006E  
 __end_of_I2C_Master_Start 01B5   __end_of_I2C_Master_Write 01A3                   intlevel1 0000  
         ___lldiv@dividend 0024    __end_of_I2C_Master_Init 0125    __end_of_I2C_Master_Read 0152  
  __end_of_I2C_Master_Wait 0199    __end_of_I2C_Master_Stop 01AC           ___lldiv@quotient 0074  
        I2C_Master_Write@d 0073  
