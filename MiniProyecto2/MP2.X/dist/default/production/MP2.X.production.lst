

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 23:02:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.31
    23                           ; Generated 13/10/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCON	set	20
   293  0019                     _TXREG	set	25
   294  001A                     _RCREG	set	26
   295  000C                     _PIR1bits	set	12
   296  0018                     _RCSTA	set	24
   297  000B                     _INTCON	set	11
   298  0009                     _PORTE	set	9
   299  0008                     _PORTD	set	8
   300  0007                     _PORTC	set	7
   301  0006                     _PORTB	set	6
   302  0005                     _PORTA	set	5
   303  00C4                     _CREN	set	196
   304  00C7                     _SPEN	set	199
   305  0094                     _SSPSTAT	set	148
   306  0093                     _SSPADD	set	147
   307  0091                     _SSPCON2	set	145
   308  0098                     _TXSTAbits	set	152
   309  0098                     _TXSTA	set	152
   310  0099                     _SPBRG	set	153
   311  009A                     _SPBRGH	set	154
   312  008C                     _PIE1	set	140
   313  0089                     _TRISE	set	137
   314  0088                     _TRISD	set	136
   315  0087                     _TRISC	set	135
   316  0086                     _TRISB	set	134
   317  0085                     _TRISA	set	133
   318  048C                     _ACKEN	set	1164
   319  048D                     _ACKDT	set	1165
   320  048B                     _RCEN	set	1163
   321  048A                     _PEN	set	1162
   322  0489                     _RSEN	set	1161
   323  0488                     _SEN	set	1160
   324  043C                     _TRISC4	set	1084
   325  043B                     _TRISC3	set	1083
   326  04C1                     _TRMT	set	1217
   327  04C5                     _TXEN	set	1221
   328  043E                     _TRISC6	set	1086
   329  043F                     _TRISC7	set	1087
   330  04C4                     _SYNC	set	1220
   331  04C2                     _BRGH	set	1218
   332  048E                     _ACKSTAT	set	1166
   333  0187                     _BAUDCTL	set	391
   334  0189                     _ANSELH	set	393
   335  0188                     _ANSEL	set	392
   336                           
   337                           	psect	cinit
   338  000F                     start_initialization:	
   339                           ; #config settings
   340                           
   341  000F                     __initialization:
   342                           
   343                           ; Clear objects allocated to COMMON
   344  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   345  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   346  0011                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  0011                     __end_of__initialization:
   350  0011  0183               	clrf	3
   351  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMMON
   354  0079                     __pbssCOMMON:
   355  0079                     _iread:
   356  0079                     	ds	1
   357  007A                     _uread:
   358  007A                     	ds	1
   359                           
   360                           	psect	cstackCOMMON
   361  0070                     __pcstackCOMMON:
   362  0070                     ?_I2C_Master_Start:
   363  0070                     ?_I2C_Master_Wait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_I2C_Master_Stop:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_setup:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_isr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ??_isr:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	3
   384  0073                     ??_I2C_Master_Start:
   385  0073                     ?_I2C_Master_Write:	
   386                           ; 1 bytes @ 0x3
   387                           
   388  0073                     ??_I2C_Master_Wait:	
   389                           ; 1 bytes @ 0x3
   390                           
   391  0073                     ??_I2C_Master_Stop:	
   392                           ; 1 bytes @ 0x3
   393                           
   394  0073                     ??_setup:	
   395                           ; 1 bytes @ 0x3
   396                           
   397  0073                     ??___lldiv:	
   398                           ; 1 bytes @ 0x3
   399                           
   400  0073                     ?_I2C_Master_Read:	
   401                           ; 1 bytes @ 0x3
   402                           
   403  0073                     I2C_Master_Write@d:	
   404                           ; 2 bytes @ 0x3
   405                           
   406  0073                     I2C_Master_Read@a:	
   407                           ; 2 bytes @ 0x3
   408                           
   409                           
   410                           ; 2 bytes @ 0x3
   411  0073                     	ds	1
   412  0074                     ___lldiv@quotient:
   413                           
   414                           ; 4 bytes @ 0x4
   415  0074                     	ds	1
   416  0075                     ??_I2C_Master_Write:
   417  0075                     ??_I2C_Master_Read:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           ; 1 bytes @ 0x5
   422  0075                     	ds	2
   423  0077                     I2C_Master_Read@temp:
   424                           
   425                           ; 2 bytes @ 0x7
   426  0077                     	ds	1
   427  0078                     ___lldiv@counter:
   428                           
   429                           ; 1 bytes @ 0x8
   430  0078                     	ds	1
   431                           
   432                           	psect	cstackBANK0
   433  0020                     __pcstackBANK0:
   434  0020                     ?___lldiv:
   435  0020                     ___lldiv@divisor:	
   436                           ; 4 bytes @ 0x0
   437                           
   438                           
   439                           ; 4 bytes @ 0x0
   440  0020                     	ds	4
   441  0024                     ___lldiv@dividend:
   442                           
   443                           ; 4 bytes @ 0x4
   444  0024                     	ds	4
   445  0028                     ?_I2C_Master_Init:
   446  0028                     I2C_Master_Init@c:	
   447                           ; 1 bytes @ 0x8
   448                           
   449                           
   450                           ; 4 bytes @ 0x8
   451  0028                     	ds	4
   452  002C                     ??_I2C_Master_Init:
   453                           
   454                           ; 1 bytes @ 0xC
   455  002C                     	ds	4
   456  0030                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x10
   459  0030                     	ds	3
   460                           
   461                           	psect	maintext
   462  0015                     __pmaintext:	
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 59 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : B00/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       3       0       0       0
   485 ;;      Totals:         0       3       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels required when called:    3
   488 ;; This function calls:
   489 ;;		_I2C_Master_Init
   490 ;;		_I2C_Master_Read
   491 ;;		_I2C_Master_Start
   492 ;;		_I2C_Master_Stop
   493 ;;		_I2C_Master_Wait
   494 ;;		_I2C_Master_Write
   495 ;;		_setup
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _main
   503  0015                     _main:
   504  0015                     l1109:	
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   507                           
   508                           
   509                           ;main.c: 60:     setup();
   510  0015  120A  118A  2176  120A  118A  	fcall	_setup
   511                           
   512                           ;main.c: 62:     I2C_Master_Init(100000);
   513  001A  3000               	movlw	0
   514  001B  1283               	bcf	3,5	;RP0=0, select bank0
   515  001C  1303               	bcf	3,6	;RP1=0, select bank0
   516  001D  00AB               	movwf	I2C_Master_Init@c+3
   517  001E  3001               	movlw	1
   518  001F  00AA               	movwf	I2C_Master_Init@c+2
   519  0020  3086               	movlw	134
   520  0021  00A9               	movwf	I2C_Master_Init@c+1
   521  0022  30A0               	movlw	160
   522  0023  00A8               	movwf	I2C_Master_Init@c
   523  0024  120A  118A  210F  120A  118A  	fcall	_I2C_Master_Init
   524  0029                     l80:	
   525                           ;main.c: 63:     while (1) {
   526                           
   527                           
   528                           ;main.c: 64:         I2C_Master_Start();
   529  0029  120A  118A  21D0  120A  118A  	fcall	_I2C_Master_Start
   530                           
   531                           ;main.c: 66:         I2C_Master_Write(0x09);
   532  002E  3009               	movlw	9
   533  002F  00F3               	movwf	I2C_Master_Write@d
   534  0030  3000               	movlw	0
   535  0031  00F4               	movwf	I2C_Master_Write@d+1
   536  0032  120A  118A  21BD  120A  118A  	fcall	_I2C_Master_Write
   537                           
   538                           ;main.c: 67:         I2C_Master_Wait();
   539  0037  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
   540  003C                     l1111:
   541                           
   542                           ;main.c: 69:         if (ACKSTAT == 0){
   543  003C  1683               	bsf	3,5	;RP0=1, select bank1
   544  003D  1303               	bcf	3,6	;RP1=0, select bank1
   545  003E  1B11               	btfsc	17,6	;volatile
   546  003F  2841               	goto	u461
   547  0040  2842               	goto	u460
   548  0041                     u461:
   549  0041  2856               	goto	l1115
   550  0042                     u460:
   551  0042                     l1113:
   552                           
   553                           ;main.c: 70:             iread = I2C_Master_Read(0);
   554  0042  3000               	movlw	0
   555  0043  00F3               	movwf	I2C_Master_Read@a
   556  0044  00F4               	movwf	I2C_Master_Read@a+1
   557  0045  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Read
   558  004A  0873               	movf	?_I2C_Master_Read,w
   559  004B  1283               	bcf	3,5	;RP0=0, select bank0
   560  004C  1303               	bcf	3,6	;RP1=0, select bank0
   561  004D  00B0               	movwf	??_main
   562  004E  0830               	movf	??_main,w
   563  004F  00F9               	movwf	_iread
   564                           
   565                           ;main.c: 71:             I2C_Master_Stop();
   566  0050  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
   567                           
   568                           ;main.c: 72:         }
   569  0055  285B               	goto	l1117
   570  0056                     l1115:
   571                           
   572                           ;main.c: 74:             I2C_Master_Stop();
   573  0056  120A  118A  21C7  120A  118A  	fcall	_I2C_Master_Stop
   574  005B                     l1117:
   575                           
   576                           ;main.c: 76:         _delay((unsigned long)((200)*(4000000/4000.0)));
   577  005B  3002               	movlw	2
   578  005C  1283               	bcf	3,5	;RP0=0, select bank0
   579  005D  1303               	bcf	3,6	;RP1=0, select bank0
   580  005E  00B2               	movwf	??_main+2
   581  005F  3004               	movlw	4
   582  0060  00B1               	movwf	??_main+1
   583  0061  30B9               	movlw	185
   584  0062  00B0               	movwf	??_main
   585  0063                     u487:
   586  0063  0BB0               	decfsz	??_main,f
   587  0064  2863               	goto	u487
   588  0065  0BB1               	decfsz	??_main+1,f
   589  0066  2863               	goto	u487
   590  0067  0BB2               	decfsz	??_main+2,f
   591  0068  2863               	goto	u487
   592  0069  286A               	nop2
   593                           
   594                           ;main.c: 78:         switch (uread){
   595  006A  2876               	goto	l1131
   596  006B                     l1119:
   597                           
   598                           ;main.c: 81:                 PORTB = 0;
   599  006B  0186               	clrf	6	;volatile
   600                           
   601                           ;main.c: 82:                 break;
   602  006C  288E               	goto	l85
   603  006D                     l1121:
   604                           
   605                           ;main.c: 85:                 PORTB = 1;
   606  006D  3001               	movlw	1
   607  006E  0086               	movwf	6	;volatile
   608                           
   609                           ;main.c: 86:                 break;
   610  006F  288E               	goto	l85
   611  0070                     l1123:
   612                           
   613                           ;main.c: 89:                 PORTB = 2;
   614  0070  3002               	movlw	2
   615  0071  0086               	movwf	6	;volatile
   616                           
   617                           ;main.c: 90:                 break;
   618  0072  288E               	goto	l85
   619  0073                     l1125:
   620                           
   621                           ;main.c: 93:                 PORTB = 3;
   622  0073  3003               	movlw	3
   623  0074  0086               	movwf	6	;volatile
   624                           
   625                           ;main.c: 94:                 break;
   626  0075  288E               	goto	l85
   627  0076                     l1131:
   628  0076  087A               	movf	_uread,w
   629  0077  1283               	bcf	3,5	;RP0=0, select bank0
   630  0078  1303               	bcf	3,6	;RP1=0, select bank0
   631  0079  00B0               	movwf	??_main
   632  007A  01B1               	clrf	??_main+1
   633                           
   634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   635                           ; Switch size 1, requested type "simple"
   636                           ; Number of cases is 1, Range of values is 0 to 0
   637                           ; switch strategies available:
   638                           ; Name         Instructions Cycles
   639                           ; simple_byte            4     3 (average)
   640                           ; direct_byte           11     8 (fixed)
   641                           ; jumptable            260     6 (fixed)
   642                           ;	Chosen strategy is simple_byte
   643  007B  0831               	movf	??_main+1,w
   644  007C  3A00               	xorlw	0	; case 0
   645  007D  1903               	skipnz
   646  007E  2880               	goto	l1159
   647  007F  286B               	goto	l1119
   648  0080                     l1159:
   649                           
   650                           ; Switch size 1, requested type "simple"
   651                           ; Number of cases is 4, Range of values is 0 to 3
   652                           ; switch strategies available:
   653                           ; Name         Instructions Cycles
   654                           ; simple_byte           13     7 (average)
   655                           ; direct_byte           20     8 (fixed)
   656                           ; jumptable            260     6 (fixed)
   657                           ;	Chosen strategy is simple_byte
   658  0080  0830               	movf	??_main,w
   659  0081  3A00               	xorlw	0	; case 0
   660  0082  1903               	skipnz
   661  0083  286B               	goto	l1119
   662  0084  3A01               	xorlw	1	; case 1
   663  0085  1903               	skipnz
   664  0086  286D               	goto	l1121
   665  0087  3A03               	xorlw	3	; case 2
   666  0088  1903               	skipnz
   667  0089  2870               	goto	l1123
   668  008A  3A01               	xorlw	1	; case 3
   669  008B  1903               	skipnz
   670  008C  2873               	goto	l1125
   671  008D  286B               	goto	l1119
   672  008E                     l85:
   673                           
   674                           ;main.c: 101:         if (TXSTAbits.TRMT == 1){
   675  008E  1683               	bsf	3,5	;RP0=1, select bank1
   676  008F  1303               	bcf	3,6	;RP1=0, select bank1
   677  0090  1C98               	btfss	24,1	;volatile
   678  0091  2893               	goto	u471
   679  0092  2894               	goto	u470
   680  0093                     u471:
   681  0093  2829               	goto	l80
   682  0094                     u470:
   683  0094                     l1133:
   684                           
   685                           ;main.c: 102:             TXREG = iread;
   686  0094  0879               	movf	_iread,w
   687  0095  1283               	bcf	3,5	;RP0=0, select bank0
   688  0096  1303               	bcf	3,6	;RP1=0, select bank0
   689  0097  0099               	movwf	25	;volatile
   690                           
   691                           ;main.c: 103:             _delay((unsigned long)((5)*(4000000/4000.0)));
   692  0098  3007               	movlw	7
   693  0099  1283               	bcf	3,5	;RP0=0, select bank0
   694  009A  1303               	bcf	3,6	;RP1=0, select bank0
   695  009B  00B1               	movwf	??_main+1
   696  009C  307C               	movlw	124
   697  009D  00B0               	movwf	??_main
   698  009E                     u497:
   699  009E  0BB0               	decfsz	??_main,f
   700  009F  289E               	goto	u497
   701  00A0  0BB1               	decfsz	??_main+1,f
   702  00A1  289E               	goto	u497
   703  00A2  0000               	nop
   704  00A3  2829               	goto	l80
   705  00A4  120A  118A  280C   	ljmp	start
   706  00A7                     __end_of_main:
   707                           
   708                           	psect	text1
   709  0176                     __ptext1:	
   710 ;; *************** function _setup *****************
   711 ;; Defined at:
   712 ;;		line 20 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _setup
   742  0176                     _setup:
   743  0176                     l803:	
   744                           ;incstack = 0
   745                           ; Regs used in _setup: [wreg+status,2]
   746                           
   747                           
   748                           ;main.c: 22:     PORTA = 0;
   749  0176  1283               	bcf	3,5	;RP0=0, select bank0
   750  0177  1303               	bcf	3,6	;RP1=0, select bank0
   751  0178  0185               	clrf	5	;volatile
   752                           
   753                           ;main.c: 23:     PORTB = 0;
   754  0179  0186               	clrf	6	;volatile
   755                           
   756                           ;main.c: 24:     PORTC = 0;
   757  017A  0187               	clrf	7	;volatile
   758                           
   759                           ;main.c: 25:     PORTD = 0;
   760  017B  0188               	clrf	8	;volatile
   761                           
   762                           ;main.c: 26:     PORTE = 0;
   763  017C  0189               	clrf	9	;volatile
   764                           
   765                           ;main.c: 27:     TRISA = 0;
   766  017D  1683               	bsf	3,5	;RP0=1, select bank1
   767  017E  1303               	bcf	3,6	;RP1=0, select bank1
   768  017F  0185               	clrf	5	;volatile
   769                           
   770                           ;main.c: 28:     TRISB = 0;
   771  0180  0186               	clrf	6	;volatile
   772  0181                     l805:
   773                           
   774                           ;main.c: 29:     TRISC = 0b00011000;
   775  0181  3018               	movlw	24
   776  0182  0087               	movwf	7	;volatile
   777  0183                     l807:
   778                           
   779                           ;main.c: 30:     TRISD = 0;
   780  0183  0188               	clrf	8	;volatile
   781  0184                     l809:
   782                           
   783                           ;main.c: 31:     TRISE = 0;
   784  0184  0189               	clrf	9	;volatile
   785  0185                     l811:
   786                           
   787                           ;main.c: 32:     ANSEL = 0;
   788  0185  1683               	bsf	3,5	;RP0=1, select bank3
   789  0186  1703               	bsf	3,6	;RP1=1, select bank3
   790  0187  0188               	clrf	8	;volatile
   791  0188                     l813:
   792                           
   793                           ;main.c: 33:     ANSELH = 0;
   794  0188  0189               	clrf	9	;volatile
   795  0189                     l815:
   796                           
   797                           ;main.c: 35:     INTCON = 0b11000000;
   798  0189  30C0               	movlw	192
   799  018A  008B               	movwf	11	;volatile
   800  018B                     l817:
   801                           
   802                           ;main.c: 36:     PIE1 = 0b00100000;
   803  018B  3020               	movlw	32
   804  018C  1683               	bsf	3,5	;RP0=1, select bank1
   805  018D  1303               	bcf	3,6	;RP1=0, select bank1
   806  018E  008C               	movwf	12	;volatile
   807  018F                     l819:
   808                           
   809                           ;main.c: 38:     SPBRGH = 0;
   810  018F  019A               	clrf	26	;volatile
   811                           
   812                           ;main.c: 39:     SPBRG = 25;
   813  0190  3019               	movlw	25
   814  0191  0099               	movwf	25	;volatile
   815  0192                     l821:
   816                           
   817                           ;main.c: 40:     BAUDCTL = 0;
   818  0192  1683               	bsf	3,5	;RP0=1, select bank3
   819  0193  1703               	bsf	3,6	;RP1=1, select bank3
   820  0194  0187               	clrf	7	;volatile
   821  0195                     l823:
   822                           
   823                           ;main.c: 42:     TXSTA = 0b00100100;
   824  0195  3024               	movlw	36
   825  0196  1683               	bsf	3,5	;RP0=1, select bank1
   826  0197  1303               	bcf	3,6	;RP1=0, select bank1
   827  0198  0098               	movwf	24	;volatile
   828  0199                     l825:
   829                           
   830                           ;main.c: 43:     RCSTA = 0b10010000;
   831  0199  3090               	movlw	144
   832  019A  1283               	bcf	3,5	;RP0=0, select bank0
   833  019B  1303               	bcf	3,6	;RP1=0, select bank0
   834  019C  0098               	movwf	24	;volatile
   835  019D                     l65:
   836  019D  0008               	return
   837  019E                     __end_of_setup:
   838                           
   839                           	psect	text2
   840  01BD                     __ptext2:	
   841 ;; *************** function _I2C_Master_Write *****************
   842 ;; Defined at:
   843 ;;		line 80 in file "i2c.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  d               2    3[COMMON] unsigned int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         2       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    2
   864 ;; This function calls:
   865 ;;		_I2C_Master_Wait
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _I2C_Master_Write
   873  01BD                     _I2C_Master_Write:
   874  01BD                     l1003:	
   875                           ;incstack = 0
   876                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
   877                           
   878                           
   879                           ;i2c.c: 81:     I2C_Master_Wait();
   880  01BD  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
   881  01C2                     l1005:
   882                           
   883                           ;i2c.c: 82:     SSPBUF = d;
   884  01C2  0873               	movf	I2C_Master_Write@d,w
   885  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   886  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   887  01C5  0093               	movwf	19	;volatile
   888  01C6                     l180:
   889  01C6  0008               	return
   890  01C7                     __end_of_I2C_Master_Write:
   891                           
   892                           	psect	text3
   893  01C7                     __ptext3:	
   894 ;; *************** function _I2C_Master_Stop *****************
   895 ;; Defined at:
   896 ;;		line 75 in file "i2c.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         0       0       0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		_I2C_Master_Wait
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _I2C_Master_Stop
   926  01C7                     _I2C_Master_Stop:
   927  01C7                     l863:	
   928                           ;incstack = 0
   929                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
   930                           
   931                           
   932                           ;i2c.c: 76:     I2C_Master_Wait();
   933  01C7  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
   934  01CC                     l865:
   935                           
   936                           ;i2c.c: 77:     PEN = 1;
   937  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   938  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   939  01CE  1511               	bsf	17,2	;volatile
   940  01CF                     l177:
   941  01CF  0008               	return
   942  01D0                     __end_of_I2C_Master_Stop:
   943                           
   944                           	psect	text4
   945  01D0                     __ptext4:	
   946 ;; *************** function _I2C_Master_Start *****************
   947 ;; Defined at:
   948 ;;		line 65 in file "i2c.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    2
   969 ;; This function calls:
   970 ;;		_I2C_Master_Wait
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _I2C_Master_Start
   978  01D0                     _I2C_Master_Start:
   979  01D0                     l839:	
   980                           ;incstack = 0
   981                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
   982                           
   983                           
   984                           ;i2c.c: 66:     I2C_Master_Wait();
   985  01D0  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
   986  01D5                     l841:
   987                           
   988                           ;i2c.c: 67:     SEN = 1;
   989  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   990  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   991  01D7  1411               	bsf	17,0	;volatile
   992  01D8                     l171:
   993  01D8  0008               	return
   994  01D9                     __end_of_I2C_Master_Start:
   995                           
   996                           	psect	text5
   997  0149                     __ptext5:	
   998 ;; *************** function _I2C_Master_Read *****************
   999 ;; Defined at:
  1000 ;;		line 85 in file "i2c.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  a               2    3[COMMON] unsigned short 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  temp            2    7[COMMON] unsigned short 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    3[COMMON] unsigned short 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         2       0       0       0       0
  1015 ;;      Locals:         2       0       0       0       0
  1016 ;;      Temps:          2       0       0       0       0
  1017 ;;      Totals:         6       0       0       0       0
  1018 ;;Total ram usage:        6 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    2
  1021 ;; This function calls:
  1022 ;;		_I2C_Master_Wait
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _I2C_Master_Read
  1030  0149                     _I2C_Master_Read:
  1031  0149                     l1007:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1034                           
  1035                           
  1036                           ;i2c.c: 86:     unsigned short temp;;i2c.c: 87:     I2C_Master_Wait();
  1037  0149  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
  1038  014E                     l1009:
  1039                           
  1040                           ;i2c.c: 88:     RCEN = 1;
  1041  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1042  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0150  1591               	bsf	17,3	;volatile
  1044                           
  1045                           ;i2c.c: 89:     I2C_Master_Wait();
  1046  0151  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
  1047  0156                     l1011:
  1048                           
  1049                           ;i2c.c: 90:     temp = SSPBUF;
  1050  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0158  0813               	movf	19,w	;volatile
  1053  0159  00F5               	movwf	??_I2C_Master_Read
  1054  015A  01F6               	clrf	??_I2C_Master_Read+1
  1055  015B  0875               	movf	??_I2C_Master_Read,w
  1056  015C  00F7               	movwf	I2C_Master_Read@temp
  1057  015D  0876               	movf	??_I2C_Master_Read+1,w
  1058  015E  00F8               	movwf	I2C_Master_Read@temp+1
  1059  015F                     l1013:
  1060                           
  1061                           ;i2c.c: 91:     I2C_Master_Wait();
  1062  015F  120A  118A  21B0  120A  118A  	fcall	_I2C_Master_Wait
  1063  0164                     l1015:
  1064                           
  1065                           ;i2c.c: 92:     ACKDT = (a) ? 1 : 0;
  1066  0164  0873               	movf	I2C_Master_Read@a,w
  1067  0165  0474               	iorwf	I2C_Master_Read@a+1,w
  1068  0166  1D03               	btfss	3,2
  1069  0167  2969               	goto	u341
  1070  0168  296D               	goto	u340
  1071  0169                     u341:
  1072  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1073  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1074  016B  1691               	bsf	17,5	;volatile
  1075  016C  2970               	goto	u354
  1076  016D                     u340:
  1077  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1078  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1079  016F  1291               	bcf	17,5	;volatile
  1080  0170                     u354:
  1081  0170                     l1017:
  1082                           
  1083                           ;i2c.c: 93:     ACKEN = 1;
  1084  0170  1611               	bsf	17,4	;volatile
  1085  0171                     l1019:
  1086                           
  1087                           ;i2c.c: 94:     return temp;
  1088  0171  0878               	movf	I2C_Master_Read@temp+1,w
  1089  0172  00F4               	movwf	?_I2C_Master_Read+1
  1090  0173  0877               	movf	I2C_Master_Read@temp,w
  1091  0174  00F3               	movwf	?_I2C_Master_Read
  1092  0175                     l183:
  1093  0175  0008               	return
  1094  0176                     __end_of_I2C_Master_Read:
  1095                           
  1096                           	psect	text6
  1097  01B0                     __ptext6:	
  1098 ;; *************** function _I2C_Master_Wait *****************
  1099 ;; Defined at:
  1100 ;;		line 61 in file "i2c.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    1
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;;		_I2C_Master_Start
  1126 ;;		_I2C_Master_Stop
  1127 ;;		_I2C_Master_Write
  1128 ;;		_I2C_Master_Read
  1129 ;;		_I2C_Master_RepeatedStart
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _I2C_Master_Wait
  1135  01B0                     _I2C_Master_Wait:
  1136  01B0                     l775:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1139                           
  1140  01B0                     l165:	
  1141                           ;i2c.c: 62:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1142                           
  1143  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1144  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1145  01B2  1914               	btfsc	20,2	;volatile
  1146  01B3  29B5               	goto	u11
  1147  01B4  29B6               	goto	u10
  1148  01B5                     u11:
  1149  01B5  29B0               	goto	l165
  1150  01B6                     u10:
  1151  01B6                     l777:
  1152  01B6  0811               	movf	17,w	;volatile
  1153  01B7  391F               	andlw	31
  1154  01B8  1D03               	btfss	3,2
  1155  01B9  29BB               	goto	u21
  1156  01BA  29BC               	goto	u20
  1157  01BB                     u21:
  1158  01BB  29B0               	goto	l165
  1159  01BC                     u20:
  1160  01BC                     l168:
  1161  01BC  0008               	return
  1162  01BD                     __end_of_I2C_Master_Wait:
  1163                           
  1164                           	psect	text7
  1165  010F                     __ptext7:	
  1166 ;; *************** function _I2C_Master_Init *****************
  1167 ;; Defined at:
  1168 ;;		line 52 in file "i2c.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  c               4    8[BANK0 ] const unsigned long 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       4       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          0       4       0       0       0
  1185 ;;      Totals:         0       8       0       0       0
  1186 ;;Total ram usage:        8 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		___lldiv
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _I2C_Master_Init
  1198  010F                     _I2C_Master_Init:
  1199  010F                     l1097:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1202                           
  1203                           
  1204                           ;i2c.c: 53:     SSPCON = 0b00101000;
  1205  010F  3028               	movlw	40
  1206  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0112  0094               	movwf	20	;volatile
  1209  0113                     l1099:
  1210                           
  1211                           ;i2c.c: 54:     SSPCON2 = 0;
  1212  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0115  0191               	clrf	17	;volatile
  1215  0116                     l1101:
  1216                           
  1217                           ;i2c.c: 55:     SSPADD = (4000000 / (4 * c)) - 1;
  1218  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0118  0828               	movf	I2C_Master_Init@c,w
  1221  0119  00AC               	movwf	??_I2C_Master_Init
  1222  011A  0829               	movf	I2C_Master_Init@c+1,w
  1223  011B  00AD               	movwf	??_I2C_Master_Init+1
  1224  011C  082A               	movf	I2C_Master_Init@c+2,w
  1225  011D  00AE               	movwf	??_I2C_Master_Init+2
  1226  011E  082B               	movf	I2C_Master_Init@c+3,w
  1227  011F  00AF               	movwf	??_I2C_Master_Init+3
  1228  0120  3002               	movlw	2
  1229  0121                     u455:
  1230  0121  1003               	clrc
  1231  0122  0DAC               	rlf	??_I2C_Master_Init,f
  1232  0123  0DAD               	rlf	??_I2C_Master_Init+1,f
  1233  0124  0DAE               	rlf	??_I2C_Master_Init+2,f
  1234  0125  0DAF               	rlf	??_I2C_Master_Init+3,f
  1235  0126                     u450:
  1236  0126  3EFF               	addlw	-1
  1237  0127  1D03               	skipz
  1238  0128  2921               	goto	u455
  1239  0129  082F               	movf	??_I2C_Master_Init+3,w
  1240  012A  00A3               	movwf	___lldiv@divisor+3
  1241  012B  082E               	movf	??_I2C_Master_Init+2,w
  1242  012C  00A2               	movwf	___lldiv@divisor+2
  1243  012D  082D               	movf	??_I2C_Master_Init+1,w
  1244  012E  00A1               	movwf	___lldiv@divisor+1
  1245  012F  082C               	movf	??_I2C_Master_Init,w
  1246  0130  00A0               	movwf	___lldiv@divisor
  1247  0131  3000               	movlw	0
  1248  0132  00A7               	movwf	___lldiv@dividend+3
  1249  0133  303D               	movlw	61
  1250  0134  00A6               	movwf	___lldiv@dividend+2
  1251  0135  3009               	movlw	9
  1252  0136  00A5               	movwf	___lldiv@dividend+1
  1253  0137  3000               	movlw	0
  1254  0138  00A4               	movwf	___lldiv@dividend
  1255  0139  120A  118A  20A7  120A  118A  	fcall	___lldiv
  1256  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1257  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0140  0820               	movf	?___lldiv,w
  1259  0141  3EFF               	addlw	255
  1260  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0144  0093               	movwf	19	;volatile
  1263  0145                     l1103:
  1264                           
  1265                           ;i2c.c: 56:     SSPSTAT = 0;
  1266  0145  0194               	clrf	20	;volatile
  1267  0146                     l1105:
  1268                           
  1269                           ;i2c.c: 57:     TRISC3 = 1;
  1270  0146  1587               	bsf	7,3	;volatile
  1271  0147                     l1107:
  1272                           
  1273                           ;i2c.c: 58:     TRISC4 = 1;
  1274  0147  1607               	bsf	7,4	;volatile
  1275  0148                     l162:
  1276  0148  0008               	return
  1277  0149                     __end_of_I2C_Master_Init:
  1278                           
  1279                           	psect	text8
  1280  00A7                     __ptext8:	
  1281 ;; *************** function ___lldiv *****************
  1282 ;; Defined at:
  1283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  divisor         4    0[BANK0 ] unsigned long 
  1286 ;;  dividend        4    4[BANK0 ] unsigned long 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  quotient        4    4[COMMON] unsigned long 
  1289 ;;  counter         1    8[COMMON] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  4    0[BANK0 ] unsigned long 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       8       0       0       0
  1300 ;;      Locals:         5       0       0       0       0
  1301 ;;      Temps:          1       0       0       0       0
  1302 ;;      Totals:         6       8       0       0       0
  1303 ;;Total ram usage:       14 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_I2C_Master_Init
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function ___lldiv
  1315  00A7                     ___lldiv:
  1316  00A7                     l1073:	
  1317                           ;incstack = 0
  1318                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1319                           
  1320  00A7  3000               	movlw	0
  1321  00A8  00F7               	movwf	___lldiv@quotient+3
  1322  00A9  3000               	movlw	0
  1323  00AA  00F6               	movwf	___lldiv@quotient+2
  1324  00AB  3000               	movlw	0
  1325  00AC  00F5               	movwf	___lldiv@quotient+1
  1326  00AD  3000               	movlw	0
  1327  00AE  00F4               	movwf	___lldiv@quotient
  1328  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1329  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1330  00B1  0823               	movf	___lldiv@divisor+3,w
  1331  00B2  0422               	iorwf	___lldiv@divisor+2,w
  1332  00B3  0421               	iorwf	___lldiv@divisor+1,w
  1333  00B4  0420               	iorwf	___lldiv@divisor,w
  1334  00B5  1903               	skipnz
  1335  00B6  28B8               	goto	u381
  1336  00B7  28B9               	goto	u380
  1337  00B8                     u381:
  1338  00B8  2906               	goto	l1093
  1339  00B9                     u380:
  1340  00B9                     l1075:
  1341  00B9  01F8               	clrf	___lldiv@counter
  1342  00BA  0AF8               	incf	___lldiv@counter,f
  1343  00BB  28C9               	goto	l1079
  1344  00BC                     l1077:
  1345  00BC  3001               	movlw	1
  1346  00BD  00F3               	movwf	??___lldiv
  1347  00BE                     u395:
  1348  00BE  1003               	clrc
  1349  00BF  0DA0               	rlf	___lldiv@divisor,f
  1350  00C0  0DA1               	rlf	___lldiv@divisor+1,f
  1351  00C1  0DA2               	rlf	___lldiv@divisor+2,f
  1352  00C2  0DA3               	rlf	___lldiv@divisor+3,f
  1353  00C3  0BF3               	decfsz	??___lldiv,f
  1354  00C4  28BE               	goto	u395
  1355  00C5  3001               	movlw	1
  1356  00C6  00F3               	movwf	??___lldiv
  1357  00C7  0873               	movf	??___lldiv,w
  1358  00C8  07F8               	addwf	___lldiv@counter,f
  1359  00C9                     l1079:
  1360  00C9  1FA3               	btfss	___lldiv@divisor+3,7
  1361  00CA  28CC               	goto	u401
  1362  00CB  28CD               	goto	u400
  1363  00CC                     u401:
  1364  00CC  28BC               	goto	l1077
  1365  00CD                     u400:
  1366  00CD                     l1081:
  1367  00CD  3001               	movlw	1
  1368  00CE  00F3               	movwf	??___lldiv
  1369  00CF                     u415:
  1370  00CF  1003               	clrc
  1371  00D0  0DF4               	rlf	___lldiv@quotient,f
  1372  00D1  0DF5               	rlf	___lldiv@quotient+1,f
  1373  00D2  0DF6               	rlf	___lldiv@quotient+2,f
  1374  00D3  0DF7               	rlf	___lldiv@quotient+3,f
  1375  00D4  0BF3               	decfsz	??___lldiv,f
  1376  00D5  28CF               	goto	u415
  1377  00D6                     l1083:
  1378  00D6  0823               	movf	___lldiv@divisor+3,w
  1379  00D7  0227               	subwf	___lldiv@dividend+3,w
  1380  00D8  1D03               	skipz
  1381  00D9  28E4               	goto	u425
  1382  00DA  0822               	movf	___lldiv@divisor+2,w
  1383  00DB  0226               	subwf	___lldiv@dividend+2,w
  1384  00DC  1D03               	skipz
  1385  00DD  28E4               	goto	u425
  1386  00DE  0821               	movf	___lldiv@divisor+1,w
  1387  00DF  0225               	subwf	___lldiv@dividend+1,w
  1388  00E0  1D03               	skipz
  1389  00E1  28E4               	goto	u425
  1390  00E2  0820               	movf	___lldiv@divisor,w
  1391  00E3  0224               	subwf	___lldiv@dividend,w
  1392  00E4                     u425:
  1393  00E4  1C03               	skipc
  1394  00E5  28E7               	goto	u421
  1395  00E6  28E8               	goto	u420
  1396  00E7                     u421:
  1397  00E7  28F7               	goto	l1089
  1398  00E8                     u420:
  1399  00E8                     l1085:
  1400  00E8  0820               	movf	___lldiv@divisor,w
  1401  00E9  02A4               	subwf	___lldiv@dividend,f
  1402  00EA  0821               	movf	___lldiv@divisor+1,w
  1403  00EB  1C03               	skipc
  1404  00EC  0F21               	incfsz	___lldiv@divisor+1,w
  1405  00ED  02A5               	subwf	___lldiv@dividend+1,f
  1406  00EE  0822               	movf	___lldiv@divisor+2,w
  1407  00EF  1C03               	skipc
  1408  00F0  0F22               	incfsz	___lldiv@divisor+2,w
  1409  00F1  02A6               	subwf	___lldiv@dividend+2,f
  1410  00F2  0823               	movf	___lldiv@divisor+3,w
  1411  00F3  1C03               	skipc
  1412  00F4  0F23               	incfsz	___lldiv@divisor+3,w
  1413  00F5  02A7               	subwf	___lldiv@dividend+3,f
  1414  00F6                     l1087:
  1415  00F6  1474               	bsf	___lldiv@quotient,0
  1416  00F7                     l1089:
  1417  00F7  3001               	movlw	1
  1418  00F8                     u435:
  1419  00F8  1003               	clrc
  1420  00F9  0CA3               	rrf	___lldiv@divisor+3,f
  1421  00FA  0CA2               	rrf	___lldiv@divisor+2,f
  1422  00FB  0CA1               	rrf	___lldiv@divisor+1,f
  1423  00FC  0CA0               	rrf	___lldiv@divisor,f
  1424  00FD  3EFF               	addlw	-1
  1425  00FE  1D03               	skipz
  1426  00FF  28F8               	goto	u435
  1427  0100                     l1091:
  1428  0100  3001               	movlw	1
  1429  0101  02F8               	subwf	___lldiv@counter,f
  1430  0102  1D03               	btfss	3,2
  1431  0103  2905               	goto	u441
  1432  0104  2906               	goto	u440
  1433  0105                     u441:
  1434  0105  28CD               	goto	l1081
  1435  0106                     u440:
  1436  0106                     l1093:
  1437  0106  0877               	movf	___lldiv@quotient+3,w
  1438  0107  00A3               	movwf	?___lldiv+3
  1439  0108  0876               	movf	___lldiv@quotient+2,w
  1440  0109  00A2               	movwf	?___lldiv+2
  1441  010A  0875               	movf	___lldiv@quotient+1,w
  1442  010B  00A1               	movwf	?___lldiv+1
  1443  010C  0874               	movf	___lldiv@quotient,w
  1444  010D  00A0               	movwf	?___lldiv
  1445  010E                     l305:
  1446  010E  0008               	return
  1447  010F                     __end_of___lldiv:
  1448                           
  1449                           	psect	text9
  1450  019E                     __ptext9:	
  1451 ;; *************** function _isr *****************
  1452 ;; Defined at:
  1453 ;;		line 51 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          3       0       0       0       0
  1470 ;;      Totals:         3       0       0       0       0
  1471 ;;Total ram usage:        3 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		Interrupt level 1
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _isr
  1482  019E                     _isr:
  1483  019E                     i1l871:
  1484                           
  1485                           ;main.c: 53:     if (PIR1bits.RCIF == 1) {
  1486  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1487  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1488  01A0  1E8C               	btfss	12,5	;volatile
  1489  01A1  29A3               	goto	u14_21
  1490  01A2  29A4               	goto	u14_20
  1491  01A3                     u14_21:
  1492  01A3  29A9               	goto	i1l75
  1493  01A4                     u14_20:
  1494  01A4                     i1l873:
  1495                           
  1496                           ;main.c: 54:         uread = RCREG;
  1497  01A4  081A               	movf	26,w	;volatile
  1498  01A5  00F0               	movwf	??_isr
  1499  01A6  0870               	movf	??_isr,w
  1500  01A7  00FA               	movwf	_uread
  1501  01A8                     i1l875:
  1502                           
  1503                           ;main.c: 55:         PIR1bits.RCIF = 0;
  1504  01A8  128C               	bcf	12,5	;volatile
  1505  01A9                     i1l75:
  1506  01A9  0872               	movf	??_isr+2,w
  1507  01AA  008A               	movwf	10
  1508  01AB  0E71               	swapf	??_isr+1,w
  1509  01AC  0083               	movwf	3
  1510  01AD  0EFE               	swapf	btemp,f
  1511  01AE  0E7E               	swapf	btemp,w
  1512  01AF  0009               	retfie
  1513  01B0                     __end_of_isr:
  1514  007E                     btemp	set	126	;btemp
  1515  007E                     wtemp0	set	126
  1516                           
  1517                           	psect	intentry
  1518  0004                     __pintentry:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _isr: [wreg]
  1521                           
  1522  0004                     interrupt_function:
  1523  007E                     saved_w	set	btemp
  1524  0004  00FE               	movwf	btemp
  1525  0005  0E03               	swapf	3,w
  1526  0006  00F1               	movwf	??_isr+1
  1527  0007  080A               	movf	10,w
  1528  0008  00F2               	movwf	??_isr+2
  1529  0009  120A  118A  299E   	ljmp	_isr
  1530                           
  1531                           	psect	config
  1532                           
  1533                           ;Config register CONFIG1 @ 0x2007
  1534                           ;	Oscillator Selection bits
  1535                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1536                           ;	Watchdog Timer Enable bit
  1537                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1538                           ;	Power-up Timer Enable bit
  1539                           ;	PWRTE = OFF, PWRT disabled
  1540                           ;	RE3/MCLR pin function select bit
  1541                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1542                           ;	Code Protection bit
  1543                           ;	CP = OFF, Program memory code protection is disabled
  1544                           ;	Data Code Protection bit
  1545                           ;	CPD = OFF, Data memory code protection is disabled
  1546                           ;	Brown Out Reset Selection bits
  1547                           ;	BOREN = OFF, BOR disabled
  1548                           ;	Internal External Switchover bit
  1549                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1550                           ;	Fail-Safe Clock Monitor Enabled bit
  1551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1552                           ;	Low Voltage Programming Enable bit
  1553                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1554                           ;	In-Circuit Debugger Mode bit
  1555                           ;	DEBUG = 0x1, unprogrammed default
  1556  2007                     	org	8199
  1557  2007  20D4               	dw	8404
  1558                           
  1559                           ;Config register CONFIG2 @ 0x2008
  1560                           ;	Brown-out Reset Selection bit
  1561                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1562                           ;	Flash Program Memory Self Write Enable bits
  1563                           ;	WRT = OFF, Write protection off
  1564  2008                     	org	8200
  1565  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     761
                                             16 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                    _I2C_Master_Wait
                   _I2C_Master_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 23:02:27 2021

                       l80 0029                         l65 019D                         l85 008E  
                       u10 01B6                         u11 01B5                         u20 01BC  
                       u21 01BB                        l305 010E                        l162 0148  
                      l171 01D8                        l180 01C6                        l165 01B0  
                      l183 0175                        l168 01BC                        l177 01CF  
                      l811 0185                        l803 0176                        l821 0192  
                      l813 0188                        l805 0181                        l823 0195  
                      l815 0189                        l807 0183                        l841 01D5  
                      l825 0199                        l817 018B                        l809 0184  
                      l819 018F                        l775 01B0                        l839 01D0  
                      l863 01C7                        l777 01B6                        l865 01CC  
                      u400 00CD                        u401 00CC                        u420 00E8  
                      u340 016D                        u421 00E7                        u341 0169  
                      u415 00CF                        u440 0106                        _PEN 048A  
                      u441 0105                        u425 00E4                        u450 0126  
                      u354 0170                        u435 00F8                        u380 00B9  
                      u460 0042                        u381 00B8                        u461 0041  
                      u470 0094                        u455 0121                        u471 0093  
                      u395 00BE                        _SEN 0488                        u487 0063  
                      u497 009E                        _isr 019E                       l1011 0156  
                     l1003 01BD                       l1101 0116                       l1013 015F  
                     l1005 01C2                       l1103 0145                       l1015 0164  
                     l1007 0149                       l1111 003C                       l1105 0146  
                     l1017 0170                       l1009 014E                       l1121 006D  
                     l1113 0042                       l1107 0147                       l1019 0171  
                     l1123 0070                       l1131 0076                       l1115 0056  
                     l1133 0094                       l1125 0073                       l1117 005B  
                     l1109 0015                       l1119 006B                       l1081 00CD  
                     l1073 00A7                       l1091 0100                       l1083 00D6  
                     l1075 00B9                       l1085 00E8                       l1077 00BC  
                     l1093 0106                       l1087 00F6                       l1079 00C9  
                     l1159 0080                       l1089 00F7                       l1097 010F  
                     l1099 0113                       ?_isr 0070                       _BRGH 04C2  
                     _CREN 00C4                       _PIE1 008C                       _RCEN 048B  
                     i1l75 01A9                       _SPEN 00C7                       _RSEN 0489  
                     _TRMT 04C1                       _TXEN 04C5                       _SYNC 04C4  
                     _main 0015                       btemp 007E                       start 000C  
                    ??_isr 0070           ?_I2C_Master_Init 0028           ?_I2C_Master_Read 0073  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D                      _ANSEL 0188  
          __end_of___lldiv 010F                      i1l871 019E                      i1l873 01A4  
                    i1l875 01A8                      _RCREG 001A                      _RCSTA 0018  
                    u14_20 01A4                      u14_21 01A3                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _TXSTA 0098  
                    _iread 0079                      _setup 0176                      _uread 007A  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 00A7                     ??_main 0030  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073  
       ??_I2C_Master_Write 0075                     ?_setup 0070                     _ANSELH 0189  
                   _INTCON 000B                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC6 043E  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0073                     saved_w 007E    __end_of__initialization 0011  
           __pcstackCOMMON 0070              __end_of_setup 019E                    ??_setup 0073  
               __pmaintext 0015                 __pintentry 0004                    _ACKSTAT 048E  
                  _BAUDCTL 0187                    _SSPCON2 0091                    _SSPSTAT 0094  
                  ___lldiv 00A7                    __ptext1 0176                    __ptext2 01BD  
                  __ptext3 01C7                    __ptext4 01D0                    __ptext5 0149  
                  __ptext6 01B0                    __ptext7 010F                    __ptext8 00A7  
                  __ptext9 019E               __size_of_isr 0012   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 002D   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
     end_of_initialization 0011  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 0078           I2C_Master_Init@c 0028  
         I2C_Master_Read@a 0073                  _TXSTAbits 0098        start_initialization 000F  
              __end_of_isr 01B0          ??_I2C_Master_Init 002C          ??_I2C_Master_Read 0075  
        ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020           _I2C_Master_Start 01D0  
         _I2C_Master_Write 01BD                   ?___lldiv 0020             __size_of_setup 0028  
        interrupt_function 0004                   _PIR1bits 000C        I2C_Master_Read@temp 0077  
         __size_of___lldiv 0068            _I2C_Master_Init 010F            _I2C_Master_Read 0149  
          _I2C_Master_Wait 01B0            _I2C_Master_Stop 01C7              __size_of_main 0092  
 __end_of_I2C_Master_Start 01D9   __end_of_I2C_Master_Write 01C7                   intlevel1 0000  
         ___lldiv@dividend 0024    __end_of_I2C_Master_Init 0149    __end_of_I2C_Master_Read 0176  
  __end_of_I2C_Master_Wait 01BD    __end_of_I2C_Master_Stop 01D0           ___lldiv@quotient 0074  
        I2C_Master_Write@d 0073  
