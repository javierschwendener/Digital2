

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:28:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  001F                     _ADCON0bits	set	31
   291  001E                     _ADRESH	set	30
   292  000C                     _PIR1bits	set	12
   293  000B                     _INTCON	set	11
   294  001F                     _ADCON0	set	31
   295  0009                     _PORTE	set	9
   296  0008                     _PORTD	set	8
   297  0007                     _PORTC	set	7
   298  0006                     _PORTB	set	6
   299  0005                     _PORTA	set	5
   300  0094                     _SSPSTATbits	set	148
   301  0094                     _SSPSTAT	set	148
   302  008C                     _PIE1	set	140
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0086                     _TRISB	set	134
   306  0085                     _TRISA	set	133
   307  043B                     _TRISC3	set	1083
   308  043D                     _TRISC5	set	1085
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  0011                     __end_of__initialization:
   325  0011  0183               	clrf	3
   326  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMMON
   329  0078                     __pbssCOMMON:
   330  0078                     _temp:
   331  0078                     	ds	1
   332  0079                     _adc:
   333  0079                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_spiRead:
   338  0070                     ??_spiRead:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_spiWrite:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_setup:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_spiReceiveWait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     spiWrite@dat:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     ??_isr:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	3
   372  0074                     ?_spiInit:
   373  0074                     ??_setup:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     spiInit@sDataSample:	
   377                           ; 1 bytes @ 0x4
   378                           
   379                           
   380                           ; 1 bytes @ 0x4
   381  0074                     	ds	1
   382  0075                     spiInit@sClockIdle:
   383                           
   384                           ; 1 bytes @ 0x5
   385  0075                     	ds	1
   386  0076                     spiInit@sTransmitEdge:
   387                           
   388                           ; 1 bytes @ 0x6
   389  0076                     	ds	1
   390  0077                     ??_spiInit:
   391  0077                     spiInit@sType:	
   392                           ; 1 bytes @ 0x7
   393                           
   394                           
   395                           ; 1 bytes @ 0x7
   396  0077                     	ds	1
   397                           
   398                           	psect	cstackBANK0
   399  0020                     __pcstackBANK0:
   400  0020                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x0
   403  0020                     	ds	2
   404                           
   405                           	psect	maintext
   406  0015                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 57 in file "newmain.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       2       0       0       0
   429 ;;      Totals:         0       2       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels required when called:    4
   432 ;; This function calls:
   433 ;;		_setup
   434 ;;		_spiInit
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  0015                     _main:
   443  0015                     l773:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;newmain.c: 58:     setup();
   449  0015  120A  118A  2060  120A  118A  	fcall	_setup
   450                           
   451                           ;newmain.c: 60:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   452  001A  01F4               	clrf	spiInit@sDataSample
   453  001B  01F5               	clrf	spiInit@sClockIdle
   454  001C  01F6               	clrf	spiInit@sTransmitEdge
   455  001D  3024               	movlw	36
   456  001E  120A  118A  207E  120A  118A  	fcall	_spiInit
   457  0023                     l775:
   458                           
   459                           ;newmain.c: 63:         if (ADCON0bits.GO == 0) {
   460  0023  1283               	bcf	3,5	;RP0=0, select bank0
   461  0024  1303               	bcf	3,6	;RP1=0, select bank0
   462  0025  189F               	btfsc	31,1	;volatile
   463  0026  2828               	goto	u81
   464  0027  2829               	goto	u80
   465  0028                     u81:
   466  0028  2823               	goto	l775
   467  0029                     u80:
   468  0029                     l777:
   469                           
   470                           ;newmain.c: 64:             _delay((unsigned long)((5)*(4000000/4000.0)));
   471  0029  3007               	movlw	7
   472  002A  1283               	bcf	3,5	;RP0=0, select bank0
   473  002B  1303               	bcf	3,6	;RP1=0, select bank0
   474  002C  00A1               	movwf	??_main+1
   475  002D  307C               	movlw	124
   476  002E  00A0               	movwf	??_main
   477  002F                     u97:
   478  002F  0BA0               	decfsz	??_main,f
   479  0030  282F               	goto	u97
   480  0031  0BA1               	decfsz	??_main+1,f
   481  0032  282F               	goto	u97
   482  0033  0000               	nop
   483  0034                     l779:
   484                           
   485                           ;newmain.c: 65:             ADCON0bits.GO = 1;
   486  0034  1283               	bcf	3,5	;RP0=0, select bank0
   487  0035  1303               	bcf	3,6	;RP1=0, select bank0
   488  0036  149F               	bsf	31,1	;volatile
   489  0037  2823               	goto	l775
   490  0038  120A  118A  280C   	ljmp	start
   491  003B                     __end_of_main:
   492                           
   493                           	psect	text1
   494  007E                     __ptext1:	
   495 ;; *************** function _spiInit *****************
   496 ;; Defined at:
   497 ;;		line 12 in file "spi.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  sType           1    wreg     enum E1292
   500 ;;  sDataSample     1    4[COMMON] enum E1300
   501 ;;  sClockIdle      1    5[COMMON] enum E1304
   502 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  sType           1    7[COMMON] enum E1292
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         3       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         4       0       0       0       0
   518 ;;Total ram usage:        4 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    3
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _spiInit
   530  007E                     _spiInit:
   531                           
   532                           ;incstack = 0
   533                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   534                           ;spiInit@sType stored from wreg
   535  007E  00F7               	movwf	spiInit@sType
   536  007F                     l755:
   537                           
   538                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   539  007F  1683               	bsf	3,5	;RP0=1, select bank1
   540  0080  1303               	bcf	3,6	;RP1=0, select bank1
   541  0081  1287               	bcf	7,5	;volatile
   542                           
   543                           ;spi.c: 15:     if(sType & 0b00000100)
   544  0082  1D77               	btfss	spiInit@sType,2
   545  0083  2885               	goto	u61
   546  0084  2886               	goto	u60
   547  0085                     u61:
   548  0085  288A               	goto	l761
   549  0086                     u60:
   550  0086                     l757:
   551                           
   552                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   553  0086  0876               	movf	spiInit@sTransmitEdge,w
   554  0087  0094               	movwf	20	;volatile
   555  0088                     l759:
   556                           
   557                           ;spi.c: 18:         TRISC3 = 1;
   558  0088  1587               	bsf	7,3	;volatile
   559                           
   560                           ;spi.c: 19:     }
   561  0089  288E               	goto	l81
   562  008A                     l761:
   563                           
   564                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   565  008A  0874               	movf	spiInit@sDataSample,w
   566  008B  0476               	iorwf	spiInit@sTransmitEdge,w
   567  008C  0094               	movwf	20	;volatile
   568  008D                     l763:
   569                           
   570                           ;spi.c: 23:         TRISC3 = 0;
   571  008D  1187               	bcf	7,3	;volatile
   572  008E                     l81:	
   573                           ;spi.c: 24:     }
   574                           
   575                           
   576                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   577  008E  0877               	movf	spiInit@sType,w
   578  008F  0475               	iorwf	spiInit@sClockIdle,w
   579  0090  1283               	bcf	3,5	;RP0=0, select bank0
   580  0091  1303               	bcf	3,6	;RP1=0, select bank0
   581  0092  0094               	movwf	20	;volatile
   582  0093                     l82:
   583  0093  0008               	return
   584  0094                     __end_of_spiInit:
   585                           
   586                           	psect	text2
   587  0060                     __ptext2:	
   588 ;; *************** function _setup *****************
   589 ;; Defined at:
   590 ;;		line 23 in file "newmain.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _setup
   620  0060                     _setup:
   621  0060                     l693:	
   622                           ;incstack = 0
   623                           ; Regs used in _setup: [wreg+status,2]
   624                           
   625                           
   626                           ;newmain.c: 25:     PORTA = 0;
   627  0060  1283               	bcf	3,5	;RP0=0, select bank0
   628  0061  1303               	bcf	3,6	;RP1=0, select bank0
   629  0062  0185               	clrf	5	;volatile
   630                           
   631                           ;newmain.c: 26:     PORTB = 0;
   632  0063  0186               	clrf	6	;volatile
   633                           
   634                           ;newmain.c: 27:     PORTC = 0;
   635  0064  0187               	clrf	7	;volatile
   636                           
   637                           ;newmain.c: 28:     PORTD = 0;
   638  0065  0188               	clrf	8	;volatile
   639                           
   640                           ;newmain.c: 29:     PORTE = 0;
   641  0066  0189               	clrf	9	;volatile
   642  0067                     l695:
   643                           
   644                           ;newmain.c: 30:     ANSEL = 0b00000001;
   645  0067  3001               	movlw	1
   646  0068  1683               	bsf	3,5	;RP0=1, select bank3
   647  0069  1703               	bsf	3,6	;RP1=1, select bank3
   648  006A  0088               	movwf	8	;volatile
   649  006B                     l697:
   650                           
   651                           ;newmain.c: 31:     ANSELH = 0;
   652  006B  0189               	clrf	9	;volatile
   653                           
   654                           ;newmain.c: 32:     TRISA = 0b00100001;
   655  006C  3021               	movlw	33
   656  006D  1683               	bsf	3,5	;RP0=1, select bank1
   657  006E  1303               	bcf	3,6	;RP1=0, select bank1
   658  006F  0085               	movwf	5	;volatile
   659  0070                     l699:
   660                           
   661                           ;newmain.c: 33:     TRISB = 0;
   662  0070  0186               	clrf	6	;volatile
   663  0071                     l701:
   664                           
   665                           ;newmain.c: 34:     TRISD = 0;
   666  0071  0188               	clrf	8	;volatile
   667  0072                     l703:
   668                           
   669                           ;newmain.c: 35:     TRISE = 0;
   670  0072  0189               	clrf	9	;volatile
   671  0073                     l705:
   672                           
   673                           ;newmain.c: 37:     ADCON0 = 0b00000001;
   674  0073  3001               	movlw	1
   675  0074  1283               	bcf	3,5	;RP0=0, select bank0
   676  0075  1303               	bcf	3,6	;RP1=0, select bank0
   677  0076  009F               	movwf	31	;volatile
   678  0077                     l707:
   679                           
   680                           ;newmain.c: 38:     INTCON = 0b11000000;
   681  0077  30C0               	movlw	192
   682  0078  008B               	movwf	11	;volatile
   683  0079                     l709:
   684                           
   685                           ;newmain.c: 39:     PIE1 = 0b01000000;
   686  0079  3040               	movlw	64
   687  007A  1683               	bsf	3,5	;RP0=1, select bank1
   688  007B  1303               	bcf	3,6	;RP1=0, select bank1
   689  007C  008C               	movwf	12	;volatile
   690  007D                     l49:
   691  007D  0008               	return
   692  007E                     __end_of_setup:
   693                           
   694                           	psect	text3
   695  003B                     __ptext3:	
   696 ;; *************** function _isr *****************
   697 ;; Defined at:
   698 ;;		line 43 in file "newmain.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, pclath, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0
   714 ;;      Temps:          3       0       0       0       0
   715 ;;      Totals:         3       0       0       0       0
   716 ;;Total ram usage:        3 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    2
   719 ;; This function calls:
   720 ;;		_spiRead
   721 ;;		_spiWrite
   722 ;; This function is called by:
   723 ;;		Interrupt level 1
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _isr
   729  003B                     _isr:
   730  003B                     i1l729:
   731                           
   732                           ;newmain.c: 45:     if (PIR1bits.ADIF == 1) {
   733  003B  1283               	bcf	3,5	;RP0=0, select bank0
   734  003C  1303               	bcf	3,6	;RP1=0, select bank0
   735  003D  1F0C               	btfss	12,6	;volatile
   736  003E  2840               	goto	u3_21
   737  003F  2841               	goto	u3_20
   738  0040                     u3_21:
   739  0040  2846               	goto	i1l735
   740  0041                     u3_20:
   741  0041                     i1l731:
   742                           
   743                           ;newmain.c: 46:         adc = ADRESH;
   744  0041  081E               	movf	30,w	;volatile
   745  0042  00F1               	movwf	??_isr
   746  0043  0871               	movf	??_isr,w
   747  0044  00F9               	movwf	_adc
   748  0045                     i1l733:
   749                           
   750                           ;newmain.c: 47:         PIR1bits.ADIF = 0;
   751  0045  130C               	bcf	12,6	;volatile
   752  0046                     i1l735:
   753                           
   754                           ;newmain.c: 50:     if (PIR1bits.SSPIF == 1) {
   755  0046  1D8C               	btfss	12,3	;volatile
   756  0047  2849               	goto	u4_21
   757  0048  284A               	goto	u4_20
   758  0049                     u4_21:
   759  0049  2859               	goto	i1l56
   760  004A                     u4_20:
   761  004A                     i1l737:
   762                           
   763                           ;newmain.c: 51:         PIR1bits.SSPIF = 0;
   764  004A  118C               	bcf	12,3	;volatile
   765  004B                     i1l739:
   766                           
   767                           ;newmain.c: 52:         temp = spiRead();
   768  004B  120A  118A  2094  120A  118A  	fcall	_spiRead
   769  0050  00F1               	movwf	??_isr
   770  0051  0871               	movf	??_isr,w
   771  0052  00F8               	movwf	_temp
   772                           
   773                           ;newmain.c: 53:         spiWrite(adc);
   774  0053  0879               	movf	_adc,w
   775  0054  120A  118A  20A4  120A  118A  	fcall	_spiWrite
   776  0059                     i1l56:
   777  0059  0873               	movf	??_isr+2,w
   778  005A  008A               	movwf	10
   779  005B  0E72               	swapf	??_isr+1,w
   780  005C  0083               	movwf	3
   781  005D  0EFE               	swapf	btemp,f
   782  005E  0E7E               	swapf	btemp,w
   783  005F  0009               	retfie
   784  0060                     __end_of_isr:
   785                           
   786                           	psect	intentry
   787  0004                     __pintentry:	
   788                           ;incstack = 0
   789                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   790                           
   791  0004                     interrupt_function:
   792  007E                     saved_w	set	btemp
   793  0004  00FE               	movwf	btemp
   794  0005  0E03               	swapf	3,w
   795  0006  00F2               	movwf	??_isr+1
   796  0007  080A               	movf	10,w
   797  0008  00F3               	movwf	??_isr+2
   798  0009  120A  118A  283B   	ljmp	_isr
   799                           
   800                           	psect	text4
   801  00A4                     __ptext4:	
   802 ;; *************** function _spiWrite *****************
   803 ;; Defined at:
   804 ;;		line 34 in file "spi.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  dat             1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  dat             1    0[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         1       0       0       0       0
   822 ;;Total ram usage:        1 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_isr
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _spiWrite
   833  00A4                     _spiWrite:
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _spiWrite: [wreg]
   837                           ;spiWrite@dat stored from wreg
   838  00A4  00F0               	movwf	spiWrite@dat
   839  00A5                     i1l717:
   840                           
   841                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   842  00A5  0870               	movf	spiWrite@dat,w
   843  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   844  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   845  00A8  0093               	movwf	19	;volatile
   846  00A9                     i1l91:
   847  00A9  0008               	return
   848  00AA                     __end_of_spiWrite:
   849                           
   850                           	psect	text5
   851  0094                     __ptext5:	
   852 ;; *************** function _spiRead *****************
   853 ;; Defined at:
   854 ;;		line 47 in file "spi.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      unsigned char 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		_spiReceiveWait
   877 ;; This function is called by:
   878 ;;		_isr
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _spiRead
   884  0094                     _spiRead:
   885  0094                     i1l711:	
   886                           ;incstack = 0
   887                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   888                           
   889                           
   890                           ;spi.c: 49:     spiReceiveWait();
   891  0094  120A  118A  209D  120A  118A  	fcall	_spiReceiveWait
   892  0099                     i1l713:
   893                           
   894                           ;spi.c: 50:     return(SSPBUF);
   895  0099  1283               	bcf	3,5	;RP0=0, select bank0
   896  009A  1303               	bcf	3,6	;RP1=0, select bank0
   897  009B  0813               	movf	19,w	;volatile
   898  009C                     i1l99:
   899  009C  0008               	return
   900  009D                     __end_of_spiRead:
   901                           
   902                           	psect	text6
   903  009D                     __ptext6:	
   904 ;; *************** function _spiReceiveWait *****************
   905 ;; Defined at:
   906 ;;		line 29 in file "spi.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		None
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_spiRead
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _spiReceiveWait
   935  009D                     _spiReceiveWait:
   936  009D                     i1l691:	
   937                           ;incstack = 0
   938                           ; Regs used in _spiReceiveWait: []
   939                           
   940  009D                     i1l85:	
   941                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
   942                           
   943  009D  1683               	bsf	3,5	;RP0=1, select bank1
   944  009E  1303               	bcf	3,6	;RP1=0, select bank1
   945  009F  1C14               	btfss	20,0	;volatile
   946  00A0  28A2               	goto	u1_21
   947  00A1  28A3               	goto	u1_20
   948  00A2                     u1_21:
   949  00A2  289D               	goto	i1l85
   950  00A3                     u1_20:
   951  00A3                     i1l88:
   952  00A3  0008               	return
   953  00A4                     __end_of_spiReceiveWait:
   954  007E                     btemp	set	126	;btemp
   955  007E                     wtemp0	set	126
   956                           
   957                           	psect	config
   958                           
   959                           ;Config register CONFIG1 @ 0x2007
   960                           ;	Oscillator Selection bits
   961                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   962                           ;	Watchdog Timer Enable bit
   963                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   964                           ;	Power-up Timer Enable bit
   965                           ;	PWRTE = OFF, PWRT disabled
   966                           ;	RE3/MCLR pin function select bit
   967                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   968                           ;	Code Protection bit
   969                           ;	CP = OFF, Program memory code protection is disabled
   970                           ;	Data Code Protection bit
   971                           ;	CPD = OFF, Data memory code protection is disabled
   972                           ;	Brown Out Reset Selection bits
   973                           ;	BOREN = OFF, BOR disabled
   974                           ;	Internal External Switchover bit
   975                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   976                           ;	Fail-Safe Clock Monitor Enabled bit
   977                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   978                           ;	Low Voltage Programming Enable bit
   979                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   980                           ;	In-Circuit Debugger Mode bit
   981                           ;	DEBUG = 0x1, unprogrammed default
   982  2007                     	org	8199
   983  2007  20D4               	dw	8404
   984                           
   985                           ;Config register CONFIG2 @ 0x2008
   986                           ;	Brown-out Reset Selection bit
   987                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   988                           ;	Flash Program Memory Self Write Enable bits
   989                           ;	WRT = OFF, Write protection off
   990  2008                     	org	8200
   991  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:28:46 2021

            _SSPSTATbits 0094                       l49 007D                       l81 008E  
                     l82 0093                       u60 0086                       u61 0085  
                     u80 0029                       u81 0028                       u97 002F  
                    l701 0071                      l703 0072                      l705 0073  
                    l707 0077                      l709 0079                      l761 008A  
                    l763 008D                      l755 007F                      l693 0060  
                    l757 0086                      l773 0015                      l695 0067  
                    l759 0088                      l775 0023                      l697 006B  
                    l777 0029                      l699 0070                      l779 0034  
                    _adc 0079                      _isr 003B                     ?_isr 0070  
                   _PIE1 008C                     i1l56 0059                     i1l91 00A9  
                   i1l85 009D                     i1l88 00A3                     i1l99 009C  
                   u1_20 00A3                     u1_21 00A2                     u3_20 0041  
                   u3_21 0040                     u4_20 004A                     u4_21 0049  
                   _main 0015                     _temp 0078                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l711 0094                    i1l713 0099  
                  i1l731 0041                    i1l717 00A5                    i1l733 0045  
                  i1l735 0046                    i1l737 004A                    i1l729 003B  
                  i1l691 009D                    i1l739 004B                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _setup 0060  
                  pclath 000A          __end_of_spiInit 0094          __end_of_spiRead 009D  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 003B                   ??_main 0020                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00AA                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 007E  
                ??_setup 0074               __pmaintext 0015               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 007E                  __ptext2 0060                  __ptext3 003B  
                __ptext4 00A4                  __ptext5 0094                  __ptext6 009D  
           __size_of_isr 0025                  _spiInit 007E                  _spiRead 0094  
   end_of_initialization 0011               ??_spiWrite 0070              spiWrite@dat 0070  
         _spiReceiveWait 009D      start_initialization 000F              __end_of_isr 0060  
 __end_of_spiReceiveWait 00A4              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 001E  
   spiInit@sTransmitEdge 0076        interrupt_function 0004       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 0026                 _spiWrite 00A4  
           spiInit@sType 0077        spiInit@sClockIdle 0075                 intlevel1 0000  
       ??_spiReceiveWait 0070  
