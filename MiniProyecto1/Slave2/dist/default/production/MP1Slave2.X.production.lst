

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:28:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  000C                     _PIR1bits	set	12
   291  000B                     _INTCONbits	set	11
   292  0006                     _PORTBbits	set	6
   293  000B                     _INTCON	set	11
   294  0009                     _PORTE	set	9
   295  0008                     _PORTD	set	8
   296  0007                     _PORTC	set	7
   297  0006                     _PORTB	set	6
   298  0005                     _PORTA	set	5
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  008C                     _PIE1	set	140
   302  0096                     _IOCB	set	150
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0087                     _TRISC	set	135
   306  0086                     _TRISB	set	134
   307  0085                     _TRISA	set	133
   308  043B                     _TRISC3	set	1083
   309  043D                     _TRISC5	set	1085
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315                           ; #config settings
   316                           
   317  000F                     __initialization:
   318                           
   319                           ; Clear objects allocated to COMMON
   320  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   321  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   323  0012                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0012                     __end_of__initialization:
   327  0012  0183               	clrf	3
   328  0013  120A  118A  28A0   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0077                     __pbssCOMMON:
   332  0077                     _temp:
   333  0077                     	ds	1
   334  0078                     _flags2:
   335  0078                     	ds	1
   336  0079                     _flags:
   337  0079                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_spiRead:
   342  0070                     ??_spiRead:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_spiWrite:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ??_spiWrite:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_setup:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_isr:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_spiReceiveWait:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_spiReceiveWait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     spiWrite@dat:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 1 bytes @ 0x0
   371  0070                     	ds	1
   372  0071                     ??_isr:
   373                           
   374                           ; 1 bytes @ 0x1
   375  0071                     	ds	3
   376  0074                     ?_spiInit:
   377  0074                     ??_setup:	
   378                           ; 1 bytes @ 0x4
   379                           
   380  0074                     spiInit@sDataSample:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385  0074                     	ds	1
   386  0075                     spiInit@sClockIdle:
   387                           
   388                           ; 1 bytes @ 0x5
   389  0075                     	ds	1
   390  0076                     spiInit@sTransmitEdge:
   391                           
   392                           ; 1 bytes @ 0x6
   393  0076                     	ds	1
   394  0077                     ??_spiInit:
   395                           
   396                           	psect	cstackBANK0
   397  0020                     __pcstackBANK0:	
   398                           ; 1 bytes @ 0x7
   399                           
   400  0020                     spiInit@sType:
   401                           
   402                           ; 1 bytes @ 0x0
   403  0020                     	ds	1
   404  0021                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x1
   407  0021                     	ds	1
   408                           
   409                           	psect	maintext
   410  00A0                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 68 in file "newmain.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       1       0       0       0
   433 ;;      Totals:         0       1       0       0       0
   434 ;;Total ram usage:        1 bytes
   435 ;; Hardware stack levels required when called:    4
   436 ;; This function calls:
   437 ;;		_setup
   438 ;;		_spiInit
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  00A0                     _main:
   447  00A0                     l797:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;newmain.c: 69:     setup();
   453  00A0  120A  118A  2085  120A  118A  	fcall	_setup
   454                           
   455                           ;newmain.c: 71:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   456  00A5  01F4               	clrf	spiInit@sDataSample
   457  00A6  01F5               	clrf	spiInit@sClockIdle
   458  00A7  01F6               	clrf	spiInit@sTransmitEdge
   459  00A8  3024               	movlw	36
   460  00A9  120A  118A  2067  120A  118A  	fcall	_spiInit
   461  00AE                     l799:
   462                           
   463                           ;newmain.c: 73:         _delay((unsigned long)((1)*(4000000/4000.0)));
   464  00AE  30C7               	movlw	199
   465  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   466  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   467  00B1  00A1               	movwf	??_main
   468  00B2                     u147:
   469  00B2  28B3               	nop2
   470  00B3  0BA1               	decfsz	??_main,f
   471  00B4  28B2               	goto	u147
   472  00B5  28B6               	nop2
   473  00B6  28AE               	goto	l799
   474  00B7  120A  118A  280C   	ljmp	start
   475  00BA                     __end_of_main:
   476                           
   477                           	psect	text1
   478  0067                     __ptext1:	
   479 ;; *************** function _spiInit *****************
   480 ;; Defined at:
   481 ;;		line 12 in file "spi.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  sType           1    wreg     enum E1292
   484 ;;  sDataSample     1    4[COMMON] enum E1300
   485 ;;  sClockIdle      1    5[COMMON] enum E1304
   486 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  sType           1    0[BANK0 ] enum E1292
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         3       0       0       0       0
   499 ;;      Locals:         0       1       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         3       1       0       0       0
   502 ;;Total ram usage:        4 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    3
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _spiInit
   514  0067                     _spiInit:
   515                           
   516                           ;incstack = 0
   517                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   518                           ;spiInit@sType stored from wreg
   519  0067  1283               	bcf	3,5	;RP0=0, select bank0
   520  0068  1303               	bcf	3,6	;RP1=0, select bank0
   521  0069  00A0               	movwf	spiInit@sType
   522  006A                     l787:
   523                           
   524                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   525  006A  1683               	bsf	3,5	;RP0=1, select bank1
   526  006B  1303               	bcf	3,6	;RP1=0, select bank1
   527  006C  1287               	bcf	7,5	;volatile
   528                           
   529                           ;spi.c: 15:     if(sType & 0b00000100)
   530  006D  1283               	bcf	3,5	;RP0=0, select bank0
   531  006E  1303               	bcf	3,6	;RP1=0, select bank0
   532  006F  1D20               	btfss	spiInit@sType,2
   533  0070  2872               	goto	u131
   534  0071  2873               	goto	u130
   535  0072                     u131:
   536  0072  2879               	goto	l793
   537  0073                     u130:
   538  0073                     l789:
   539                           
   540                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   541  0073  0876               	movf	spiInit@sTransmitEdge,w
   542  0074  1683               	bsf	3,5	;RP0=1, select bank1
   543  0075  1303               	bcf	3,6	;RP1=0, select bank1
   544  0076  0094               	movwf	20	;volatile
   545  0077                     l791:
   546                           
   547                           ;spi.c: 18:         TRISC3 = 1;
   548  0077  1587               	bsf	7,3	;volatile
   549                           
   550                           ;spi.c: 19:     }
   551  0078  287F               	goto	l89
   552  0079                     l793:
   553                           
   554                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   555  0079  0874               	movf	spiInit@sDataSample,w
   556  007A  0476               	iorwf	spiInit@sTransmitEdge,w
   557  007B  1683               	bsf	3,5	;RP0=1, select bank1
   558  007C  1303               	bcf	3,6	;RP1=0, select bank1
   559  007D  0094               	movwf	20	;volatile
   560  007E                     l795:
   561                           
   562                           ;spi.c: 23:         TRISC3 = 0;
   563  007E  1187               	bcf	7,3	;volatile
   564  007F                     l89:	
   565                           ;spi.c: 24:     }
   566                           
   567                           
   568                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   569  007F  1283               	bcf	3,5	;RP0=0, select bank0
   570  0080  1303               	bcf	3,6	;RP1=0, select bank0
   571  0081  0820               	movf	spiInit@sType,w
   572  0082  0475               	iorwf	spiInit@sClockIdle,w
   573  0083  0094               	movwf	20	;volatile
   574  0084                     l90:
   575  0084  0008               	return
   576  0085                     __end_of_spiInit:
   577                           
   578                           	psect	text2
   579  0085                     __ptext2:	
   580 ;; *************** function _setup *****************
   581 ;; Defined at:
   582 ;;		line 20 in file "newmain.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    3
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _setup
   612  0085                     _setup:
   613  0085                     l701:	
   614                           ;incstack = 0
   615                           ; Regs used in _setup: [wreg+status,2]
   616                           
   617                           
   618                           ;newmain.c: 22:     PORTA = 0;
   619  0085  1283               	bcf	3,5	;RP0=0, select bank0
   620  0086  1303               	bcf	3,6	;RP1=0, select bank0
   621  0087  0185               	clrf	5	;volatile
   622                           
   623                           ;newmain.c: 23:     PORTB = 0;
   624  0088  0186               	clrf	6	;volatile
   625                           
   626                           ;newmain.c: 24:     PORTC = 0;
   627  0089  0187               	clrf	7	;volatile
   628                           
   629                           ;newmain.c: 25:     PORTD = 0;
   630  008A  0188               	clrf	8	;volatile
   631                           
   632                           ;newmain.c: 26:     PORTE = 0;
   633  008B  0189               	clrf	9	;volatile
   634                           
   635                           ;newmain.c: 27:     ANSEL = 0;
   636  008C  1683               	bsf	3,5	;RP0=1, select bank3
   637  008D  1703               	bsf	3,6	;RP1=1, select bank3
   638  008E  0188               	clrf	8	;volatile
   639                           
   640                           ;newmain.c: 28:     ANSELH = 0;
   641  008F  0189               	clrf	9	;volatile
   642  0090                     l703:
   643                           
   644                           ;newmain.c: 29:     TRISA = 0b00100000;
   645  0090  3020               	movlw	32
   646  0091  1683               	bsf	3,5	;RP0=1, select bank1
   647  0092  1303               	bcf	3,6	;RP1=0, select bank1
   648  0093  0085               	movwf	5	;volatile
   649  0094                     l705:
   650                           
   651                           ;newmain.c: 30:     TRISB = 0b00000011;
   652  0094  3003               	movlw	3
   653  0095  0086               	movwf	6	;volatile
   654                           
   655                           ;newmain.c: 31:     TRISC = 0;
   656  0096  0187               	clrf	7	;volatile
   657                           
   658                           ;newmain.c: 32:     TRISD = 0;
   659  0097  0188               	clrf	8	;volatile
   660                           
   661                           ;newmain.c: 33:     TRISE = 0;
   662  0098  0189               	clrf	9	;volatile
   663  0099                     l707:
   664                           
   665                           ;newmain.c: 35:     IOCB = 0b00000011;
   666  0099  3003               	movlw	3
   667  009A  0096               	movwf	22	;volatile
   668  009B                     l709:
   669                           
   670                           ;newmain.c: 36:     PIE1 = 0b00001000;
   671  009B  3008               	movlw	8
   672  009C  008C               	movwf	12	;volatile
   673  009D                     l711:
   674                           
   675                           ;newmain.c: 37:     INTCON = 0b11001000;
   676  009D  30C8               	movlw	200
   677  009E  008B               	movwf	11	;volatile
   678  009F                     l47:
   679  009F  0008               	return
   680  00A0                     __end_of_setup:
   681                           
   682                           	psect	text3
   683  0016                     __ptext3:	
   684 ;; *************** function _isr *****************
   685 ;; Defined at:
   686 ;;		line 44 in file "newmain.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          3       0       0       0       0
   703 ;;      Totals:         3       0       0       0       0
   704 ;;Total ram usage:        3 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    2
   707 ;; This function calls:
   708 ;;		_spiRead
   709 ;;		_spiWrite
   710 ;; This function is called by:
   711 ;;		Interrupt level 1
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _isr
   717  0016                     _isr:
   718  0016                     i1l731:
   719                           
   720                           ;newmain.c: 46:     if (PORTBbits.RB0 == 1 && flags == 0b00000000) {
   721  0016  1283               	bcf	3,5	;RP0=0, select bank0
   722  0017  1303               	bcf	3,6	;RP1=0, select bank0
   723  0018  1C06               	btfss	6,0	;volatile
   724  0019  281B               	goto	u3_21
   725  001A  281C               	goto	u3_20
   726  001B                     u3_21:
   727  001B  2828               	goto	i1l58
   728  001C                     u3_20:
   729  001C                     i1l733:
   730  001C  0879               	movf	_flags,w
   731  001D  1D03               	btfss	3,2
   732  001E  2820               	goto	u4_21
   733  001F  2821               	goto	u4_20
   734  0020                     u4_21:
   735  0020  2828               	goto	i1l58
   736  0021                     u4_20:
   737  0021                     i1l735:
   738                           
   739                           ;newmain.c: 47:         flags = 0b00000001;
   740  0021  01F9               	clrf	_flags
   741  0022  0AF9               	incf	_flags,f
   742  0023                     i1l737:
   743                           
   744                           ;newmain.c: 48:         PORTD++;
   745  0023  3001               	movlw	1
   746  0024  00F1               	movwf	??_isr
   747  0025  0871               	movf	??_isr,w
   748  0026  0788               	addwf	8,f	;volatile
   749                           
   750                           ;newmain.c: 49:     } else if (PORTBbits.RB0 == 0 && flags == 0b00000001) {
   751  0027  2832               	goto	i1l743
   752  0028                     i1l58:
   753  0028  1806               	btfsc	6,0	;volatile
   754  0029  282B               	goto	u5_21
   755  002A  282C               	goto	u5_20
   756  002B                     u5_21:
   757  002B  2832               	goto	i1l743
   758  002C                     u5_20:
   759  002C                     i1l739:
   760  002C  0379               	decf	_flags,w
   761  002D  1D03               	btfss	3,2
   762  002E  2830               	goto	u6_21
   763  002F  2831               	goto	u6_20
   764  0030                     u6_21:
   765  0030  2832               	goto	i1l743
   766  0031                     u6_20:
   767  0031                     i1l741:
   768                           
   769                           ;newmain.c: 50:         flags = 0b00000000;
   770  0031  01F9               	clrf	_flags
   771  0032                     i1l743:
   772                           
   773                           ;newmain.c: 52:     if (PORTBbits.RB1 && flags2 == 0b00000000) {
   774  0032  1C86               	btfss	6,1	;volatile
   775  0033  2835               	goto	u7_21
   776  0034  2836               	goto	u7_20
   777  0035                     u7_21:
   778  0035  2840               	goto	i1l61
   779  0036                     u7_20:
   780  0036                     i1l745:
   781  0036  0878               	movf	_flags2,w
   782  0037  1D03               	btfss	3,2
   783  0038  283A               	goto	u8_21
   784  0039  283B               	goto	u8_20
   785  003A                     u8_21:
   786  003A  2840               	goto	i1l61
   787  003B                     u8_20:
   788  003B                     i1l747:
   789                           
   790                           ;newmain.c: 53:         flags2 = 0b00000001;
   791  003B  01F8               	clrf	_flags2
   792  003C  0AF8               	incf	_flags2,f
   793  003D                     i1l749:
   794                           
   795                           ;newmain.c: 54:         PORTD--;
   796  003D  3001               	movlw	1
   797  003E  0288               	subwf	8,f	;volatile
   798                           
   799                           ;newmain.c: 55:     } else if (PORTBbits.RB1 == 0 && flags2 == 0b00000001) {
   800  003F  284A               	goto	i1l755
   801  0040                     i1l61:
   802  0040  1886               	btfsc	6,1	;volatile
   803  0041  2843               	goto	u9_21
   804  0042  2844               	goto	u9_20
   805  0043                     u9_21:
   806  0043  284A               	goto	i1l755
   807  0044                     u9_20:
   808  0044                     i1l751:
   809  0044  0378               	decf	_flags2,w
   810  0045  1D03               	btfss	3,2
   811  0046  2848               	goto	u10_21
   812  0047  2849               	goto	u10_20
   813  0048                     u10_21:
   814  0048  284A               	goto	i1l755
   815  0049                     u10_20:
   816  0049                     i1l753:
   817                           
   818                           ;newmain.c: 56:         flags2 = 0b00000000;
   819  0049  01F8               	clrf	_flags2
   820  004A                     i1l755:
   821                           
   822                           ;newmain.c: 59:     INTCONbits.RBIF = 0;
   823  004A  100B               	bcf	11,0	;volatile
   824  004B                     i1l757:
   825                           
   826                           ;newmain.c: 61:     if (PIR1bits.SSPIF == 1) {
   827  004B  1D8C               	btfss	12,3	;volatile
   828  004C  284E               	goto	u11_21
   829  004D  284F               	goto	u11_20
   830  004E                     u11_21:
   831  004E  2860               	goto	i1l65
   832  004F                     u11_20:
   833  004F                     i1l759:
   834                           
   835                           ;newmain.c: 62:         PIR1bits.SSPIF = 0;
   836  004F  118C               	bcf	12,3	;volatile
   837  0050                     i1l761:
   838                           
   839                           ;newmain.c: 63:         temp = spiRead();
   840  0050  120A  118A  20BA  120A  118A  	fcall	_spiRead
   841  0055  00F1               	movwf	??_isr
   842  0056  0871               	movf	??_isr,w
   843  0057  00F7               	movwf	_temp
   844                           
   845                           ;newmain.c: 64:         spiWrite(PORTD);
   846  0058  1283               	bcf	3,5	;RP0=0, select bank0
   847  0059  1303               	bcf	3,6	;RP1=0, select bank0
   848  005A  0808               	movf	8,w	;volatile
   849  005B  120A  118A  20CA  120A  118A  	fcall	_spiWrite
   850  0060                     i1l65:
   851  0060  0873               	movf	??_isr+2,w
   852  0061  008A               	movwf	10
   853  0062  0E72               	swapf	??_isr+1,w
   854  0063  0083               	movwf	3
   855  0064  0EFE               	swapf	btemp,f
   856  0065  0E7E               	swapf	btemp,w
   857  0066  0009               	retfie
   858  0067                     __end_of_isr:
   859                           
   860                           	psect	intentry
   861  0004                     __pintentry:	
   862                           ;incstack = 0
   863                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   864                           
   865  0004                     interrupt_function:
   866  007E                     saved_w	set	btemp
   867  0004  00FE               	movwf	btemp
   868  0005  0E03               	swapf	3,w
   869  0006  00F2               	movwf	??_isr+1
   870  0007  080A               	movf	10,w
   871  0008  00F3               	movwf	??_isr+2
   872  0009  120A  118A  2816   	ljmp	_isr
   873                           
   874                           	psect	text4
   875  00CA                     __ptext4:	
   876 ;; *************** function _spiWrite *****************
   877 ;; Defined at:
   878 ;;		line 34 in file "spi.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  dat             1    wreg     unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  dat             1    0[COMMON] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         1       0       0       0       0
   896 ;;Total ram usage:        1 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_isr
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _spiWrite
   907  00CA                     _spiWrite:
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _spiWrite: [wreg]
   911                           ;spiWrite@dat stored from wreg
   912  00CA  00F0               	movwf	spiWrite@dat
   913  00CB                     i1l719:
   914                           
   915                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   916  00CB  0870               	movf	spiWrite@dat,w
   917  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   918  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   919  00CE  0093               	movwf	19	;volatile
   920  00CF                     i1l99:
   921  00CF  0008               	return
   922  00D0                     __end_of_spiWrite:
   923                           
   924                           	psect	text5
   925  00BA                     __ptext5:	
   926 ;; *************** function _spiRead *****************
   927 ;; Defined at:
   928 ;;		line 47 in file "spi.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    1
   949 ;; This function calls:
   950 ;;		_spiReceiveWait
   951 ;; This function is called by:
   952 ;;		_isr
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _spiRead
   958  00BA                     _spiRead:
   959  00BA                     i1l713:	
   960                           ;incstack = 0
   961                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   962                           
   963                           
   964                           ;spi.c: 49:     spiReceiveWait();
   965  00BA  120A  118A  20C3  120A  118A  	fcall	_spiReceiveWait
   966  00BF                     i1l715:
   967                           
   968                           ;spi.c: 50:     return(SSPBUF);
   969  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   970  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   971  00C1  0813               	movf	19,w	;volatile
   972  00C2                     i1l107:
   973  00C2  0008               	return
   974  00C3                     __end_of_spiRead:
   975                           
   976                           	psect	text6
   977  00C3                     __ptext6:	
   978 ;; *************** function _spiReceiveWait *****************
   979 ;; Defined at:
   980 ;;		line 29 in file "spi.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		None
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_spiRead
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _spiReceiveWait
  1009  00C3                     _spiReceiveWait:
  1010  00C3                     i1l699:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _spiReceiveWait: []
  1013                           
  1014  00C3                     i1l93:	
  1015                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1016                           
  1017  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1018  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1019  00C5  1C14               	btfss	20,0	;volatile
  1020  00C6  28C8               	goto	u1_21
  1021  00C7  28C9               	goto	u1_20
  1022  00C8                     u1_21:
  1023  00C8  28C3               	goto	i1l93
  1024  00C9                     u1_20:
  1025  00C9                     i1l96:
  1026  00C9  0008               	return
  1027  00CA                     __end_of_spiReceiveWait:
  1028  007E                     btemp	set	126	;btemp
  1029  007E                     wtemp0	set	126
  1030                           
  1031                           	psect	config
  1032                           
  1033                           ;Config register CONFIG1 @ 0x2007
  1034                           ;	Oscillator Selection bits
  1035                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1036                           ;	Watchdog Timer Enable bit
  1037                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1038                           ;	Power-up Timer Enable bit
  1039                           ;	PWRTE = OFF, PWRT disabled
  1040                           ;	RE3/MCLR pin function select bit
  1041                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1042                           ;	Code Protection bit
  1043                           ;	CP = OFF, Program memory code protection is disabled
  1044                           ;	Data Code Protection bit
  1045                           ;	CPD = OFF, Data memory code protection is disabled
  1046                           ;	Brown Out Reset Selection bits
  1047                           ;	BOREN = OFF, BOR disabled
  1048                           ;	Internal External Switchover bit
  1049                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1050                           ;	Fail-Safe Clock Monitor Enabled bit
  1051                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1052                           ;	Low Voltage Programming Enable bit
  1053                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1054                           ;	In-Circuit Debugger Mode bit
  1055                           ;	DEBUG = 0x1, unprogrammed default
  1056  2007                     	org	8199
  1057  2007  20D4               	dw	8404
  1058                           
  1059                           ;Config register CONFIG2 @ 0x2008
  1060                           ;	Brown-out Reset Selection bit
  1061                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1062                           ;	Flash Program Memory Self Write Enable bits
  1063                           ;	WRT = OFF, Write protection off
  1064  2008                     	org	8200
  1065  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              1 BANK0      1     1      0
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:28:51 2021

            _SSPSTATbits 0094                       l47 009F                       l90 0084  
                     l89 007F                      l701 0085                      l711 009D  
                    l703 0090                      l705 0094                      l707 0099  
                    l709 009B                      l791 0077                      l793 0079  
                    l795 007E                      l787 006A                      l789 0073  
                    l797 00A0                      l799 00AE                      u130 0073  
                    u131 0072                      u147 00B2                      _isr 0016  
                   ?_isr 0070                     _IOCB 0096                     _PIE1 008C  
                   i1l61 0040                     i1l65 0060                     i1l58 0028  
                   i1l93 00C3                     i1l96 00C9                     i1l99 00CF  
                   u1_20 00C9                     u1_21 00C8                     u3_20 001C  
                   u3_21 001B                     u4_20 0021                     u4_21 0020  
                   u5_20 002C                     u5_21 002B                     u6_20 0031  
                   u6_21 0030                     u7_20 0036                     u7_21 0035  
                   u8_20 003B                     u8_21 003A                     u9_20 0044  
                   u9_21 0043                     _main 00A0                     _temp 0077  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l107 00C2  
                  i1l713 00BA                    i1l715 00BF                    i1l731 0016  
                  i1l741 0031                    i1l733 001C                    i1l719 00CB  
                  i1l751 0044                    i1l743 0032                    i1l735 0021  
                  i1l761 0050                    i1l753 0049                    i1l745 0036  
                  i1l737 0023                    i1l755 004A                    i1l747 003B  
                  i1l739 002C                    i1l757 004B                    i1l749 003D  
                  i1l759 004F                    i1l699 00C3                    u10_20 0049  
                  u10_21 0048                    u11_20 004F                    u11_21 004E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _flags 0079                    _setup 0085  
                  pclath 000A          __end_of_spiInit 0085          __end_of_spiRead 00C3  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00BA                   ??_main 0021                   ?_setup 0070  
                 _ANSELH 0189                   _INTCON 000B                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _flags2 0078                   saved_w 007E         __end_of_spiWrite 00D0  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 00A0                  ??_setup 0074  
             __pmaintext 00A0               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0067  
                __ptext2 0085                  __ptext3 0016                  __ptext4 00CA  
                __ptext5 00BA                  __ptext6 00C3             __size_of_isr 0051  
                _spiInit 0067                  _spiRead 00BA     end_of_initialization 0012  
             ??_spiWrite 0070                _PORTBbits 0006              spiWrite@dat 0070  
         _spiReceiveWait 00C3      start_initialization 000F              __end_of_isr 0067  
 __end_of_spiReceiveWait 00CA              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 001B  
   spiInit@sTransmitEdge 0076        interrupt_function 0004       spiInit@sDataSample 0074  
               _PIR1bits 000C         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 001A                 _spiWrite 00CA             spiInit@sType 0020  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
