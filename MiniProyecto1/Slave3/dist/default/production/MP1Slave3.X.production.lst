

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:28:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  001F                     _ADCON0bits	set	31
   291  001E                     _ADRESH	set	30
   292  000C                     _PIR1bits	set	12
   293  000B                     _INTCON	set	11
   294  001F                     _ADCON0	set	31
   295  0009                     _PORTE	set	9
   296  0008                     _PORTD	set	8
   297  0007                     _PORTC	set	7
   298  0006                     _PORTB	set	6
   299  0005                     _PORTA	set	5
   300  0094                     _SSPSTATbits	set	148
   301  0094                     _SSPSTAT	set	148
   302  008C                     _PIE1	set	140
   303  009F                     _ADCON1	set	159
   304  0089                     _TRISE	set	137
   305  0088                     _TRISD	set	136
   306  0086                     _TRISB	set	134
   307  0085                     _TRISA	set	133
   308  043B                     _TRISC3	set	1083
   309  043D                     _TRISC5	set	1085
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315                           ; #config settings
   316                           
   317  000F                     __initialization:
   318                           
   319                           ; Clear objects allocated to COMMON
   320  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   321  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0011                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0011                     __end_of__initialization:
   326  0011  0183               	clrf	3
   327  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0078                     __pbssCOMMON:
   331  0078                     _temp:
   332  0078                     	ds	1
   333  0079                     _adc:
   334  0079                     	ds	1
   335                           
   336                           	psect	cstackCOMMON
   337  0070                     __pcstackCOMMON:
   338  0070                     ?_spiRead:
   339  0070                     ??_spiRead:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_spiWrite:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_spiWrite:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_setup:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_isr:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_spiReceiveWait:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_spiReceiveWait:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     spiWrite@dat:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 1 bytes @ 0x0
   368  0070                     	ds	1
   369  0071                     ??_isr:
   370                           
   371                           ; 1 bytes @ 0x1
   372  0071                     	ds	3
   373  0074                     ?_spiInit:
   374  0074                     ??_setup:	
   375                           ; 1 bytes @ 0x4
   376                           
   377  0074                     spiInit@sDataSample:	
   378                           ; 1 bytes @ 0x4
   379                           
   380                           
   381                           ; 1 bytes @ 0x4
   382  0074                     	ds	1
   383  0075                     spiInit@sClockIdle:
   384                           
   385                           ; 1 bytes @ 0x5
   386  0075                     	ds	1
   387  0076                     spiInit@sTransmitEdge:
   388                           
   389                           ; 1 bytes @ 0x6
   390  0076                     	ds	1
   391  0077                     ??_spiInit:
   392  0077                     spiInit@sType:	
   393                           ; 1 bytes @ 0x7
   394                           
   395                           
   396                           ; 1 bytes @ 0x7
   397  0077                     	ds	1
   398                           
   399                           	psect	cstackBANK0
   400  0020                     __pcstackBANK0:
   401  0020                     ??_main:
   402                           
   403                           ; 1 bytes @ 0x0
   404  0020                     	ds	2
   405                           
   406                           	psect	maintext
   407  0015                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 57 in file "newmain.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       2       0       0       0
   430 ;;      Totals:         0       2       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels required when called:    4
   433 ;; This function calls:
   434 ;;		_setup
   435 ;;		_spiInit
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  0015                     _main:
   444  0015                     l801:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;newmain.c: 58:     setup();
   450  0015  120A  118A  207A  120A  118A  	fcall	_setup
   451                           
   452                           ;newmain.c: 60:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   453  001A  01F4               	clrf	spiInit@sDataSample
   454  001B  01F5               	clrf	spiInit@sClockIdle
   455  001C  01F6               	clrf	spiInit@sTransmitEdge
   456  001D  3024               	movlw	36
   457  001E  120A  118A  209A  120A  118A  	fcall	_spiInit
   458  0023                     l803:
   459                           
   460                           ;newmain.c: 63:         if (ADCON0bits.GO == 0) {
   461  0023  1283               	bcf	3,5	;RP0=0, select bank0
   462  0024  1303               	bcf	3,6	;RP1=0, select bank0
   463  0025  189F               	btfsc	31,1	;volatile
   464  0026  2828               	goto	u141
   465  0027  2829               	goto	u140
   466  0028                     u141:
   467  0028  2837               	goto	l64
   468  0029                     u140:
   469  0029                     l805:
   470                           
   471                           ;newmain.c: 64:             _delay((unsigned long)((5)*(4000000/4000.0)));
   472  0029  3007               	movlw	7
   473  002A  1283               	bcf	3,5	;RP0=0, select bank0
   474  002B  1303               	bcf	3,6	;RP1=0, select bank0
   475  002C  00A1               	movwf	??_main+1
   476  002D  307C               	movlw	124
   477  002E  00A0               	movwf	??_main
   478  002F                     u187:
   479  002F  0BA0               	decfsz	??_main,f
   480  0030  282F               	goto	u187
   481  0031  0BA1               	decfsz	??_main+1,f
   482  0032  282F               	goto	u187
   483  0033  0000               	nop
   484  0034                     l807:
   485                           
   486                           ;newmain.c: 65:             ADCON0bits.GO = 1;
   487  0034  1283               	bcf	3,5	;RP0=0, select bank0
   488  0035  1303               	bcf	3,6	;RP1=0, select bank0
   489  0036  149F               	bsf	31,1	;volatile
   490  0037                     l64:	
   491                           ;newmain.c: 66:         }
   492                           
   493                           
   494                           ;newmain.c: 68:         if (adc < 13) {
   495  0037  300D               	movlw	13
   496  0038  0279               	subwf	_adc,w
   497  0039  1803               	skipnc
   498  003A  283C               	goto	u151
   499  003B  283D               	goto	u150
   500  003C                     u151:
   501  003C  2840               	goto	l811
   502  003D                     u150:
   503  003D                     l809:
   504                           
   505                           ;newmain.c: 69:             PORTD = 0b00000100;
   506  003D  3004               	movlw	4
   507  003E  0088               	movwf	8	;volatile
   508                           
   509                           ;newmain.c: 70:         } else if (adc >= 13 && adc < 29) {
   510  003F  2823               	goto	l803
   511  0040                     l811:
   512  0040  300D               	movlw	13
   513  0041  0279               	subwf	_adc,w
   514  0042  1C03               	skipc
   515  0043  2845               	goto	u161
   516  0044  2846               	goto	u160
   517  0045                     u161:
   518  0045  284F               	goto	l817
   519  0046                     u160:
   520  0046                     l813:
   521  0046  301D               	movlw	29
   522  0047  0279               	subwf	_adc,w
   523  0048  1803               	skipnc
   524  0049  284B               	goto	u171
   525  004A  284C               	goto	u170
   526  004B                     u171:
   527  004B  284F               	goto	l817
   528  004C                     u170:
   529  004C                     l815:
   530                           
   531                           ;newmain.c: 71:             PORTD = 0b00000010;
   532  004C  3002               	movlw	2
   533  004D  0088               	movwf	8	;volatile
   534                           
   535                           ;newmain.c: 72:         } else {
   536  004E  2823               	goto	l803
   537  004F                     l817:
   538                           
   539                           ;newmain.c: 73:             PORTD = 0b00000001;
   540  004F  3001               	movlw	1
   541  0050  0088               	movwf	8	;volatile
   542  0051  2823               	goto	l803
   543  0052  120A  118A  280C   	ljmp	start
   544  0055                     __end_of_main:
   545                           
   546                           	psect	text1
   547  009A                     __ptext1:	
   548 ;; *************** function _spiInit *****************
   549 ;; Defined at:
   550 ;;		line 12 in file "spi.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  sType           1    wreg     enum E1292
   553 ;;  sDataSample     1    4[COMMON] enum E1300
   554 ;;  sClockIdle      1    5[COMMON] enum E1304
   555 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  sType           1    7[COMMON] enum E1292
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         3       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         4       0       0       0       0
   571 ;;Total ram usage:        4 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    3
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _spiInit
   583  009A                     _spiInit:
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   587                           ;spiInit@sType stored from wreg
   588  009A  00F7               	movwf	spiInit@sType
   589  009B                     l773:
   590                           
   591                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   592  009B  1683               	bsf	3,5	;RP0=1, select bank1
   593  009C  1303               	bcf	3,6	;RP1=0, select bank1
   594  009D  1287               	bcf	7,5	;volatile
   595                           
   596                           ;spi.c: 15:     if(sType & 0b00000100)
   597  009E  1D77               	btfss	spiInit@sType,2
   598  009F  28A1               	goto	u91
   599  00A0  28A2               	goto	u90
   600  00A1                     u91:
   601  00A1  28A6               	goto	l779
   602  00A2                     u90:
   603  00A2                     l775:
   604                           
   605                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   606  00A2  0876               	movf	spiInit@sTransmitEdge,w
   607  00A3  0094               	movwf	20	;volatile
   608  00A4                     l777:
   609                           
   610                           ;spi.c: 18:         TRISC3 = 1;
   611  00A4  1587               	bsf	7,3	;volatile
   612                           
   613                           ;spi.c: 19:     }
   614  00A5  28AA               	goto	l87
   615  00A6                     l779:
   616                           
   617                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   618  00A6  0874               	movf	spiInit@sDataSample,w
   619  00A7  0476               	iorwf	spiInit@sTransmitEdge,w
   620  00A8  0094               	movwf	20	;volatile
   621  00A9                     l781:
   622                           
   623                           ;spi.c: 23:         TRISC3 = 0;
   624  00A9  1187               	bcf	7,3	;volatile
   625  00AA                     l87:	
   626                           ;spi.c: 24:     }
   627                           
   628                           
   629                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   630  00AA  0877               	movf	spiInit@sType,w
   631  00AB  0475               	iorwf	spiInit@sClockIdle,w
   632  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   633  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   634  00AE  0094               	movwf	20	;volatile
   635  00AF                     l88:
   636  00AF  0008               	return
   637  00B0                     __end_of_spiInit:
   638                           
   639                           	psect	text2
   640  007A                     __ptext2:	
   641 ;; *************** function _setup *****************
   642 ;; Defined at:
   643 ;;		line 23 in file "newmain.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    3
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _setup
   673  007A                     _setup:
   674  007A                     l699:	
   675                           ;incstack = 0
   676                           ; Regs used in _setup: [wreg+status,2]
   677                           
   678                           
   679                           ;newmain.c: 25:     PORTA = 0;
   680  007A  1283               	bcf	3,5	;RP0=0, select bank0
   681  007B  1303               	bcf	3,6	;RP1=0, select bank0
   682  007C  0185               	clrf	5	;volatile
   683                           
   684                           ;newmain.c: 26:     PORTB = 0;
   685  007D  0186               	clrf	6	;volatile
   686                           
   687                           ;newmain.c: 27:     PORTC = 0;
   688  007E  0187               	clrf	7	;volatile
   689                           
   690                           ;newmain.c: 28:     PORTD = 0;
   691  007F  0188               	clrf	8	;volatile
   692                           
   693                           ;newmain.c: 29:     PORTE = 0;
   694  0080  0189               	clrf	9	;volatile
   695  0081                     l701:
   696                           
   697                           ;newmain.c: 30:     ANSEL = 0b00000001;
   698  0081  3001               	movlw	1
   699  0082  1683               	bsf	3,5	;RP0=1, select bank3
   700  0083  1703               	bsf	3,6	;RP1=1, select bank3
   701  0084  0088               	movwf	8	;volatile
   702  0085                     l703:
   703                           
   704                           ;newmain.c: 31:     ANSELH = 0;
   705  0085  0189               	clrf	9	;volatile
   706                           
   707                           ;newmain.c: 32:     TRISA = 0b00101001;
   708  0086  3029               	movlw	41
   709  0087  1683               	bsf	3,5	;RP0=1, select bank1
   710  0088  1303               	bcf	3,6	;RP1=0, select bank1
   711  0089  0085               	movwf	5	;volatile
   712  008A                     l705:
   713                           
   714                           ;newmain.c: 33:     TRISB = 0;
   715  008A  0186               	clrf	6	;volatile
   716  008B                     l707:
   717                           
   718                           ;newmain.c: 34:     TRISD = 0;
   719  008B  0188               	clrf	8	;volatile
   720  008C                     l709:
   721                           
   722                           ;newmain.c: 35:     TRISE = 0;
   723  008C  0189               	clrf	9	;volatile
   724  008D                     l711:
   725                           
   726                           ;newmain.c: 37:     ADCON0 = 0b00000001;
   727  008D  3001               	movlw	1
   728  008E  1283               	bcf	3,5	;RP0=0, select bank0
   729  008F  1303               	bcf	3,6	;RP1=0, select bank0
   730  0090  009F               	movwf	31	;volatile
   731  0091                     l713:
   732                           
   733                           ;newmain.c: 38:     ADCON1 = 0b00010000;
   734  0091  3010               	movlw	16
   735  0092  1683               	bsf	3,5	;RP0=1, select bank1
   736  0093  1303               	bcf	3,6	;RP1=0, select bank1
   737  0094  009F               	movwf	31	;volatile
   738  0095                     l715:
   739                           
   740                           ;newmain.c: 39:     INTCON = 0b11000000;
   741  0095  30C0               	movlw	192
   742  0096  008B               	movwf	11	;volatile
   743  0097                     l717:
   744                           
   745                           ;newmain.c: 40:     PIE1 = 0b01000000;
   746  0097  3040               	movlw	64
   747  0098  008C               	movwf	12	;volatile
   748  0099                     l51:
   749  0099  0008               	return
   750  009A                     __end_of_setup:
   751                           
   752                           	psect	text3
   753  0055                     __ptext3:	
   754 ;; *************** function _isr *****************
   755 ;; Defined at:
   756 ;;		line 43 in file "newmain.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          3       0       0       0       0
   773 ;;      Totals:         3       0       0       0       0
   774 ;;Total ram usage:        3 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    2
   777 ;; This function calls:
   778 ;;		_spiRead
   779 ;;		_spiWrite
   780 ;; This function is called by:
   781 ;;		Interrupt level 1
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _isr
   787  0055                     _isr:
   788  0055                     i1l737:
   789                           
   790                           ;newmain.c: 45:     if (PIR1bits.ADIF == 1) {
   791  0055  1283               	bcf	3,5	;RP0=0, select bank0
   792  0056  1303               	bcf	3,6	;RP1=0, select bank0
   793  0057  1F0C               	btfss	12,6	;volatile
   794  0058  285A               	goto	u3_21
   795  0059  285B               	goto	u3_20
   796  005A                     u3_21:
   797  005A  2860               	goto	i1l743
   798  005B                     u3_20:
   799  005B                     i1l739:
   800                           
   801                           ;newmain.c: 46:         adc = ADRESH;
   802  005B  081E               	movf	30,w	;volatile
   803  005C  00F1               	movwf	??_isr
   804  005D  0871               	movf	??_isr,w
   805  005E  00F9               	movwf	_adc
   806  005F                     i1l741:
   807                           
   808                           ;newmain.c: 47:         PIR1bits.ADIF = 0;
   809  005F  130C               	bcf	12,6	;volatile
   810  0060                     i1l743:
   811                           
   812                           ;newmain.c: 50:     if (PIR1bits.SSPIF == 1) {
   813  0060  1D8C               	btfss	12,3	;volatile
   814  0061  2863               	goto	u4_21
   815  0062  2864               	goto	u4_20
   816  0063                     u4_21:
   817  0063  2873               	goto	i1l58
   818  0064                     u4_20:
   819  0064                     i1l745:
   820                           
   821                           ;newmain.c: 51:         PIR1bits.SSPIF = 0;
   822  0064  118C               	bcf	12,3	;volatile
   823  0065                     i1l747:
   824                           
   825                           ;newmain.c: 52:         temp = spiRead();
   826  0065  120A  118A  20B0  120A  118A  	fcall	_spiRead
   827  006A  00F1               	movwf	??_isr
   828  006B  0871               	movf	??_isr,w
   829  006C  00F8               	movwf	_temp
   830                           
   831                           ;newmain.c: 53:         spiWrite(adc);
   832  006D  0879               	movf	_adc,w
   833  006E  120A  118A  20C0  120A  118A  	fcall	_spiWrite
   834  0073                     i1l58:
   835  0073  0873               	movf	??_isr+2,w
   836  0074  008A               	movwf	10
   837  0075  0E72               	swapf	??_isr+1,w
   838  0076  0083               	movwf	3
   839  0077  0EFE               	swapf	btemp,f
   840  0078  0E7E               	swapf	btemp,w
   841  0079  0009               	retfie
   842  007A                     __end_of_isr:
   843                           
   844                           	psect	intentry
   845  0004                     __pintentry:	
   846                           ;incstack = 0
   847                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849  0004                     interrupt_function:
   850  007E                     saved_w	set	btemp
   851  0004  00FE               	movwf	btemp
   852  0005  0E03               	swapf	3,w
   853  0006  00F2               	movwf	??_isr+1
   854  0007  080A               	movf	10,w
   855  0008  00F3               	movwf	??_isr+2
   856  0009  120A  118A  2855   	ljmp	_isr
   857                           
   858                           	psect	text4
   859  00C0                     __ptext4:	
   860 ;; *************** function _spiWrite *****************
   861 ;; Defined at:
   862 ;;		line 34 in file "spi.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  dat             1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  dat             1    0[COMMON] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         1       0       0       0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_isr
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _spiWrite
   891  00C0                     _spiWrite:
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _spiWrite: [wreg]
   895                           ;spiWrite@dat stored from wreg
   896  00C0  00F0               	movwf	spiWrite@dat
   897  00C1                     i1l725:
   898                           
   899                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   900  00C1  0870               	movf	spiWrite@dat,w
   901  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   902  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   903  00C4  0093               	movwf	19	;volatile
   904  00C5                     i1l97:
   905  00C5  0008               	return
   906  00C6                     __end_of_spiWrite:
   907                           
   908                           	psect	text5
   909  00B0                     __ptext5:	
   910 ;; *************** function _spiRead *****************
   911 ;; Defined at:
   912 ;;		line 47 in file "spi.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      unsigned char 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    1
   933 ;; This function calls:
   934 ;;		_spiReceiveWait
   935 ;; This function is called by:
   936 ;;		_isr
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           
   941                           ;psect for function _spiRead
   942  00B0                     _spiRead:
   943  00B0                     i1l719:	
   944                           ;incstack = 0
   945                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   946                           
   947                           
   948                           ;spi.c: 49:     spiReceiveWait();
   949  00B0  120A  118A  20B9  120A  118A  	fcall	_spiReceiveWait
   950  00B5                     i1l721:
   951                           
   952                           ;spi.c: 50:     return(SSPBUF);
   953  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   954  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   955  00B7  0813               	movf	19,w	;volatile
   956  00B8                     i1l105:
   957  00B8  0008               	return
   958  00B9                     __end_of_spiRead:
   959                           
   960                           	psect	text6
   961  00B9                     __ptext6:	
   962 ;; *************** function _spiReceiveWait *****************
   963 ;; Defined at:
   964 ;;		line 29 in file "spi.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		None
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_spiRead
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _spiReceiveWait
   993  00B9                     _spiReceiveWait:
   994  00B9                     i1l697:	
   995                           ;incstack = 0
   996                           ; Regs used in _spiReceiveWait: []
   997                           
   998  00B9                     i1l91:	
   999                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1000                           
  1001  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1002  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1003  00BB  1C14               	btfss	20,0	;volatile
  1004  00BC  28BE               	goto	u1_21
  1005  00BD  28BF               	goto	u1_20
  1006  00BE                     u1_21:
  1007  00BE  28B9               	goto	i1l91
  1008  00BF                     u1_20:
  1009  00BF                     i1l94:
  1010  00BF  0008               	return
  1011  00C0                     __end_of_spiReceiveWait:
  1012  007E                     btemp	set	126	;btemp
  1013  007E                     wtemp0	set	126
  1014                           
  1015                           	psect	config
  1016                           
  1017                           ;Config register CONFIG1 @ 0x2007
  1018                           ;	Oscillator Selection bits
  1019                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1020                           ;	Watchdog Timer Enable bit
  1021                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1022                           ;	Power-up Timer Enable bit
  1023                           ;	PWRTE = OFF, PWRT disabled
  1024                           ;	RE3/MCLR pin function select bit
  1025                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1026                           ;	Code Protection bit
  1027                           ;	CP = OFF, Program memory code protection is disabled
  1028                           ;	Data Code Protection bit
  1029                           ;	CPD = OFF, Data memory code protection is disabled
  1030                           ;	Brown Out Reset Selection bits
  1031                           ;	BOREN = OFF, BOR disabled
  1032                           ;	Internal External Switchover bit
  1033                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1034                           ;	Fail-Safe Clock Monitor Enabled bit
  1035                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1036                           ;	Low Voltage Programming Enable bit
  1037                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1038                           ;	In-Circuit Debugger Mode bit
  1039                           ;	DEBUG = 0x1, unprogrammed default
  1040  2007                     	org	8199
  1041  2007  20D4               	dw	8404
  1042                           
  1043                           ;Config register CONFIG2 @ 0x2008
  1044                           ;	Brown-out Reset Selection bit
  1045                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1046                           ;	Flash Program Memory Self Write Enable bits
  1047                           ;	WRT = OFF, Write protection off
  1048  2008                     	org	8200
  1049  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:28:57 2021

            _SSPSTATbits 0094                       l51 0099                       l64 0037  
                     l87 00AA                       l88 00AF                       u90 00A2  
                     u91 00A1                      l701 0081                      l711 008D  
                    l703 0085                      l713 0091                      l705 008A  
                    l801 0015                      l715 0095                      l707 008B  
                    l811 0040                      l803 0023                      l717 0097  
                    l709 008C                      l813 0046                      l805 0029  
                    l815 004C                      l807 0034                      l817 004F  
                    l809 003D                      l781 00A9                      l773 009B  
                    l775 00A2                      l777 00A4                      l699 007A  
                    l779 00A6                      u140 0029                      u141 0028  
                    u150 003D                      u151 003C                      u160 0046  
                    u161 0045                      u170 004C                      u171 004B  
                    u187 002F                      _adc 0079                      _isr 0055  
                   ?_isr 0070                     _PIE1 008C                     i1l58 0073  
                   i1l91 00B9                     i1l94 00BF                     i1l97 00C5  
                   u1_20 00BF                     u1_21 00BE                     u3_20 005B  
                   u3_21 005A                     u4_20 0064                     u4_21 0063  
                   _main 0015                     _temp 0078                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l105 00B8                    i1l721 00B5  
                  i1l725 00C1                    i1l741 005F                    i1l719 00B0  
                  i1l743 0060                    i1l745 0064                    i1l737 0055  
                  i1l747 0065                    i1l739 005B                    i1l697 00B9  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _setup 007A                    pclath 000A          __end_of_spiInit 00B0  
        __end_of_spiRead 00B9                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0055                   ??_main 0020  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00C6  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 009A                  ??_setup 0074  
             __pmaintext 0015               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 009A  
                __ptext2 007A                  __ptext3 0055                  __ptext4 00C0  
                __ptext5 00B0                  __ptext6 00B9             __size_of_isr 0025  
                _spiInit 009A                  _spiRead 00B0     end_of_initialization 0011  
             ??_spiWrite 0070              spiWrite@dat 0070           _spiReceiveWait 00B9  
    start_initialization 000F              __end_of_isr 007A   __end_of_spiReceiveWait 00C0  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0020     spiInit@sTransmitEdge 0076  
      interrupt_function 0004       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 0040                 _spiWrite 00C0             spiInit@sType 0077  
      spiInit@sClockIdle 0075                 intlevel1 0000         ??_spiReceiveWait 0070  
