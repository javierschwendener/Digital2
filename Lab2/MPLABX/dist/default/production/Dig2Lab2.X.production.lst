

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 18:01:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.31
    19                           ; Generated 13/10/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  001E                     _ADRESH	set	30
   288  001F                     _ADCON0bits	set	31
   289  000B                     _INTCONbits	set	11
   290  0006                     _PORTBbits	set	6
   291  0009                     _PORTEbits	set	9
   292  000C                     _PIR1bits	set	12
   293  0012                     _T2CON	set	18
   294  000B                     _INTCON	set	11
   295  001F                     _ADCON0	set	31
   296  0009                     _PORTE	set	9
   297  0008                     _PORTD	set	8
   298  0007                     _PORTC	set	7
   299  0006                     _PORTB	set	6
   300  0005                     _PORTA	set	5
   301  008C                     _PIE1	set	140
   302  0096                     _IOCB	set	150
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0087                     _TRISC	set	135
   306  0086                     _TRISB	set	134
   307  0085                     _TRISA	set	133
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   321  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   322  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   323                           
   324                           ; Clear objects allocated to BANK0
   325  0014  1283               	bcf	3,5	;RP0=0, select bank0
   326  0015  1303               	bcf	3,6	;RP1=0, select bank0
   327  0016  01A4               	clrf	__pbssBANK0& (0+127)
   328  0017  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   329  0018  01A6               	clrf	(__pbssBANK0+2)& (0+127)
   330  0019                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  0019                     __end_of__initialization:
   334  0019  0183               	clrf	3
   335  001A  120A  118A  28A2   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0070                     __pbssCOMMON:
   339  0070                     _nib:
   340  0070                     	ds	1
   341  0071                     _adece:
   342  0071                     	ds	1
   343  0072                     _flags2:
   344  0072                     	ds	1
   345  0073                     _flags:
   346  0073                     	ds	1
   347  0074                     _multi:
   348  0074                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  0024                     __pbssBANK0:
   352  0024                     _adc_value:
   353  0024                     	ds	1
   354  0025                     _value:
   355  0025                     	ds	1
   356  0026                     _variable:
   357  0026                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360  0075                     __pcstackCOMMON:
   361  0075                     ?_adc:
   362  0075                     ??_adc:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0075                     ?_table:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0075                     ?_setup:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0075                     ?_isr:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0075                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0075                     	ds	1
   380  0076                     ??_isr:
   381                           
   382                           ; 1 bytes @ 0x1
   383  0076                     	ds	3
   384  0079                     ??_setup:
   385  0079                     table@index:	
   386                           ; 1 bytes @ 0x4
   387                           
   388                           
   389                           ; 1 bytes @ 0x4
   390  0079                     	ds	1
   391                           
   392                           	psect	cstackBANK0
   393  0020                     __pcstackBANK0:
   394  0020                     ??_table:
   395                           
   396                           ; 1 bytes @ 0x0
   397  0020                     	ds	2
   398  0022                     ??_main:
   399                           
   400                           ; 1 bytes @ 0x2
   401  0022                     	ds	2
   402                           
   403                           	psect	maintext
   404  00A2                     __pmaintext:	
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 101 in file "newmain.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       2       0       0       0
   427 ;;      Totals:         0       2       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels required when called:    3
   430 ;; This function calls:
   431 ;;		_setup
   432 ;;		_table
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  00A2                     _main:
   441  00A2                     l1065:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;newmain.c: 102:     setup();
   447  00A2  120A  118A  215F  120A  118A  	fcall	_setup
   448  00A7                     l1067:
   449                           
   450                           ;newmain.c: 106:         if (adece > PORTC) {
   451  00A7  0871               	movf	_adece,w
   452  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   453  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   454  00AA  0207               	subwf	7,w	;volatile
   455  00AB  1803               	skipnc
   456  00AC  28AE               	goto	u311
   457  00AD  28AF               	goto	u310
   458  00AE                     u311:
   459  00AE  28B1               	goto	l85
   460  00AF                     u310:
   461  00AF                     l1069:
   462                           
   463                           ;newmain.c: 107:             PORTEbits.RE2 = 1;
   464  00AF  1509               	bsf	9,2	;volatile
   465                           
   466                           ;newmain.c: 108:         } else {
   467  00B0  28B2               	goto	l1071
   468  00B1                     l85:
   469                           
   470                           ;newmain.c: 109:             PORTEbits.RE2 = 0;
   471  00B1  1109               	bcf	9,2	;volatile
   472  00B2                     l1071:
   473                           
   474                           ;newmain.c: 112:         if (multi == 0b00000000) {
   475  00B2  0874               	movf	_multi,w
   476  00B3  1D03               	btfss	3,2
   477  00B4  28B6               	goto	u321
   478  00B5  28B7               	goto	u320
   479  00B6                     u321:
   480  00B6  28D0               	goto	l1081
   481  00B7                     u320:
   482  00B7                     l1073:
   483                           
   484                           ;newmain.c: 113:             nib = adece & 0b00001111;
   485  00B7  0871               	movf	_adece,w
   486  00B8  390F               	andlw	15
   487  00B9  00A2               	movwf	??_main
   488  00BA  0822               	movf	??_main,w
   489  00BB  00F0               	movwf	_nib
   490  00BC                     l1075:
   491                           
   492                           ;newmain.c: 114:             table(nib);
   493  00BC  0870               	movf	_nib,w
   494  00BD  120A  118A  201D  120A  118A  	fcall	_table
   495  00C2                     l1077:
   496                           
   497                           ;newmain.c: 115:             PORTD = nib;
   498  00C2  0870               	movf	_nib,w
   499  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   500  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   501  00C5  0088               	movwf	8	;volatile
   502  00C6                     l1079:
   503                           
   504                           ;newmain.c: 116:             PORTD = table(nib);
   505  00C6  0870               	movf	_nib,w
   506  00C7  120A  118A  201D  120A  118A  	fcall	_table
   507  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   508  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   509  00CE  0088               	movwf	8	;volatile
   510                           
   511                           ;newmain.c: 117:         } else {
   512  00CF  28F4               	goto	l1091
   513  00D0                     l1081:
   514                           
   515                           ;newmain.c: 118:             nib = adece & 0b11110000;
   516  00D0  0871               	movf	_adece,w
   517  00D1  39F0               	andlw	240
   518  00D2  00A2               	movwf	??_main
   519  00D3  0822               	movf	??_main,w
   520  00D4  00F0               	movwf	_nib
   521  00D5                     l1083:
   522                           
   523                           ;newmain.c: 119:             nib = nib >> 4;
   524  00D5  0870               	movf	_nib,w
   525  00D6  00A2               	movwf	??_main
   526  00D7  3004               	movlw	4
   527  00D8                     u335:
   528  00D8  1003               	clrc
   529  00D9  0CA2               	rrf	??_main,f
   530  00DA  3EFF               	addlw	-1
   531  00DB  1D03               	skipz
   532  00DC  28D8               	goto	u335
   533  00DD  0822               	movf	??_main,w
   534  00DE  00A3               	movwf	??_main+1
   535  00DF  0823               	movf	??_main+1,w
   536  00E0  00F0               	movwf	_nib
   537  00E1                     l1085:
   538                           
   539                           ;newmain.c: 120:             table(nib);
   540  00E1  0870               	movf	_nib,w
   541  00E2  120A  118A  201D  120A  118A  	fcall	_table
   542  00E7                     l1087:
   543                           
   544                           ;newmain.c: 121:             PORTD = nib;
   545  00E7  0870               	movf	_nib,w
   546  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   547  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   548  00EA  0088               	movwf	8	;volatile
   549  00EB                     l1089:
   550                           
   551                           ;newmain.c: 122:             PORTD = table(nib);
   552  00EB  0870               	movf	_nib,w
   553  00EC  120A  118A  201D  120A  118A  	fcall	_table
   554  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   555  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   556  00F3  0088               	movwf	8	;volatile
   557  00F4                     l1091:
   558                           
   559                           ;newmain.c: 125:         if (ADCON0bits.GO == 0) {
   560  00F4  189F               	btfsc	31,1	;volatile
   561  00F5  28F7               	goto	u341
   562  00F6  28F8               	goto	u340
   563  00F7                     u341:
   564  00F7  28A7               	goto	l1067
   565  00F8                     u340:
   566  00F8                     l1093:
   567                           
   568                           ;newmain.c: 126:             _delay((unsigned long)((5)*(8000000/4000.0)));
   569  00F8  300D               	movlw	13
   570  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   571  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   572  00FB  00A3               	movwf	??_main+1
   573  00FC  30FB               	movlw	251
   574  00FD  00A2               	movwf	??_main
   575  00FE                     u357:
   576  00FE  0BA2               	decfsz	??_main,f
   577  00FF  28FE               	goto	u357
   578  0100  0BA3               	decfsz	??_main+1,f
   579  0101  28FE               	goto	u357
   580  0102                     l1095:
   581                           
   582                           ;newmain.c: 127:             ADCON0bits.GO = 1;
   583  0102  1283               	bcf	3,5	;RP0=0, select bank0
   584  0103  1303               	bcf	3,6	;RP1=0, select bank0
   585  0104  149F               	bsf	31,1	;volatile
   586  0105  28A7               	goto	l1067
   587  0106  120A  118A  280C   	ljmp	start
   588  0109                     __end_of_main:
   589                           
   590                           	psect	text1
   591  001D                     __ptext1:	
   592 ;; *************** function _table *****************
   593 ;; Defined at:
   594 ;;		line 15 in file "Lib1.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  index           1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  index           1    4[COMMON] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      unsigned char 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         1       0       0       0       0
   610 ;;      Temps:          0       2       0       0       0
   611 ;;      Totals:         1       2       0       0       0
   612 ;;Total ram usage:        3 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    2
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _table
   624  001D                     _table:
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _table: [wreg-fsr0h+status,2+status,0]
   628                           ;table@index stored from wreg
   629  001D  00F9               	movwf	table@index
   630  001E                     l1023:
   631                           
   632                           ;Lib1.c: 16:     switch (index) {
   633  001E  2865               	goto	l1059
   634  001F                     l1025:
   635                           
   636                           ;Lib1.c: 18:             value = 0b00111111;
   637  001F  303F               	movlw	63
   638  0020  00A0               	movwf	??_table
   639  0021  0820               	movf	??_table,w
   640  0022  00A5               	movwf	_value
   641                           
   642                           ;Lib1.c: 19:             break;
   643  0023  28A1               	goto	l121
   644  0024                     l1027:
   645                           
   646                           ;Lib1.c: 21:             value = 0b00000110;
   647  0024  3006               	movlw	6
   648  0025  00A0               	movwf	??_table
   649  0026  0820               	movf	??_table,w
   650  0027  00A5               	movwf	_value
   651                           
   652                           ;Lib1.c: 22:             break;
   653  0028  28A1               	goto	l121
   654  0029                     l1029:
   655                           
   656                           ;Lib1.c: 24:             value = 0b01011011;
   657  0029  305B               	movlw	91
   658  002A  00A0               	movwf	??_table
   659  002B  0820               	movf	??_table,w
   660  002C  00A5               	movwf	_value
   661                           
   662                           ;Lib1.c: 25:             break;
   663  002D  28A1               	goto	l121
   664  002E                     l1031:
   665                           
   666                           ;Lib1.c: 27:             value = 0b01001111;
   667  002E  304F               	movlw	79
   668  002F  00A0               	movwf	??_table
   669  0030  0820               	movf	??_table,w
   670  0031  00A5               	movwf	_value
   671                           
   672                           ;Lib1.c: 28:             break;
   673  0032  28A1               	goto	l121
   674  0033                     l1033:
   675                           
   676                           ;Lib1.c: 30:             value = 0b01100110;
   677  0033  3066               	movlw	102
   678  0034  00A0               	movwf	??_table
   679  0035  0820               	movf	??_table,w
   680  0036  00A5               	movwf	_value
   681                           
   682                           ;Lib1.c: 31:             break;
   683  0037  28A1               	goto	l121
   684  0038                     l1035:
   685                           
   686                           ;Lib1.c: 33:             value = 0b01101101;
   687  0038  306D               	movlw	109
   688  0039  00A0               	movwf	??_table
   689  003A  0820               	movf	??_table,w
   690  003B  00A5               	movwf	_value
   691                           
   692                           ;Lib1.c: 34:             break;
   693  003C  28A1               	goto	l121
   694  003D                     l1037:
   695                           
   696                           ;Lib1.c: 36:             value = 0b01111101;
   697  003D  307D               	movlw	125
   698  003E  00A0               	movwf	??_table
   699  003F  0820               	movf	??_table,w
   700  0040  00A5               	movwf	_value
   701                           
   702                           ;Lib1.c: 37:             break;
   703  0041  28A1               	goto	l121
   704  0042                     l1039:
   705                           
   706                           ;Lib1.c: 39:             value = 0b00000111;
   707  0042  3007               	movlw	7
   708  0043  00A0               	movwf	??_table
   709  0044  0820               	movf	??_table,w
   710  0045  00A5               	movwf	_value
   711                           
   712                           ;Lib1.c: 40:             break;
   713  0046  28A1               	goto	l121
   714  0047                     l1041:
   715                           
   716                           ;Lib1.c: 42:             value = 0b01111111;
   717  0047  307F               	movlw	127
   718  0048  00A0               	movwf	??_table
   719  0049  0820               	movf	??_table,w
   720  004A  00A5               	movwf	_value
   721                           
   722                           ;Lib1.c: 43:             break;
   723  004B  28A1               	goto	l121
   724  004C                     l1043:
   725                           
   726                           ;Lib1.c: 45:             value = 0b01100111;
   727  004C  3067               	movlw	103
   728  004D  00A0               	movwf	??_table
   729  004E  0820               	movf	??_table,w
   730  004F  00A5               	movwf	_value
   731                           
   732                           ;Lib1.c: 46:             break;
   733  0050  28A1               	goto	l121
   734  0051                     l1045:
   735                           
   736                           ;Lib1.c: 48:             value = 0b01110111;
   737  0051  3077               	movlw	119
   738  0052  00A0               	movwf	??_table
   739  0053  0820               	movf	??_table,w
   740  0054  00A5               	movwf	_value
   741                           
   742                           ;Lib1.c: 49:             break;
   743  0055  28A1               	goto	l121
   744  0056                     l1049:
   745                           
   746                           ;Lib1.c: 54:             value = 0b00111001;
   747  0056  3039               	movlw	57
   748  0057  00A0               	movwf	??_table
   749  0058  0820               	movf	??_table,w
   750  0059  00A5               	movwf	_value
   751                           
   752                           ;Lib1.c: 55:             break;
   753  005A  28A1               	goto	l121
   754  005B                     l1053:
   755                           
   756                           ;Lib1.c: 60:             value = 0b01111001;
   757  005B  3079               	movlw	121
   758  005C  00A0               	movwf	??_table
   759  005D  0820               	movf	??_table,w
   760  005E  00A5               	movwf	_value
   761                           
   762                           ;Lib1.c: 61:             break;
   763  005F  28A1               	goto	l121
   764  0060                     l1055:
   765                           
   766                           ;Lib1.c: 63:             value = 0b01110001;
   767  0060  3071               	movlw	113
   768  0061  00A0               	movwf	??_table
   769  0062  0820               	movf	??_table,w
   770  0063  00A5               	movwf	_value
   771                           
   772                           ;Lib1.c: 64:             break;
   773  0064  28A1               	goto	l121
   774  0065                     l1059:
   775  0065  0879               	movf	table@index,w
   776  0066  1283               	bcf	3,5	;RP0=0, select bank0
   777  0067  1303               	bcf	3,6	;RP1=0, select bank0
   778  0068  00A0               	movwf	??_table
   779  0069  01A1               	clrf	??_table+1
   780                           
   781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 1, Range of values is 0 to 0
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            4     3 (average)
   787                           ; direct_byte           11     8 (fixed)
   788                           ; jumptable            260     6 (fixed)
   789                           ;	Chosen strategy is simple_byte
   790  006A  0821               	movf	??_table+1,w
   791  006B  3A00               	xorlw	0	; case 0
   792  006C  1903               	skipnz
   793  006D  286F               	goto	l1117
   794  006E  28A1               	goto	l121
   795  006F                     l1117:
   796                           
   797                           ; Switch size 1, requested type "simple"
   798                           ; Number of cases is 16, Range of values is 0 to 15
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte           49    25 (average)
   802                           ; direct_byte           56     8 (fixed)
   803                           ; jumptable            260     6 (fixed)
   804                           ;	Chosen strategy is simple_byte
   805  006F  0820               	movf	??_table,w
   806  0070  3A00               	xorlw	0	; case 0
   807  0071  1903               	skipnz
   808  0072  281F               	goto	l1025
   809  0073  3A01               	xorlw	1	; case 1
   810  0074  1903               	skipnz
   811  0075  2824               	goto	l1027
   812  0076  3A03               	xorlw	3	; case 2
   813  0077  1903               	skipnz
   814  0078  2829               	goto	l1029
   815  0079  3A01               	xorlw	1	; case 3
   816  007A  1903               	skipnz
   817  007B  282E               	goto	l1031
   818  007C  3A07               	xorlw	7	; case 4
   819  007D  1903               	skipnz
   820  007E  2833               	goto	l1033
   821  007F  3A01               	xorlw	1	; case 5
   822  0080  1903               	skipnz
   823  0081  2838               	goto	l1035
   824  0082  3A03               	xorlw	3	; case 6
   825  0083  1903               	skipnz
   826  0084  283D               	goto	l1037
   827  0085  3A01               	xorlw	1	; case 7
   828  0086  1903               	skipnz
   829  0087  2842               	goto	l1039
   830  0088  3A0F               	xorlw	15	; case 8
   831  0089  1903               	skipnz
   832  008A  2847               	goto	l1041
   833  008B  3A01               	xorlw	1	; case 9
   834  008C  1903               	skipnz
   835  008D  284C               	goto	l1043
   836  008E  3A03               	xorlw	3	; case 10
   837  008F  1903               	skipnz
   838  0090  2851               	goto	l1045
   839  0091  3A01               	xorlw	1	; case 11
   840  0092  1903               	skipnz
   841  0093  2847               	goto	l1041
   842  0094  3A07               	xorlw	7	; case 12
   843  0095  1903               	skipnz
   844  0096  2856               	goto	l1049
   845  0097  3A01               	xorlw	1	; case 13
   846  0098  1903               	skipnz
   847  0099  281F               	goto	l1025
   848  009A  3A03               	xorlw	3	; case 14
   849  009B  1903               	skipnz
   850  009C  285B               	goto	l1053
   851  009D  3A01               	xorlw	1	; case 15
   852  009E  1903               	skipnz
   853  009F  2860               	goto	l1055
   854  00A0  28A1               	goto	l121
   855  00A1                     l121:
   856  00A1  0008               	return
   857  00A2                     __end_of_table:
   858                           
   859                           	psect	text2
   860  015F                     __ptext2:	
   861 ;; *************** function _setup *****************
   862 ;; Defined at:
   863 ;;		line 28 in file "newmain.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    2
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _setup
   893  015F                     _setup:
   894  015F                     l717:	
   895                           ;incstack = 0
   896                           ; Regs used in _setup: [wreg+status,2]
   897                           
   898                           
   899                           ;newmain.c: 30:     PORTA = 0;
   900  015F  1283               	bcf	3,5	;RP0=0, select bank0
   901  0160  1303               	bcf	3,6	;RP1=0, select bank0
   902  0161  0185               	clrf	5	;volatile
   903                           
   904                           ;newmain.c: 31:     PORTB = 0;
   905  0162  0186               	clrf	6	;volatile
   906                           
   907                           ;newmain.c: 32:     PORTC = 0;
   908  0163  0187               	clrf	7	;volatile
   909                           
   910                           ;newmain.c: 33:     PORTD = 0;
   911  0164  0188               	clrf	8	;volatile
   912                           
   913                           ;newmain.c: 34:     PORTE = 0;
   914  0165  0189               	clrf	9	;volatile
   915                           
   916                           ;newmain.c: 36:     ANSEL = 0;
   917  0166  1683               	bsf	3,5	;RP0=1, select bank3
   918  0167  1703               	bsf	3,6	;RP1=1, select bank3
   919  0168  0188               	clrf	8	;volatile
   920  0169                     l719:
   921                           
   922                           ;newmain.c: 37:     ANSELH = 0b00000001;
   923  0169  3001               	movlw	1
   924  016A  0089               	movwf	9	;volatile
   925  016B                     l721:
   926                           
   927                           ;newmain.c: 39:     TRISA = 0;
   928  016B  1683               	bsf	3,5	;RP0=1, select bank1
   929  016C  1303               	bcf	3,6	;RP1=0, select bank1
   930  016D  0185               	clrf	5	;volatile
   931                           
   932                           ;newmain.c: 40:     TRISB = 0b00000111;
   933  016E  3007               	movlw	7
   934  016F  0086               	movwf	6	;volatile
   935  0170                     l723:
   936                           
   937                           ;newmain.c: 41:     TRISC = 0;
   938  0170  0187               	clrf	7	;volatile
   939  0171                     l725:
   940                           
   941                           ;newmain.c: 42:     TRISD = 0;
   942  0171  0188               	clrf	8	;volatile
   943  0172                     l727:
   944                           
   945                           ;newmain.c: 43:     TRISE = 0;
   946  0172  0189               	clrf	9	;volatile
   947  0173                     l729:
   948                           
   949                           ;newmain.c: 45:     IOCB = 0b00000011;
   950  0173  3003               	movlw	3
   951  0174  0096               	movwf	22	;volatile
   952  0175                     l731:
   953                           
   954                           ;newmain.c: 46:     ADCON0 = 0b01100001;
   955  0175  3061               	movlw	97
   956  0176  1283               	bcf	3,5	;RP0=0, select bank0
   957  0177  1303               	bcf	3,6	;RP1=0, select bank0
   958  0178  009F               	movwf	31	;volatile
   959  0179                     l733:
   960                           
   961                           ;newmain.c: 47:     INTCON = 0b11001000;
   962  0179  30C8               	movlw	200
   963  017A  008B               	movwf	11	;volatile
   964  017B                     l735:
   965                           
   966                           ;newmain.c: 48:     PIE1 = 0b01000000;
   967  017B  3040               	movlw	64
   968  017C  1683               	bsf	3,5	;RP0=1, select bank1
   969  017D  1303               	bcf	3,6	;RP1=0, select bank1
   970  017E  008C               	movwf	12	;volatile
   971  017F                     l737:
   972                           
   973                           ;newmain.c: 49:     T2CON = 0b00000100;
   974  017F  3004               	movlw	4
   975  0180  1283               	bcf	3,5	;RP0=0, select bank0
   976  0181  1303               	bcf	3,6	;RP1=0, select bank0
   977  0182  0092               	movwf	18	;volatile
   978  0183                     l53:
   979  0183  0008               	return
   980  0184                     __end_of_setup:
   981                           
   982                           	psect	text3
   983  0109                     __ptext3:	
   984 ;; *************** function _isr *****************
   985 ;; Defined at:
   986 ;;		line 63 in file "newmain.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          3       0       0       0       0
  1003 ;;      Totals:         3       0       0       0       0
  1004 ;;Total ram usage:        3 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		_adc
  1009 ;; This function is called by:
  1010 ;;		Interrupt level 1
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _isr
  1016  0109                     _isr:
  1017  0109                     i1l929:
  1018                           
  1019                           ;newmain.c: 65:     adece = adc();
  1020  0109  120A  118A  2184  120A  118A  	fcall	_adc
  1021  010E  00F6               	movwf	??_isr
  1022  010F  0876               	movf	??_isr,w
  1023  0110  00F1               	movwf	_adece
  1024  0111                     i1l931:
  1025                           
  1026                           ;newmain.c: 67:     if (PIR1bits.TMR2IF == 1) {
  1027  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0113  1C8C               	btfss	12,1	;volatile
  1030  0114  2916               	goto	u17_21
  1031  0115  2917               	goto	u17_20
  1032  0116                     u17_21:
  1033  0116  2925               	goto	i1l945
  1034  0117                     u17_20:
  1035  0117                     i1l933:
  1036                           
  1037                           ;newmain.c: 68:         PIR1bits.TMR2IF = 0;
  1038  0117  108C               	bcf	12,1	;volatile
  1039  0118                     i1l935:
  1040                           
  1041                           ;newmain.c: 69:         if (multi == 0b00000000) {
  1042  0118  0874               	movf	_multi,w
  1043  0119  1D03               	btfss	3,2
  1044  011A  291C               	goto	u18_21
  1045  011B  291D               	goto	u18_20
  1046  011C                     u18_21:
  1047  011C  2922               	goto	i1l939
  1048  011D                     u18_20:
  1049  011D                     i1l937:
  1050                           
  1051                           ;newmain.c: 71:             multi = 0b00000001;
  1052  011D  01F4               	clrf	_multi
  1053  011E  0AF4               	incf	_multi,f
  1054                           
  1055                           ;newmain.c: 72:             PORTEbits.RE1 = 0;
  1056  011F  1089               	bcf	9,1	;volatile
  1057                           
  1058                           ;newmain.c: 73:             PORTEbits.RE0 = 1;
  1059  0120  1409               	bsf	9,0	;volatile
  1060                           
  1061                           ;newmain.c: 74:         } else {
  1062  0121  2925               	goto	i1l945
  1063  0122                     i1l939:
  1064                           
  1065                           ;newmain.c: 76:             multi = 0b00000000;
  1066  0122  01F4               	clrf	_multi
  1067  0123                     i1l941:
  1068                           
  1069                           ;newmain.c: 77:             PORTEbits.RE0 = 0;
  1070  0123  1009               	bcf	9,0	;volatile
  1071  0124                     i1l943:
  1072                           
  1073                           ;newmain.c: 78:             PORTEbits.RE1 = 1;
  1074  0124  1489               	bsf	9,1	;volatile
  1075  0125                     i1l945:
  1076                           
  1077                           ;newmain.c: 83:     if (PORTBbits.RB0 == 1 && flags == 0b00000000) {
  1078  0125  1C06               	btfss	6,0	;volatile
  1079  0126  2928               	goto	u19_21
  1080  0127  2929               	goto	u19_20
  1081  0128                     u19_21:
  1082  0128  2935               	goto	i1l73
  1083  0129                     u19_20:
  1084  0129                     i1l947:
  1085  0129  0873               	movf	_flags,w
  1086  012A  1D03               	btfss	3,2
  1087  012B  292D               	goto	u20_21
  1088  012C  292E               	goto	u20_20
  1089  012D                     u20_21:
  1090  012D  2935               	goto	i1l73
  1091  012E                     u20_20:
  1092  012E                     i1l949:
  1093                           
  1094                           ;newmain.c: 85:         flags = 0b00000001;
  1095  012E  01F3               	clrf	_flags
  1096  012F  0AF3               	incf	_flags,f
  1097  0130                     i1l951:
  1098                           
  1099                           ;newmain.c: 86:         PORTC++;
  1100  0130  3001               	movlw	1
  1101  0131  00F6               	movwf	??_isr
  1102  0132  0876               	movf	??_isr,w
  1103  0133  0787               	addwf	7,f	;volatile
  1104                           
  1105                           ;newmain.c: 87:     } else if (PORTBbits.RB0 == 0 && flags == 0b00000001) {
  1106  0134  293F               	goto	i1l957
  1107  0135                     i1l73:
  1108  0135  1806               	btfsc	6,0	;volatile
  1109  0136  2938               	goto	u21_21
  1110  0137  2939               	goto	u21_20
  1111  0138                     u21_21:
  1112  0138  293F               	goto	i1l957
  1113  0139                     u21_20:
  1114  0139                     i1l953:
  1115  0139  0373               	decf	_flags,w
  1116  013A  1D03               	btfss	3,2
  1117  013B  293D               	goto	u22_21
  1118  013C  293E               	goto	u22_20
  1119  013D                     u22_21:
  1120  013D  293F               	goto	i1l957
  1121  013E                     u22_20:
  1122  013E                     i1l955:
  1123                           
  1124                           ;newmain.c: 88:         flags = 0b00000000;
  1125  013E  01F3               	clrf	_flags
  1126  013F                     i1l957:
  1127                           
  1128                           ;newmain.c: 91:     if (PORTBbits.RB1 && flags2 == 0b00000000) {
  1129  013F  1C86               	btfss	6,1	;volatile
  1130  0140  2942               	goto	u23_21
  1131  0141  2943               	goto	u23_20
  1132  0142                     u23_21:
  1133  0142  294D               	goto	i1l76
  1134  0143                     u23_20:
  1135  0143                     i1l959:
  1136  0143  0872               	movf	_flags2,w
  1137  0144  1D03               	btfss	3,2
  1138  0145  2947               	goto	u24_21
  1139  0146  2948               	goto	u24_20
  1140  0147                     u24_21:
  1141  0147  294D               	goto	i1l76
  1142  0148                     u24_20:
  1143  0148                     i1l961:
  1144                           
  1145                           ;newmain.c: 93:         flags2 = 0b00000001;
  1146  0148  01F2               	clrf	_flags2
  1147  0149  0AF2               	incf	_flags2,f
  1148  014A                     i1l963:
  1149                           
  1150                           ;newmain.c: 94:         PORTC--;
  1151  014A  3001               	movlw	1
  1152  014B  0287               	subwf	7,f	;volatile
  1153                           
  1154                           ;newmain.c: 95:     } else if (PORTBbits.RB1 == 0 && flags2 == 0b00000001) {
  1155  014C  2957               	goto	i1l969
  1156  014D                     i1l76:
  1157  014D  1886               	btfsc	6,1	;volatile
  1158  014E  2950               	goto	u25_21
  1159  014F  2951               	goto	u25_20
  1160  0150                     u25_21:
  1161  0150  2957               	goto	i1l969
  1162  0151                     u25_20:
  1163  0151                     i1l965:
  1164  0151  0372               	decf	_flags2,w
  1165  0152  1D03               	btfss	3,2
  1166  0153  2955               	goto	u26_21
  1167  0154  2956               	goto	u26_20
  1168  0155                     u26_21:
  1169  0155  2957               	goto	i1l969
  1170  0156                     u26_20:
  1171  0156                     i1l967:
  1172                           
  1173                           ;newmain.c: 96:         flags2 = 0b00000000;
  1174  0156  01F2               	clrf	_flags2
  1175  0157                     i1l969:
  1176                           
  1177                           ;newmain.c: 98:     INTCONbits.RBIF = 0;
  1178  0157  100B               	bcf	11,0	;volatile
  1179  0158                     i1l79:
  1180  0158  0878               	movf	??_isr+2,w
  1181  0159  008A               	movwf	10
  1182  015A  0E77               	swapf	??_isr+1,w
  1183  015B  0083               	movwf	3
  1184  015C  0EFE               	swapf	btemp,f
  1185  015D  0E7E               	swapf	btemp,w
  1186  015E  0009               	retfie
  1187  015F                     __end_of_isr:
  1188                           
  1189                           	psect	intentry
  1190  0004                     __pintentry:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1193                           
  1194  0004                     interrupt_function:
  1195  007E                     saved_w	set	btemp
  1196  0004  00FE               	movwf	btemp
  1197  0005  0E03               	swapf	3,w
  1198  0006  00F7               	movwf	??_isr+1
  1199  0007  080A               	movf	10,w
  1200  0008  00F8               	movwf	??_isr+2
  1201  0009  120A  118A  2909   	ljmp	_isr
  1202                           
  1203                           	psect	text4
  1204  0184                     __ptext4:	
  1205 ;; *************** function _adc *****************
  1206 ;; Defined at:
  1207 ;;		line 68 in file "Lib1.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0
  1224 ;;      Totals:         1       0       0       0       0
  1225 ;;Total ram usage:        1 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_isr
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _adc
  1236  0184                     _adc:
  1237  0184                     i1l881:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _adc: [wreg]
  1240                           
  1241                           
  1242                           ;Lib1.c: 69:     if (PIR1bits.ADIF == 1) {
  1243  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0186  1F0C               	btfss	12,6	;volatile
  1246  0187  2989               	goto	u16_21
  1247  0188  298A               	goto	u16_20
  1248  0189                     u16_21:
  1249  0189  298F               	goto	i1l125
  1250  018A                     u16_20:
  1251  018A                     i1l883:
  1252                           
  1253                           ;Lib1.c: 70:         adc_value = ADRESH;
  1254  018A  081E               	movf	30,w	;volatile
  1255  018B  00F5               	movwf	??_adc
  1256  018C  0875               	movf	??_adc,w
  1257  018D  00A4               	movwf	_adc_value
  1258  018E                     i1l885:
  1259                           
  1260                           ;Lib1.c: 71:         PIR1bits.ADIF = 0;
  1261  018E  130C               	bcf	12,6	;volatile
  1262  018F                     i1l125:
  1263  018F  0008               	return
  1264  0190                     __end_of_adc:
  1265  007E                     btemp	set	126	;btemp
  1266  007E                     wtemp0	set	126
  1267                           
  1268                           	psect	config
  1269                           
  1270                           ;Config register CONFIG1 @ 0x2007
  1271                           ;	Oscillator Selection bits
  1272                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1273                           ;	Watchdog Timer Enable bit
  1274                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1275                           ;	Power-up Timer Enable bit
  1276                           ;	PWRTE = OFF, PWRT disabled
  1277                           ;	RE3/MCLR pin function select bit
  1278                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1279                           ;	Code Protection bit
  1280                           ;	CP = OFF, Program memory code protection is disabled
  1281                           ;	Data Code Protection bit
  1282                           ;	CPD = OFF, Data memory code protection is disabled
  1283                           ;	Brown Out Reset Selection bits
  1284                           ;	BOREN = OFF, BOR disabled
  1285                           ;	Internal External Switchover bit
  1286                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1287                           ;	Fail-Safe Clock Monitor Enabled bit
  1288                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1289                           ;	Low Voltage Programming Enable bit
  1290                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1291                           ;	In-Circuit Debugger Mode bit
  1292                           ;	DEBUG = 0x1, unprogrammed default
  1293  2007                     	org	8199
  1294  2007  20D1               	dw	8401
  1295                           
  1296                           ;Config register CONFIG2 @ 0x2008
  1297                           ;	Brown-out Reset Selection bit
  1298                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1299                           ;	Flash Program Memory Self Write Enable bits
  1300                           ;	WRT = OFF, Write protection off
  1301  2008                     	org	8200
  1302  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_table

Critical Paths under _isr in COMMON

    _isr->_adc

Critical Paths under _main in BANK0

    _main->_table

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      31
                                              2 BANK0      2     2      0
                              _setup
                              _table
 ---------------------------------------------------------------------------------
 (1) _table                                                3     3      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _adc
 ---------------------------------------------------------------------------------
 (3) _adc                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _table

 _isr (ROOT)
   _adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 18:01:24 2021

                     l53 0183                       l85 00B1                      l121 00A1  
                    l721 016B                      l731 0175                      l723 0170  
                    l733 0179                      l725 0171                      l717 015F  
                    l735 017B                      l727 0172                      l719 0169  
                    l737 017F                      l729 0173                      u310 00AF  
                    u311 00AE                      u320 00B7                      u321 00B6  
                    u340 00F8                      u341 00F7                      u335 00D8  
                    u357 00FE                      _adc 0184                      _nib 0070  
                    _isr 0109                     ?_adc 0075                     l1031 002E  
                   l1023 001E                     l1041 0047                     l1033 0033  
                   l1025 001F                     l1043 004C                     l1035 0038  
                   l1027 0024                     l1117 006F                     l1053 005B  
                   l1045 0051                     l1037 003D                     l1029 0029  
                   l1055 0060                     l1039 0042                     l1071 00B2  
                   l1049 0056                     l1073 00B7                     l1081 00D0  
                   l1065 00A2                     l1059 0065                     l1083 00D5  
                   l1091 00F4                     l1075 00BC                     l1067 00A7  
                   l1093 00F8                     l1085 00E1                     l1077 00C2  
                   l1069 00AF                     l1095 0102                     l1087 00E7  
                   l1079 00C6                     l1089 00EB                     ?_isr 0075  
                   _IOCB 0096                     _PIE1 008C                     i1l73 0135  
                   i1l76 014D                     i1l79 0158                     _main 00A2  
                   btemp 007E                     start 000C                    ??_adc 0075  
                  ??_isr 0076                    ?_main 0075                    _ANSEL 0188  
                  _T2CON 0012                    i1l125 018F                    i1l931 0111  
                  i1l941 0123                    i1l933 0117                    i1l951 0130  
                  i1l943 0124                    i1l935 0118                    i1l881 0184  
                  i1l961 0148                    i1l953 0139                    i1l937 011D  
                  i1l945 0125                    i1l929 0109                    i1l883 018A  
                  i1l963 014A                    i1l955 013E                    i1l947 0129  
                  i1l939 0122                    i1l885 018E                    i1l965 0151  
                  i1l957 013F                    i1l949 012E                    i1l967 0156  
                  i1l959 0143                    i1l969 0157                    u20_20 012E  
                  u20_21 012D                    u21_20 0139                    u21_21 0138  
                  u22_20 013E                    u22_21 013D                    u23_20 0143  
                  u23_21 0142                    u16_20 018A                    u24_20 0148  
                  u16_21 0189                    u24_21 0147                    u25_20 0151  
                  u17_20 0117                    u25_21 0150                    u17_21 0116  
                  u26_20 0156                    u18_20 011D                    u26_21 0155  
                  u18_21 011C                    u19_20 0129                    u19_21 0128  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _adece 0071                    _flags 0073  
                  _table 001D                    _value 0025                    _multi 0074  
                  _setup 015F                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0109  
                 ??_main 0022                   _ADCON0 001F                   ?_table 0075  
                 _ADRESH 001E                   ?_setup 0075                   _ANSELH 0189  
                 _INTCON 000B                   _flags2 0072                   saved_w 007E  
__end_of__initialization 0019           __pcstackCOMMON 0075            __end_of_table 00A2  
          __end_of_setup 0184                  ??_table 0020                  ??_setup 0079  
             __pbssBANK0 0024               __pmaintext 00A2               __pintentry 0004  
                __ptext1 001D                  __ptext2 015F                  __ptext3 0109  
                __ptext4 0184             __size_of_adc 000C             __size_of_isr 0056  
   end_of_initialization 0019                _PORTBbits 0006                _PORTEbits 0009  
    start_initialization 000F              __end_of_adc 0190              __end_of_isr 015F  
             table@index 0079              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0020                _adc_value 0024           __size_of_table 0085  
         __size_of_setup 0025        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F            __size_of_main 0067                 _variable 0026  
             _INTCONbits 000B                 intlevel1 0000  
