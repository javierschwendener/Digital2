

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 09:54:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.31
    16                           ; Generated 13/10/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  001E                     _ADRESH	set	30
   207  001F                     _ADCON0bits	set	31
   208  0009                     _PORTEbits	set	9
   209  0006                     _PORTBbits	set	6
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  0089                     _TRISE	set	137
   216  0088                     _TRISD	set	136
   217  0087                     _TRISC	set	135
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  000F                     start_initialization:	
   225                           ; #config settings
   226                           
   227  000F                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   231  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   232  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   233  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   234  0013                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  0013                     __end_of__initialization:
   238  0013  0183               	clrf	3
   239  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0078                     __pbssCOMMON:
   243  0078                     _nib:
   244  0078                     	ds	1
   245  0079                     _adece:
   246  0079                     	ds	1
   247  007A                     _multi:
   248  007A                     	ds	1
   249  007B                     _variable:
   250  007B                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_setup:
   255  0070                     ?_isr:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_isr:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_tabla:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	2
   270  0072                     ??_setup:
   271  0072                     ??_tabla:	
   272                           ; 1 bytes @ 0x2
   273                           
   274                           
   275                           ; 1 bytes @ 0x2
   276  0072                     	ds	2
   277  0074                     tabla@nib:
   278                           
   279                           ; 1 bytes @ 0x4
   280  0074                     	ds	1
   281  0075                     ??_main:
   282                           
   283                           ; 1 bytes @ 0x5
   284  0075                     	ds	3
   285                           
   286                           	psect	maintext
   287  0017                     __pmaintext:	
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 107 in file "newmain.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          3       0       0       0       0
   310 ;;      Totals:         3       0       0       0       0
   311 ;;Total ram usage:        3 bytes
   312 ;; Hardware stack levels required when called:    2
   313 ;; This function calls:
   314 ;;		_setup
   315 ;;		_tabla
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  0017                     _main:
   324  0017                     l733:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   327                           
   328                           
   329                           ;newmain.c: 108:     setup();
   330  0017  120A  118A  2142  120A  118A  	fcall	_setup
   331  001C                     l735:
   332                           
   333                           ;newmain.c: 113:         if (PORTBbits.RB0 == 1) {
   334  001C  1283               	bcf	3,5	;RP0=0, select bank0
   335  001D  1303               	bcf	3,6	;RP1=0, select bank0
   336  001E  1C06               	btfss	6,0	;volatile
   337  001F  2821               	goto	u11
   338  0020  2822               	goto	u10
   339  0021                     u11:
   340  0021  283A               	goto	l747
   341  0022                     u10:
   342  0022                     l737:
   343                           
   344                           ;newmain.c: 115:             if (PORTC == 255) {
   345  0022  0A07               	incf	7,w	;volatile
   346  0023  1D03               	btfss	3,2
   347  0024  2826               	goto	u21
   348  0025  2827               	goto	u20
   349  0026                     u21:
   350  0026  2836               	goto	l743
   351  0027                     u20:
   352  0027                     l739:
   353                           
   354                           ;newmain.c: 116:                 PORTC = 0;
   355  0027  0187               	clrf	7	;volatile
   356  0028                     l741:
   357                           
   358                           ;newmain.c: 117:                 _delay((unsigned long)((250)*(8000000/4000.0)));
   359  0028  3003               	movlw	3
   360  0029  00F7               	movwf	??_main+2
   361  002A  308A               	movlw	138
   362  002B  00F6               	movwf	??_main+1
   363  002C  3055               	movlw	85
   364  002D  00F5               	movwf	??_main
   365  002E                     u77:
   366  002E  0BF5               	decfsz	??_main,f
   367  002F  282E               	goto	u77
   368  0030  0BF6               	decfsz	??_main+1,f
   369  0031  282E               	goto	u77
   370  0032  0BF7               	decfsz	??_main+2,f
   371  0033  282E               	goto	u77
   372  0034  2835               	nop2
   373                           
   374                           ;newmain.c: 118:             } else {
   375  0035  283A               	goto	l747
   376  0036                     l743:
   377                           
   378                           ;newmain.c: 119:                 PORTC = PORTC + 1;
   379  0036  0807               	movf	7,w	;volatile
   380  0037  3E01               	addlw	1
   381  0038  0087               	movwf	7	;volatile
   382  0039  2828               	goto	l741
   383  003A                     l747:
   384                           
   385                           ;newmain.c: 124:         if (PORTBbits.RB1) {
   386  003A  1283               	bcf	3,5	;RP0=0, select bank0
   387  003B  1303               	bcf	3,6	;RP1=0, select bank0
   388  003C  1C86               	btfss	6,1	;volatile
   389  003D  283F               	goto	u31
   390  003E  2840               	goto	u30
   391  003F                     u31:
   392  003F  2865               	goto	l757
   393  0040                     u30:
   394  0040                     l749:
   395                           
   396                           ;newmain.c: 126:             if (PORTC == 0) {
   397  0040  0807               	movf	7,w	;volatile
   398  0041  1D03               	btfss	3,2
   399  0042  2844               	goto	u41
   400  0043  2845               	goto	u40
   401  0044                     u41:
   402  0044  2855               	goto	l753
   403  0045                     u40:
   404  0045                     l751:
   405                           
   406                           ;newmain.c: 127:                 PORTC = 255;
   407  0045  30FF               	movlw	255
   408  0046  0087               	movwf	7	;volatile
   409                           
   410                           ;newmain.c: 128:                 _delay((unsigned long)((250)*(8000000/4000.0)));
   411  0047  3003               	movlw	3
   412  0048  00F7               	movwf	??_main+2
   413  0049  308A               	movlw	138
   414  004A  00F6               	movwf	??_main+1
   415  004B  3055               	movlw	85
   416  004C  00F5               	movwf	??_main
   417  004D                     u87:
   418  004D  0BF5               	decfsz	??_main,f
   419  004E  284D               	goto	u87
   420  004F  0BF6               	decfsz	??_main+1,f
   421  0050  284D               	goto	u87
   422  0051  0BF7               	decfsz	??_main+2,f
   423  0052  284D               	goto	u87
   424  0053  2854               	nop2
   425                           
   426                           ;newmain.c: 129:             } else {
   427  0054  2865               	goto	l757
   428  0055                     l753:
   429                           
   430                           ;newmain.c: 130:                 PORTC = PORTC - 1;
   431  0055  0807               	movf	7,w	;volatile
   432  0056  3EFF               	addlw	255
   433  0057  0087               	movwf	7	;volatile
   434  0058                     l755:
   435                           
   436                           ;newmain.c: 131:                 _delay((unsigned long)((250)*(8000000/4000.0)));
   437  0058  3003               	movlw	3
   438  0059  00F7               	movwf	??_main+2
   439  005A  308A               	movlw	138
   440  005B  00F6               	movwf	??_main+1
   441  005C  3055               	movlw	85
   442  005D  00F5               	movwf	??_main
   443  005E                     u97:
   444  005E  0BF5               	decfsz	??_main,f
   445  005F  285E               	goto	u97
   446  0060  0BF6               	decfsz	??_main+1,f
   447  0061  285E               	goto	u97
   448  0062  0BF7               	decfsz	??_main+2,f
   449  0063  285E               	goto	u97
   450  0064  2865               	nop2
   451  0065                     l757:
   452                           
   453                           ;newmain.c: 135:         if (multi == 0b00000000) {
   454  0065  087A               	movf	_multi,w
   455  0066  1D03               	btfss	3,2
   456  0067  2869               	goto	u51
   457  0068  286A               	goto	u50
   458  0069                     u51:
   459  0069  2880               	goto	l83
   460  006A                     u50:
   461  006A                     l759:
   462                           
   463                           ;newmain.c: 137:             PORTEbits.RE1 = 0;
   464  006A  1283               	bcf	3,5	;RP0=0, select bank0
   465  006B  1303               	bcf	3,6	;RP1=0, select bank0
   466  006C  1089               	bcf	9,1	;volatile
   467  006D                     l761:
   468                           
   469                           ;newmain.c: 138:             nib = PORTC & 0b00001111;
   470  006D  0807               	movf	7,w	;volatile
   471  006E  390F               	andlw	15
   472  006F  00F5               	movwf	??_main
   473  0070  0875               	movf	??_main,w
   474  0071  00F8               	movwf	_nib
   475  0072                     l763:
   476                           
   477                           ;newmain.c: 139:             tabla(nib);
   478  0072  0878               	movf	_nib,w
   479  0073  120A  118A  20BF  120A  118A  	fcall	_tabla
   480  0078                     l765:
   481                           
   482                           ;newmain.c: 140:             PORTD = variable;
   483  0078  087B               	movf	_variable,w
   484  0079  1283               	bcf	3,5	;RP0=0, select bank0
   485  007A  1303               	bcf	3,6	;RP1=0, select bank0
   486  007B  0088               	movwf	8	;volatile
   487  007C                     l767:
   488                           
   489                           ;newmain.c: 144:             PORTEbits.RE0 = 1;
   490  007C  1409               	bsf	9,0	;volatile
   491  007D                     l769:
   492                           
   493                           ;newmain.c: 145:             multi = 0b00000001;
   494  007D  01FA               	clrf	_multi
   495  007E  0AFA               	incf	_multi,f
   496                           
   497                           ;newmain.c: 146:         } else {
   498  007F  28A0               	goto	l783
   499  0080                     l83:
   500                           
   501                           ;newmain.c: 148:             PORTEbits.RE0 = 0;
   502  0080  1283               	bcf	3,5	;RP0=0, select bank0
   503  0081  1303               	bcf	3,6	;RP1=0, select bank0
   504  0082  1009               	bcf	9,0	;volatile
   505  0083                     l771:
   506                           
   507                           ;newmain.c: 149:             nib = PORTC & 0b11110000;
   508  0083  0807               	movf	7,w	;volatile
   509  0084  39F0               	andlw	240
   510  0085  00F5               	movwf	??_main
   511  0086  0875               	movf	??_main,w
   512  0087  00F8               	movwf	_nib
   513  0088                     l773:
   514                           
   515                           ;newmain.c: 150:             nib = nib >> 4;
   516  0088  0878               	movf	_nib,w
   517  0089  00F5               	movwf	??_main
   518  008A  3004               	movlw	4
   519  008B                     u65:
   520  008B  1003               	clrc
   521  008C  0CF5               	rrf	??_main,f
   522  008D  3EFF               	addlw	-1
   523  008E  1D03               	skipz
   524  008F  288B               	goto	u65
   525  0090  0875               	movf	??_main,w
   526  0091  00F6               	movwf	??_main+1
   527  0092  0876               	movf	??_main+1,w
   528  0093  00F8               	movwf	_nib
   529  0094                     l775:
   530                           
   531                           ;newmain.c: 151:             tabla(nib);
   532  0094  0878               	movf	_nib,w
   533  0095  120A  118A  20BF  120A  118A  	fcall	_tabla
   534  009A                     l777:
   535                           
   536                           ;newmain.c: 152:             PORTD = variable;
   537  009A  087B               	movf	_variable,w
   538  009B  1283               	bcf	3,5	;RP0=0, select bank0
   539  009C  1303               	bcf	3,6	;RP1=0, select bank0
   540  009D  0088               	movwf	8	;volatile
   541  009E                     l779:
   542                           
   543                           ;newmain.c: 157:             PORTEbits.RE1 = 1;
   544  009E  1489               	bsf	9,1	;volatile
   545  009F                     l781:
   546                           
   547                           ;newmain.c: 158:             multi = 0b00000000;
   548  009F  01FA               	clrf	_multi
   549  00A0                     l783:
   550                           
   551                           ;newmain.c: 161:         _delay((unsigned long)((5)*(8000000/4000.0)));
   552  00A0  300D               	movlw	13
   553  00A1  00F6               	movwf	??_main+1
   554  00A2  30FB               	movlw	251
   555  00A3  00F5               	movwf	??_main
   556  00A4                     u107:
   557  00A4  0BF5               	decfsz	??_main,f
   558  00A5  28A4               	goto	u107
   559  00A6  0BF6               	decfsz	??_main+1,f
   560  00A7  28A4               	goto	u107
   561  00A8  28A9               	nop2
   562  00A9                     l785:
   563                           
   564                           ;newmain.c: 162:         ADCON0bits.GO = 1;
   565  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   566  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   567  00AB  149F               	bsf	31,1	;volatile
   568  00AC                     l787:
   569                           
   570                           ;newmain.c: 163:         _delay((unsigned long)((5)*(8000000/4000.0)));
   571  00AC  300D               	movlw	13
   572  00AD  00F6               	movwf	??_main+1
   573  00AE  30FB               	movlw	251
   574  00AF  00F5               	movwf	??_main
   575  00B0                     u117:
   576  00B0  0BF5               	decfsz	??_main,f
   577  00B1  28B0               	goto	u117
   578  00B2  0BF6               	decfsz	??_main+1,f
   579  00B3  28B0               	goto	u117
   580  00B4  28B5               	nop2
   581  00B5                     l789:
   582                           
   583                           ;newmain.c: 164:         adece = ADRESH;
   584  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   585  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   586  00B7  081E               	movf	30,w	;volatile
   587  00B8  00F5               	movwf	??_main
   588  00B9  0875               	movf	??_main,w
   589  00BA  00F9               	movwf	_adece
   590  00BB  281C               	goto	l735
   591  00BC  120A  118A  280C   	ljmp	start
   592  00BF                     __end_of_main:
   593                           
   594                           	psect	text1
   595  00BF                     __ptext1:	
   596 ;; *************** function _tabla *****************
   597 ;; Defined at:
   598 ;;		line 54 in file "newmain.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  nib             1    wreg     unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  nib             1    4[COMMON] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0
   614 ;;      Temps:          2       0       0       0       0
   615 ;;      Totals:         3       0       0       0       0
   616 ;;Total ram usage:        3 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _tabla
   628  00BF                     _tabla:
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   632                           ;tabla@nib stored from wreg
   633  00BF  00F4               	movwf	tabla@nib
   634  00C0                     l691:
   635                           
   636                           ;newmain.c: 55:     switch (nib) {
   637  00C0  2907               	goto	l727
   638  00C1                     l693:
   639                           
   640                           ;newmain.c: 57:             variable = 0b00111111;
   641  00C1  303F               	movlw	63
   642  00C2  00F2               	movwf	??_tabla
   643  00C3  0872               	movf	??_tabla,w
   644  00C4  00FB               	movwf	_variable
   645                           
   646                           ;newmain.c: 58:             break;
   647  00C5  2941               	goto	l71
   648  00C6                     l695:
   649                           
   650                           ;newmain.c: 60:             variable = 0b00000110;
   651  00C6  3006               	movlw	6
   652  00C7  00F2               	movwf	??_tabla
   653  00C8  0872               	movf	??_tabla,w
   654  00C9  00FB               	movwf	_variable
   655                           
   656                           ;newmain.c: 61:             break;
   657  00CA  2941               	goto	l71
   658  00CB                     l697:
   659                           
   660                           ;newmain.c: 63:             variable = 0b01011011;
   661  00CB  305B               	movlw	91
   662  00CC  00F2               	movwf	??_tabla
   663  00CD  0872               	movf	??_tabla,w
   664  00CE  00FB               	movwf	_variable
   665                           
   666                           ;newmain.c: 64:             break;
   667  00CF  2941               	goto	l71
   668  00D0                     l699:
   669                           
   670                           ;newmain.c: 66:             variable = 0b01001111;
   671  00D0  304F               	movlw	79
   672  00D1  00F2               	movwf	??_tabla
   673  00D2  0872               	movf	??_tabla,w
   674  00D3  00FB               	movwf	_variable
   675                           
   676                           ;newmain.c: 67:             break;
   677  00D4  2941               	goto	l71
   678  00D5                     l701:
   679                           
   680                           ;newmain.c: 69:             variable = 0b01100110;
   681  00D5  3066               	movlw	102
   682  00D6  00F2               	movwf	??_tabla
   683  00D7  0872               	movf	??_tabla,w
   684  00D8  00FB               	movwf	_variable
   685                           
   686                           ;newmain.c: 70:             break;
   687  00D9  2941               	goto	l71
   688  00DA                     l703:
   689                           
   690                           ;newmain.c: 72:             variable = 0b01101101;
   691  00DA  306D               	movlw	109
   692  00DB  00F2               	movwf	??_tabla
   693  00DC  0872               	movf	??_tabla,w
   694  00DD  00FB               	movwf	_variable
   695                           
   696                           ;newmain.c: 73:             break;
   697  00DE  2941               	goto	l71
   698  00DF                     l705:
   699                           
   700                           ;newmain.c: 75:             variable = 0b01111101;
   701  00DF  307D               	movlw	125
   702  00E0  00F2               	movwf	??_tabla
   703  00E1  0872               	movf	??_tabla,w
   704  00E2  00FB               	movwf	_variable
   705                           
   706                           ;newmain.c: 76:             break;
   707  00E3  2941               	goto	l71
   708  00E4                     l707:
   709                           
   710                           ;newmain.c: 78:             variable = 0b00000111;
   711  00E4  3007               	movlw	7
   712  00E5  00F2               	movwf	??_tabla
   713  00E6  0872               	movf	??_tabla,w
   714  00E7  00FB               	movwf	_variable
   715                           
   716                           ;newmain.c: 79:             break;
   717  00E8  2941               	goto	l71
   718  00E9                     l709:
   719                           
   720                           ;newmain.c: 81:             variable = 0b01111111;
   721  00E9  307F               	movlw	127
   722  00EA  00F2               	movwf	??_tabla
   723  00EB  0872               	movf	??_tabla,w
   724  00EC  00FB               	movwf	_variable
   725                           
   726                           ;newmain.c: 82:             break;
   727  00ED  2941               	goto	l71
   728  00EE                     l711:
   729                           
   730                           ;newmain.c: 84:             variable = 0b01100111;
   731  00EE  3067               	movlw	103
   732  00EF  00F2               	movwf	??_tabla
   733  00F0  0872               	movf	??_tabla,w
   734  00F1  00FB               	movwf	_variable
   735                           
   736                           ;newmain.c: 85:             break;
   737  00F2  2941               	goto	l71
   738  00F3                     l713:
   739                           
   740                           ;newmain.c: 87:             variable = 0b01110111;
   741  00F3  3077               	movlw	119
   742  00F4  00F2               	movwf	??_tabla
   743  00F5  0872               	movf	??_tabla,w
   744  00F6  00FB               	movwf	_variable
   745                           
   746                           ;newmain.c: 88:             break;
   747  00F7  2941               	goto	l71
   748  00F8                     l717:
   749                           
   750                           ;newmain.c: 93:             variable = 0b00111001;
   751  00F8  3039               	movlw	57
   752  00F9  00F2               	movwf	??_tabla
   753  00FA  0872               	movf	??_tabla,w
   754  00FB  00FB               	movwf	_variable
   755                           
   756                           ;newmain.c: 94:             break;
   757  00FC  2941               	goto	l71
   758  00FD                     l721:
   759                           
   760                           ;newmain.c: 99:             variable = 0b01111001;
   761  00FD  3079               	movlw	121
   762  00FE  00F2               	movwf	??_tabla
   763  00FF  0872               	movf	??_tabla,w
   764  0100  00FB               	movwf	_variable
   765                           
   766                           ;newmain.c: 100:             break;
   767  0101  2941               	goto	l71
   768  0102                     l723:
   769                           
   770                           ;newmain.c: 102:             variable = 0b01110001;
   771  0102  3071               	movlw	113
   772  0103  00F2               	movwf	??_tabla
   773  0104  0872               	movf	??_tabla,w
   774  0105  00FB               	movwf	_variable
   775                           
   776                           ;newmain.c: 103:             break;
   777  0106  2941               	goto	l71
   778  0107                     l727:
   779  0107  0874               	movf	tabla@nib,w
   780  0108  00F2               	movwf	??_tabla
   781  0109  01F3               	clrf	??_tabla+1
   782                           
   783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 1, Range of values is 0 to 0
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte            4     3 (average)
   789                           ; direct_byte           11     8 (fixed)
   790                           ; jumptable            260     6 (fixed)
   791                           ;	Chosen strategy is simple_byte
   792  010A  0873               	movf	??_tabla+1,w
   793  010B  3A00               	xorlw	0	; case 0
   794  010C  1903               	skipnz
   795  010D  290F               	goto	l811
   796  010E  2941               	goto	l71
   797  010F                     l811:
   798                           
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 16, Range of values is 0 to 15
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte           49    25 (average)
   804                           ; direct_byte           56     8 (fixed)
   805                           ; jumptable            260     6 (fixed)
   806                           ;	Chosen strategy is simple_byte
   807  010F  0872               	movf	??_tabla,w
   808  0110  3A00               	xorlw	0	; case 0
   809  0111  1903               	skipnz
   810  0112  28C1               	goto	l693
   811  0113  3A01               	xorlw	1	; case 1
   812  0114  1903               	skipnz
   813  0115  28C6               	goto	l695
   814  0116  3A03               	xorlw	3	; case 2
   815  0117  1903               	skipnz
   816  0118  28CB               	goto	l697
   817  0119  3A01               	xorlw	1	; case 3
   818  011A  1903               	skipnz
   819  011B  28D0               	goto	l699
   820  011C  3A07               	xorlw	7	; case 4
   821  011D  1903               	skipnz
   822  011E  28D5               	goto	l701
   823  011F  3A01               	xorlw	1	; case 5
   824  0120  1903               	skipnz
   825  0121  28DA               	goto	l703
   826  0122  3A03               	xorlw	3	; case 6
   827  0123  1903               	skipnz
   828  0124  28DF               	goto	l705
   829  0125  3A01               	xorlw	1	; case 7
   830  0126  1903               	skipnz
   831  0127  28E4               	goto	l707
   832  0128  3A0F               	xorlw	15	; case 8
   833  0129  1903               	skipnz
   834  012A  28E9               	goto	l709
   835  012B  3A01               	xorlw	1	; case 9
   836  012C  1903               	skipnz
   837  012D  28EE               	goto	l711
   838  012E  3A03               	xorlw	3	; case 10
   839  012F  1903               	skipnz
   840  0130  28F3               	goto	l713
   841  0131  3A01               	xorlw	1	; case 11
   842  0132  1903               	skipnz
   843  0133  28E9               	goto	l709
   844  0134  3A07               	xorlw	7	; case 12
   845  0135  1903               	skipnz
   846  0136  28F8               	goto	l717
   847  0137  3A01               	xorlw	1	; case 13
   848  0138  1903               	skipnz
   849  0139  28C1               	goto	l693
   850  013A  3A03               	xorlw	3	; case 14
   851  013B  1903               	skipnz
   852  013C  28FD               	goto	l721
   853  013D  3A01               	xorlw	1	; case 15
   854  013E  1903               	skipnz
   855  013F  2902               	goto	l723
   856  0140  2941               	goto	l71
   857  0141                     l71:
   858  0141  0008               	return
   859  0142                     __end_of_tabla:
   860                           
   861                           	psect	text2
   862  0142                     __ptext2:	
   863 ;; *************** function _setup *****************
   864 ;; Defined at:
   865 ;;		line 21 in file "newmain.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         0       0       0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _setup
   895  0142                     _setup:
   896  0142                     l679:	
   897                           ;incstack = 0
   898                           ; Regs used in _setup: [wreg+status,2]
   899                           
   900                           
   901                           ;newmain.c: 23:     PORTA = 0;
   902  0142  1283               	bcf	3,5	;RP0=0, select bank0
   903  0143  1303               	bcf	3,6	;RP1=0, select bank0
   904  0144  0185               	clrf	5	;volatile
   905                           
   906                           ;newmain.c: 24:     PORTB = 0;
   907  0145  0186               	clrf	6	;volatile
   908                           
   909                           ;newmain.c: 25:     PORTC = 0;
   910  0146  0187               	clrf	7	;volatile
   911                           
   912                           ;newmain.c: 26:     PORTD = 0;
   913  0147  0188               	clrf	8	;volatile
   914                           
   915                           ;newmain.c: 27:     PORTE = 0;
   916  0148  0189               	clrf	9	;volatile
   917  0149                     l681:
   918                           
   919                           ;newmain.c: 29:     ANSEL = 0b00000001;
   920  0149  3001               	movlw	1
   921  014A  1683               	bsf	3,5	;RP0=1, select bank3
   922  014B  1703               	bsf	3,6	;RP1=1, select bank3
   923  014C  0088               	movwf	8	;volatile
   924  014D                     l683:
   925                           
   926                           ;newmain.c: 30:     ANSELH = 0;
   927  014D  0189               	clrf	9	;volatile
   928  014E                     l685:
   929                           
   930                           ;newmain.c: 32:     TRISA = 0;
   931  014E  1683               	bsf	3,5	;RP0=1, select bank1
   932  014F  1303               	bcf	3,6	;RP1=0, select bank1
   933  0150  0185               	clrf	5	;volatile
   934  0151                     l687:
   935                           
   936                           ;newmain.c: 33:     TRISB = 0b00000011;
   937  0151  3003               	movlw	3
   938  0152  0086               	movwf	6	;volatile
   939                           
   940                           ;newmain.c: 34:     TRISC = 0;
   941  0153  0187               	clrf	7	;volatile
   942                           
   943                           ;newmain.c: 35:     TRISD = 0;
   944  0154  0188               	clrf	8	;volatile
   945                           
   946                           ;newmain.c: 36:     TRISE = 0;
   947  0155  0189               	clrf	9	;volatile
   948  0156                     l37:
   949  0156  0008               	return
   950  0157                     __end_of_setup:
   951                           
   952                           	psect	text3
   953  0157                     __ptext3:	
   954 ;; *************** function _isr *****************
   955 ;; Defined at:
   956 ;;		line 49 in file "newmain.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		None
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0
   973 ;;      Totals:         2       0       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		Interrupt level 1
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _isr
   985  0157                     _isr:
   986  0157                     i1l50:
   987  0157  0871               	movf	??_isr+1,w
   988  0158  008A               	movwf	10
   989  0159  0E70               	swapf	??_isr,w
   990  015A  0083               	movwf	3
   991  015B  0EFE               	swapf	btemp,f
   992  015C  0E7E               	swapf	btemp,w
   993  015D  0009               	retfie
   994  015E                     __end_of_isr:
   995  007E                     btemp	set	126	;btemp
   996  007E                     wtemp0	set	126
   997                           
   998                           	psect	intentry
   999  0004                     __pintentry:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _isr: []
  1002                           
  1003  0004                     interrupt_function:
  1004  007E                     saved_w	set	btemp
  1005  0004  00FE               	movwf	btemp
  1006  0005  0E03               	swapf	3,w
  1007  0006  00F0               	movwf	??_isr
  1008  0007  080A               	movf	10,w
  1009  0008  00F1               	movwf	??_isr+1
  1010  0009  120A  118A  2957   	ljmp	_isr
  1011                           
  1012                           	psect	config
  1013                           
  1014                           ;Config register CONFIG1 @ 0x2007
  1015                           ;	Oscillator Selection bits
  1016                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1017                           ;	Watchdog Timer Enable bit
  1018                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1019                           ;	Power-up Timer Enable bit
  1020                           ;	PWRTE = OFF, PWRT disabled
  1021                           ;	RE3/MCLR pin function select bit
  1022                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1023                           ;	Code Protection bit
  1024                           ;	CP = OFF, Program memory code protection is disabled
  1025                           ;	Data Code Protection bit
  1026                           ;	CPD = OFF, Data memory code protection is disabled
  1027                           ;	Brown Out Reset Selection bits
  1028                           ;	BOREN = OFF, BOR disabled
  1029                           ;	Internal External Switchover bit
  1030                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1031                           ;	Fail-Safe Clock Monitor Enabled bit
  1032                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1033                           ;	Low Voltage Programming Enable bit
  1034                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1035                           ;	In-Circuit Debugger Mode bit
  1036                           ;	DEBUG = 0x1, unprogrammed default
  1037  2007                     	org	8199
  1038  2007  20D1               	dw	8401
  1039                           
  1040                           ;Config register CONFIG2 @ 0x2008
  1041                           ;	Brown-out Reset Selection bit
  1042                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1043                           ;	Flash Program Memory Self Write Enable bits
  1044                           ;	WRT = OFF, Write protection off
  1045  2008                     	org	8200
  1046  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tabla

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              5 COMMON     3     3      0
                              _setup
                              _tabla
 ---------------------------------------------------------------------------------
 (1) _tabla                                                3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _tabla

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 09:54:48 2021

                     l37 0156                       l71 0141                       l83 0080  
                     u10 0022                       u11 0021                       u20 0027  
                     u21 0026                       u30 0040                       u31 003F  
                     u40 0045                       u41 0044                       u50 006A  
                     u51 0069                       u65 008B                       u77 002E  
                     u87 004D                       u97 005E                      l701 00D5  
                    l711 00EE                      l703 00DA                      l721 00FD  
                    l713 00F3                      l705 00DF                      l811 010F  
                    l723 0102                      l707 00E4                      l717 00F8  
                    l709 00E9                      l741 0028                      l733 0017  
                    l727 0107                      l751 0045                      l743 0036  
                    l735 001C                      l681 0149                      l761 006D  
                    l753 0055                      l737 0022                      l683 014D  
                    l691 00C0                      l771 0083                      l763 0072  
                    l755 0058                      l739 0027                      l747 003A  
                    l685 014E                      l693 00C1                      l781 009F  
                    l773 0088                      l765 0078                      l749 0040  
                    l757 0065                      l687 0151                      l679 0142  
                    l695 00C6                      l775 0094                      l783 00A0  
                    l767 007C                      l759 006A                      l697 00CB  
                    l785 00A9                      l777 009A                      l769 007D  
                    l699 00D0                      l787 00AC                      l779 009E  
                    l789 00B5                      u107 00A4                      u117 00B0  
                    _nib 0078                      _isr 0157                     ?_isr 0070  
                   i1l50 0157                     _main 0017                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _adece 0079  
                  _tabla 00BF                    _multi 007A                    _setup 0142  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00BF                   ??_main 0075  
                 ?_tabla 0070                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_tabla 0142            __end_of_setup 0157  
                ??_tabla 0072                  ??_setup 0072               __pmaintext 0017  
             __pintentry 0004                  __ptext1 00BF                  __ptext2 0142  
                __ptext3 0157             __size_of_isr 0007     end_of_initialization 0013  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 000F  
            __end_of_isr 015E              __pbssCOMMON 0078                ___latbits 0002  
         __size_of_tabla 0083           __size_of_setup 0015        interrupt_function 0004  
             _ADCON0bits 001F            __size_of_main 00A8                 _variable 007B  
               tabla@nib 0074                 intlevel1 0000  
